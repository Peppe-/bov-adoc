# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2014-11-07 16:24+0000\n"
"PO-Revision-Date: 2014-11-08 01:25+0900\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"X-Generator: Poedit 1.6.5\n"

#. Tag: title
#: chapter-clientsidewidgets.xml:11
#, no-c-format
msgid "Client-Side Widgets"
msgstr "客户端 Widget"

#. Tag: para
#: chapter-clientsidewidgets.xml:13
#, no-c-format
msgid ""
"This chapter gives basic documentation on the use of the Vaadin client-side "
"framework for the purposes of creating client-side applications and writing "
"your own widgets."
msgstr ""
"本章概要介绍如何使用 Vaadin 客户端 Framework 来创建客户端应用程序和你自己的 "
"widget."

#. Tag: emphasis
#: chapter-clientsidewidgets.xml:20
#, no-c-format
msgid ""
"Currently, we only give a brief introduction to the topic in this chapter. "
"Please refer to the GWT documentation for a more complete treatment of the "
"GWT widgets."
msgstr ""
"关于这个主题, 目前我们在本章中只给出一个极简单的介绍. 关于 GWT widget 的更详"
"细信息, 请参见 GWT 文档."

#. Tag: title
#: chapter-clientsidewidgets.xml:26
#, no-c-format
msgid "Overview"
msgstr "概述"

#. Tag: para
#: chapter-clientsidewidgets.xml:28
#, no-c-format
msgid ""
"The Vaadin client-side API is based on the Google Web Toolkit. It involves "
"<emphasis>widgets</emphasis> for representing the user interface as Java "
"objects, which are rendered as a HTML DOM in the browser. Events caused by "
"user interaction with the page are delegated to event handlers, where you "
"can implement your UI logic."
msgstr ""
"Vaadin 客户端 API 是基于 Google Web Toolkit 开发的. 它引入了 "
"<emphasis>widget</emphasis> 的概念, 目的是使用 Java 对象来表达 UI 元素, 在浏"
"览器中 UI 元素最终展现为 HTML DOM 元素. 用户在页面中的操作导致的事件, 会被转"
"发给事件处理器, 你可以在事件处理器实现你的 UI 逻辑."

#. Tag: para
#: chapter-clientsidewidgets.xml:36
#, no-c-format
msgid ""
"In general, the client-side widgets come in two categories - basic GWT "
"widgets and Vaadin-specific widgets. The library includes "
"<emphasis>connectors</emphasis> for integrating the Vaadin-specific widgets "
"with the server-side components, thereby enabling the server-side "
"development model of Vaadin. The integration is described in <xref linkend="
"\"gwt\"/>."
msgstr ""
"通常, 客户端 widget 分为两大类 - 基本的 GWT widget, 以及 Vaadin 独有的 "
"widget. Vaadin 库中包含了 <emphasis>连接器(connector)</emphasis>, 用来实现 "
"Vaadin 独有的 widget 与对应的服务器端组件的集成, 这是 Vaadin 的服务器端开发模"
"型的基础. 关于 widget 与服务器端组件的集成, 详情请参见 <xref linkend=\"gwt\"/"
">."

#. Tag: para
#: chapter-clientsidewidgets.xml:44
#, no-c-format
msgid ""
"The layout of the client-side UI is managed with <emphasis>panel</emphasis> "
"widgets, which correspond in their function with layout components in the "
"Vaadin server-side API."
msgstr ""
"客户端 UI 的布局由 <emphasis>panel</emphasis> widget 来管理, 这个 widget 的功"
"能等同于 Vaadin 服务器端 API 中的布局组件."

#. Tag: para
#: chapter-clientsidewidgets.xml:50
#, no-c-format
msgid ""
"In addition to the rendering API, the client-side API includes facilities "
"for making HTTP requests, logging, accessibility, internationalization, and "
"testing."
msgstr ""
"客户端 API 中, 除了显示 API 外, 还包括创建 HTTP 请求, 输出日志, 支持残障用户"
"操作的辅助功能(accessibility), 国际化, 以及测试, 等等各种功能."

#. Tag: para
#: chapter-clientsidewidgets.xml:56
#, no-c-format
msgid ""
"For information about the basic GWT framework, please refer to <link xlink:"
"href=\"https://developers.google.com/web-toolkit/overview\">https://"
"developers.google.com/web-toolkit/overview</link>."
msgstr ""
"关于 GWT 基本 Framework 的详情, 请参见 <link xlink:href=\"https://developers."
"google.com/web-toolkit/overview\">https://developers.google.com/web-toolkit/"
"overview</link>."

#. Tag: title
#: chapter-clientsidewidgets.xml:63
#, no-c-format
msgid "GWT Widgets"
msgstr "GWT Widget"

#. Tag: para
#: chapter-clientsidewidgets.xml:65
#, no-c-format
msgid ""
"GWT widgets are user interface elements that are rendered as HTML. Rendering "
"is done either by manipulating the HTML Document Object Model (DOM) through "
"the lower-level DOM API, or simply by injecting the HTML with "
"<methodname>setInnerHTML()</methodname>. The layout of the user interface is "
"managed using special panel widgets."
msgstr ""
"GWT widget 是一组展现为 HTML 的 UI 元素. 使用 HTML 来展现 UI 元素, 有两种实现"
"方式: 通过低阶的 DOM API 来操纵 HTML 文档对象模型(DOM), 或者使用 "
"<methodname>setInnerHTML()</methodname> 方法简单地注入 HTML 代码. UI 的布局使"
"用特殊的 panel widget 来管理."

#. Tag: para
#: chapter-clientsidewidgets.xml:73
#, no-c-format
msgid ""
"For information about the basic GWT widgets, please refer to the GWT "
"Developer's Guide at <link xlink:href=\"https://developers.google.com/web-"
"toolkit/doc/latest/DevGuideUi\">https://developers.google.com/web-toolkit/"
"doc/latest/DevGuideUi</link>."
msgstr ""
"关于 GWT 基本 widget 的详细信息, 请参见 GWT 开发者向导, 地址是 <link xlink:"
"href=\"https://developers.google.com/web-toolkit/doc/latest/DevGuideUi"
"\">https://developers.google.com/web-toolkit/doc/latest/DevGuideUi</link>."

#. Tag: title
#: chapter-clientsidewidgets.xml:81
#, no-c-format
msgid "Vaadin Widgets"
msgstr "Vaadin Widget"

#. Tag: para
#: chapter-clientsidewidgets.xml:83
#, no-c-format
msgid ""
"Vaadin comes with a number of Vaadin-specific widgets in addition to the GWT "
"widgets, some of which you can use in pure client-side applications. The "
"Vaadin widgets have somewhat different feature set from the GWT widgets and "
"are foremost intended for integration with the server-side components, but "
"some may prove useful for client-side applications as well."
msgstr ""
"除 GWT widget 外, Vaadin 还附带了很多 Vaadin 独有的 widget, 这些 widget 中的"
"一部分可以在纯客户端应用程序中使用. Vaadin widget 的功能与 GWT widget 略有不"
"同, Vaadin widget 的初始目标是与服务器端组件相集成, 但其中的一部分 widget 也"
"可以在客户端应用程序中使用."

#. Tag: programlisting
#: chapter-clientsidewidgets.xml:91
#, no-c-format
msgid ""
"<![CDATA[public class MyEntryPoint implements EntryPoint {\n"
"    @Override\n"
"    public void onModuleLoad() {\n"
"        // Add a Vaadin button\n"
"        VButton button = new VButton();\n"
"        button.setText(\"Click me!\");\n"
"        button.addClickHandler(new ClickHandler() {\n"
"            @Override\n"
"            public void onClick(ClickEvent event) {\n"
"                mywidget.setText(\"Clicked!\");\n"
"            }\n"
"        });\n"
"        \n"
"        RootPanel.get().add(button);\n"
"    }\n"
"}]]>"
msgstr ""
