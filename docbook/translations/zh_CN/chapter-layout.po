# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2014-11-01 21:12+0000\n"
"PO-Revision-Date: 2014-11-03 01:29+0900\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"X-Generator: Poedit 1.6.5\n"

#. Tag: title
#: chapter-layout.xml:11
#, no-c-format
msgid "Managing Layout"
msgstr "布局管理"

#. Tag: para
#: chapter-layout.xml:13
#, no-c-format
msgid ""
"Ever since the ancient xeroxians invented graphical user interfaces, "
"programmers have wanted to make GUI programming ever easier for themselves. "
"Solutions started simple. When GUIs appeared on PC desktops, practically all "
"screens were of the VGA type and fixed into 640x480 size. Mac or X Window "
"System on UNIX were not much different. Everyone was so happy with such "
"awesome graphics resolutions that they never thought that an application "
"would have to work on a radically different screen size. At worst, screens "
"could only grow, they thought, giving more space for more windows. In the "
"80s, the idea of having a computer screen in your pocket was simply not "
"realistic. Hence, the GUI APIs allowed placing UI components using screen "
"coordinates. Visual Basic and some other systems provided an easy way for "
"the designer to drag and drop components on a fixed-sized window. One would "
"have thought that at least translators would have complained about the "
"awkwardness of such a solution, but apparently they were not, as non-"
"engineers, heard or at least cared about. At best, engineers could throw at "
"them a resource editor that would allow them to resize the UI components by "
"hand. Such was the spirit back then."
msgstr ""
"自从远古时代施乐公司发明图形用户界面(GUI, Graphical User Interface)以来, 程序"
"员们总是希望让 GUI 程序的开发变得更简单一些. 最初的解决方案很简单. 当 GUI 最"
"初出现在 PC 桌面时, 所有的显示器其实都是 VGA 类型, 而且分辨率是固定的 "
"640x480. Mac 或 UNIX 上的 X Window 系统实际上区别不大. 这个图像分辨率很棒, 大"
"家都很开心, 从未想过应用程序还需要在一个完全不同的屏幕尺寸下运行. 他们认为最"
"坏的情况下, 屏幕也只会变得更大, 出现更大的空间可以排放更多的窗口. 在 80 年"
"代, 在你的口袋里放一个计算机显示器纯粹是不现实的想法. 因此, 这个时代的 GUI "
"API 允许使用屏幕坐标来放置 UI 组件. Visual Basic 和其他开发系统, 为设计者提供"
"了很简单的方式, 可以在固定尺寸的窗口中拖放组件. 有些人可能会认为, 至少翻译人"
"员会抱怨这种方案太笨拙, 但身为非工程技术人员, 实际上根本没有人听他们的意见, "
"或者至少根本没人在意他们的意见. 最好的情况下, 开发者可以丢给他们一个资源编辑"
"器, 让他们手动调整 UI 组件的尺寸. 这就是当时关于 GUI 开发的基本理念."

#. Tag: para
#: chapter-layout.xml:35
#, no-c-format
msgid ""
"After the web was born, layout design was doomed to change for ever. At "
"first, layout didn't matter much, as everyone was happy with plain headings, "
"paragraphs, and a few hyperlinks here and there. Designers of HTML wanted "
"the pages to run on any screen size. The screen size was actually not pixels "
"but rows and columns of characters, as the baby web was really just "
"hyper<emphasis>text</emphasis>, not graphics. That was soon to be changed. "
"The first GUI-based browser, NCSA Mosaic, launched a revolution that "
"culminated in Netscape Navigator. Suddenly, people who had previously been "
"doing advertisement brochures started writing HTML. This meant that layout "
"design had to be easy not just for programmers, but also allow the graphics "
"designer to do his or her job without having to know a thing about "
"programming. The W3C committee designing web standards came up with the CSS "
"(Cascading Style Sheet) specification, which allowed trivial separation of "
"appearance from content. Later versions of HTML followed, XHTML and HTML 5 "
"appeared, as did countless other standards."
msgstr ""
"Web 诞生之后, 布局设计注定要永远改变了. 起初, 布局并不怎么重要, 大家都满足于"
"平文的标题, 段落, 以及这里那里出现的少量超链接. HTML 设计者希望页面可以在任意"
"的屏幕尺寸上运行. 这时的屏幕尺寸实际上不是像素单位, 而是字符组成的行和列, 因"
"为婴儿期的 Web 确实只是超<emphasis>文本</emphasis> 而已, 而不是图像. 但这种情"
"况很快就变了. 第一个基于 GUI 的浏览器, NCSA Mosaic, 发起了一场革命, 由 "
"Netscape Navigator 将这场革命推向高潮. 一夜之间, 原先负责做广告招贴画的那些人"
"们现在开始写 HTML 了. 这就意味着, 布局的设计必须是简单的, 不仅是对程序员如"
"此, 还要让美工设计人员不必具备任何编程知识也能完成他/她的工作. W3C 委员会设计"
"的 Web 标准提出了 CSS (Cascading Style Sheet, 层叠样式表) 规范, 这个规范使得"
"表现可以与内容分离, 但分离的程度不高. HTML 延续了几个新版本, 后来又出现了 "
"XHTML 和 HTML 5, 以及不计其数的其他标准."

#. Tag: para
#: chapter-layout.xml:54
#, no-c-format
msgid ""
"Page description and markup languages are a wonderful solution for static "
"presentations, such as books and most web pages. Real applications, however, "
"need to have more control. They need to be able to change the state of user "
"interface components and even their layout on the run. This creates a need "
"to separate the presentation from content on exactly the right level."
msgstr ""
"页面描述和标记语言对于静态内容来说是非常不错的解决方案, 比如书和大多数 Web 页"
"面. 但是真正的应用程序则需要更多的控制. 它们需要能够在运行中改变 UI 组件的状"
"态, 甚至改变组件的布局. 这个就导致了一个需求, 应该在正确的层次上, 将表现与内"
"容分离开."

#. Tag: para
#: chapter-layout.xml:68
#, no-c-format
msgid ""
"Thanks to the attack of graphics designers, desktop applications were, when "
"it comes to appearance, far behind web design. Sun Microsystems had come in "
"1995 with a new programming language, Java, for writing cross-platform "
"desktop applications. Java's original graphical user interface toolkit, AWT "
"(Abstract Windowing Toolkit), was designed to work on multiple operating "
"systems as well as embedded in web browsers. One of the special aspects of "
"AWT was the layout manager, which allowed user interface components to be "
"flexible, growing and shrinking as needed. This made it possible for the "
"user to resize the windows of an application flexibly and also served the "
"needs of localization, as text strings were not limited to some fixed size "
"in pixels. It became even possible to resize the pixel size of fonts, and "
"the rest of the layout adapted to the new size."
msgstr ""
"感谢美工设计人员的攻击, 桌面应用程序, 从它出现的时候开始, 远远落后于 Web 设"
"计. Sun Microsystems 公司于 1995 年发布了一个新的编程语言, Java, 用来编写跨平"
"台的桌面应用程序. Java 最初的 GUI 开发工具, AWT (Abstract Windowing "
"Toolkit), 被设计为可运行在多种操作系统上, 而且还能嵌入到 Web 浏览器中. AWT 中"
"很特别的一部分就是布局管理器, 它使得 UI 组件可以按照需要灵活地扩大或缩小. 这"
"就使得用户可以灵活地拉伸应用程序的窗口大小, 而且也解决了本地化的需要, 因为文"
"本字符串的尺寸不再被限定为固定像素单位了. 甚至还可以调整字体的尺寸, 布局的其"
"他部分会自动适应新的字体大小."

#. Tag: para
#: chapter-layout.xml:83
#, no-c-format
msgid ""
"Layout management of Vaadin is a direct successor of the web-based concept "
"for separation of content and appearance and of the Java AWT solution for "
"binding the layout and user interface components into objects in programs. "
"Vaadin layout components allow you to position your UI components on the "
"screen in a hierarchical fashion, much like in conventional Java UI toolkits "
"such as AWT, Swing, or SWT. In addition, you can approach the layout from "
"the direction of the web with the <classname>CustomLayout</classname> "
"component, which you can use to write your layout as a template in HTML that "
"provides locations of any contained components. The "
"<classname>AbsoluteLayout</classname> allows the old-style pixel-position "
"based layouting, but it also supports percentual values, which makes it "
"usable for scalable layouts. It is also useful as an area on which the user "
"can position items with drag and drop."
msgstr ""
"Vaadin 中的布局管理继承了 Web 中内容与表现分离的理念, 也继承了 Java AWT 的解"
"决方案, 使用程序将布局与 UI 组件绑定起来. Vaadin 布局管理组件允许你将 UI 组件"
"使用层级方式布置到屏幕上, 类似于传统的 Java UI 开发工具, 比如 AWT, Swing, 或 "
"SWT. 此外, 你还可以通过 Web 方式来控制布局, 使用 <classname>CustomLayout</"
"classname> 组件你可以用 HTML 模板的方式编写布局, 这个模板决定布局中包含的所有"
"组件的位置. 也可以使用 <classname>AbsoluteLayout</classname> 来实现老式的基于"
"像素位置的布局控制, 但除像素单位外, 它也支持百分比单位, 对于可伸缩的布局很有"
"用. 这个布局管理器作为一个组件拖放区域也是很有用的, 用户可以通过拖放操作来移"
"动组件的位置."

#. Tag: para
#: chapter-layout.xml:98
#, no-c-format
msgid ""
"The moral of the story is that, because Vaadin is intended for web "
"applications, appearance is of high importance. The solutions have to be the "
"best of both worlds and satisfy artists of both kind: code and graphics. On "
"the API side, the layout is controlled by UI components, particularly the "
"layout components. On the visual side, it is controlled by themes. Themes "
"can contain any HTML, Sass, CSS, and JavaScript that you or your web artists "
"create to make people feel good about your software."
msgstr ""
"这段故事的含义是, 由于 Vaadin 的目的是开发 Web 应用程序, 因此外观表现是很重要"
"的. 解决方案必须在两个世界中都是最佳的, 要满足两种艺术: 编程和美工. 在 API 这"
"一边, 布局由 UI 组件控制, 具体来说是布局管理组件. 在可视外观那一边, 布局由 "
"Theme 控制. Theme 可以包含任意的 HTML, Sass, CSS, 以及 JavaScript, 由你或者你"
"的 Web 设计人员创建这些内容, 以便为你的软件的使用者们提供更好的体验."

#. Tag: title
#: chapter-layout.xml:109
#, no-c-format
msgid "Overview"
msgstr "概述"

#. Tag: para
#: chapter-layout.xml:111
#, no-c-format
msgid ""
"The user interface components in Vaadin can roughly be divided in two "
"groups: components that the user can interact with and layout components for "
"placing the other components to specific places in the user interface. The "
"layout components are identical in their purpose to layout managers in "
"regular desktop frameworks for Java and you can use plain Java to accomplish "
"sophisticated component layouting."
msgstr ""
"Vaadin 中的 UI 组件大体上可以分为两组: 用户可以与之交互的组件, 以及用于在 UI "
"中将其他组件放置到特定位置的布局管理组件. 布局管理组件的目的, 与通常的 Java "
"桌面应用程序开发框架中的布局管理器是一致的. 你可以使用简单的 Java 程序来实现"
"复杂的组件布局管理."

#. Tag: para
#: chapter-layout.xml:120
#, no-c-format
msgid ""
"You start by creating a content layout for the UI and then add other layout "
"components hierarchically, and finally the interaction components as the "
"leaves of the component tree."
msgstr ""
"你首先要创建一个布局作为整个 UI 的内容, 然后逐层添加布局管理组件, 最后在组件"
"层次树的最下层添加用户交互组件."

#. Tag: programlisting
#: chapter-layout.xml:126
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// Set the root layout for the UI\n"
"VerticalLayout content = new VerticalLayout();\n"
"setContent(content);\n"
"\n"
"// Add the topmost component.\n"
"content.addComponent(new Label(\"The Ultimate Cat Finder\"));\n"
"\n"
"// Add a horizontal layout for the bottom part.\n"
"HorizontalLayout bottom = new HorizontalLayout();\n"
"content.addComponent(bottom);\n"
"\n"
"bottom.addComponent(new Tree(\"Major Planets and Their Moons\"));\n"
"bottom.addComponent(new Panel());\n"
"...]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:128
#, no-c-format
msgid ""
"You will usually need to tune the layout components a bit by setting sizes, "
"expansion ratios, alignments, spacings, and so on. The general settings are "
"described in <xref linkend=\"layout.settings\"/>."
msgstr ""
"你通常需要轻微的调整布局管理组件, 设置它的尺寸, 扩张比例, 对齐方式, 间隔空"
"白, 等等. 通常的设定请参见 <xref linkend=\"layout.settings\"/>."

#. Tag: para
#: chapter-layout.xml:134
#, no-c-format
msgid ""
"Layouts are coupled with themes that specify various layout features, such "
"as backgrounds, borders, text alignment, and so on. Definition and use of "
"themes is described in <xref linkend=\"themes\"/>"
msgstr ""
"布局是与 Theme 对应的, Theme 指定了布局的很多特性, 比如背景, 边框, 文字对齐方"
"向, 等等. Theme 的定义和使用请参见 <xref linkend=\"themes\"/>"

#. Tag: para
#: chapter-layout.xml:140
#, no-c-format
msgid ""
"You can see a finished version of the above example in <xref linkend="
"\"figure.layout.intro.simple\"/>."
msgstr ""
"上面示例程序的最终完成结果见 <xref linkend=\"figure.layout.intro.simple\"/>."

#. Tag: title
#: chapter-layout.xml:146
#, no-c-format
msgid "Layout Example"
msgstr "布局示例"

#. Tag: para
#: chapter-layout.xml:157
#, no-c-format
msgid ""
"The alternative for using layout components is to use the special "
"<classname>CustomLayout</classname> that allows using HTML templates. This "
"way, you can let the web page designers take responsibility of component "
"layouting using their own set of tools. What you lose is the ability to "
"manage the layout dynamically."
msgstr ""
"除了使用布局管理组件之外, 另一种替代方案是使用特别的 "
"<classname>CustomLayout</classname> 组件, 它允许使用 HTML 模板. 在这种方式"
"下, 你可以让 Web 页面设计人员使用他们自己的开发工具来负责组件的布局. 但你将失"
"去动态管理布局的能力."

#. Tag: title
#: chapter-layout.xml:166
#, no-c-format
msgid "The Visual Editor"
msgstr "可视化编辑器"

#. Tag: para
#: chapter-layout.xml:168
#, no-c-format
msgid ""
"While you can always program the layout by hand, the Vaadin plugin for the "
"Eclipse IDE includes a visual (WYSIWYG) editor that you can use to create "
"user interfaces visually. The editor generates the code that creates the "
"user interface and is useful for rapid application development and "
"prototyping. It is especially helpful when you are still learning the "
"framework, as the generated code, which is designed to be as reusable as "
"possible, also works as an example of how you create user interfaces with "
"Vaadin. You can find more about the editor in <xref linkend=\"eclipse\"/>."
msgstr ""
"你可以通过程序来手工维护布局, 但 Vaadin plugin for Eclipse IDE 也包含了可视化"
"(所见即所得, WYSIWYG)的编辑器, 你可以使用这个编辑器来创建 UI. 编辑器生成代"
"码, 这段代码会创建 UI, 这种方式对于快速应用程序开发和快速原型开发非常有用. 如"
"果你还在 Vaadin 框架的学习阶段, 它对你尤其有帮助, 因为自动生成的代码, 被设计"
"为可重用性尽量高, 因此它也是如何使用 Vaadin 创建 UI 的很好的示例. 关于可视化"
"编辑器, 参见 <xref linkend=\"eclipse\"/>."

#. Tag: title
#: chapter-layout.xml:183
#, no-c-format
msgid "UI, Window, and Panel Content"
msgstr "UI, Window, 以及 Panel 内容"

#. Tag: para
#: chapter-layout.xml:185
#, no-c-format
msgid ""
"The <classname>UI</classname>, <classname>Window</classname>, and its "
"superclass <classname>Panel</classname> all have a single content component, "
"which you need to set with <methodname>setContent()</methodname>. The "
"content is usually a layout component, although any component is allowed."
msgstr ""
"<classname>UI</classname>, <classname>Window</classname>, 以及它们的父类 "
"<classname>Panel</classname> 都含有单个的内容组件, 你需要使用 "
"<methodname>setContent()</methodname> 方法来设置这个内容组件. 内容通常是一个"
"布局管理组件, 当然其他任何组件也都是允许的."

#. Tag: programlisting
#: chapter-layout.xml:192
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[Panel panel = new Panel(\"This is a Panel\");\n"
"VerticalLayout panelContent = new VerticalLayout();\n"
"panelContent.addComponent(new Label(\"Hello!\"));\n"
"panel.setContent(panelContent);\n"
"\n"
"// Set the panel as the content of the UI\n"
"setContent(panel);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:194
#, no-c-format
msgid ""
"The size of the content is the default size of the particular layout "
"component, for example, a <classname>VerticalLayout</classname> has 100% "
"width and undefined height by default (this coincides with the defaults for "
"<classname>Panel</classname> and <classname>Label</classname>). If such a "
"layout with undefined height grows higher than the browser window, it will "
"flow out of the view and scrollbars will appear. In many applications, you "
"want to use the full area of the browser view. Setting the components "
"contained inside the content layout to full size is not enough, and would "
"actually lead to an invalid state if the height of the content layout is "
"undefined."
msgstr ""
"内容的尺寸就是特定的布局管理组件的默认尺寸, 比如, 一个 "
"<classname>VerticalLayout</classname> 的宽度为 100% , 高度则默认为未指定(恰巧"
"与 <classname>Panel</classname> 和 <classname>Label</classname> 的默认尺寸一"
"样). 这样一个未指定高度的布局, 如果它的高度超过浏览器窗口的高度, 它的一部分会"
"滚动到可见区域之外, 因此会出现滚动条. 在很多应用程序中, 你会希望使用浏览器可"
"见区域的全部空间. 将内容布局之内包含的组件设置为全尺寸是不够的, 而且, 如果内"
"容布局本身的高度未指定, 这样做还会导致一个不正确的状态."

#. Tag: programlisting
#: chapter-layout.xml:207
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// First set the root content for the UI\n"
"VerticalLayout content = new VerticalLayout();\n"
"setContent(content);\n"
"\n"
"// Set the content size to full width and height\n"
"content.setSizeFull();\n"
"\n"
"// Add a title area on top of the screen. This takes\n"
"// just the vertical space it needs.\n"
"content.addComponent(new Label(\"My Application\"));\n"
"\n"
"// Add a menu-view area that takes rest of vertical space\n"
"HorizontalLayout menuview = new HorizontalLayout();\n"
"menuview.setSizeFull();\n"
"content.addComponent(menuview);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:209
#, no-c-format
msgid ""
"See <xref linkend=\"layout.settings.size\"/> for more information about "
"setting layout sizes."
msgstr ""
"关于布局的尺寸设置, 详情请参见 <xref linkend=\"layout.settings.size\"/>."

#. Tag: title
#: chapter-layout.xml:217
#, no-c-format
msgid ""
"<classname>VerticalLayout</classname> and <classname>HorizontalLayout</"
"classname>"
msgstr ""
"<classname>VerticalLayout</classname> 和 <classname>HorizontalLayout</"
"classname>"

#. Tag: para
#: chapter-layout.xml:219
#, no-c-format
msgid ""
"<classname>VerticalLayout</classname> and <classname>HorizontalLayout</"
"classname> are ordered layouts for laying components out either vertically "
"or horizontally, respectively. They both extend from "
"<classname>AbstractOrderedLayout</classname>, together with the "
"<classname>FormLayout</classname>. These are the two most important layout "
"components in Vaadin, and typically you have a <classname>VerticalLayout</"
"classname> as the root content component of the <classname>UI</classname>."
msgstr ""
"<classname>VerticalLayout</classname> 和 <classname>HorizontalLayout</"
"classname> 是有顺序的布局, 用于将内部组件按垂直或水平方向排列. 它们和 "
"<classname>FormLayout</classname> 一样, 都继承自 "
"<classname>AbstractOrderedLayout</classname>. 这是 Vaadin 中最重要的两个布局"
"管理组件, 通常会用 <classname>VerticalLayout</classname> 作为 <classname>UI</"
"classname> 的内容根组件."

#. Tag: para
#: chapter-layout.xml:230
#, no-c-format
msgid ""
"<classname>VerticalLayout</classname> has 100% default width and undefined "
"height, so it fills the containing layout (or UI) horizontally, and fits its "
"content vertically. <classname>HorizontalLayout</classname> has undefined "
"size in both dimensions."
msgstr ""
"<classname>VerticalLayout</classname> 默认宽度为 100%, 默认高度为未指定, 因此"
"它会在水平方向上充满它的父布局(或 UI), 在垂直方向上的高度会适应它本身内容的尺"
"寸. <classname>HorizontalLayout</classname> 在垂直和水平方向上的尺寸都是未指"
"定."

#. Tag: para
#: chapter-layout.xml:237
#, no-c-format
msgid "Typical use of the layouts goes as follows:"
msgstr "这两个布局的通常用法如下:"

#. Tag: programlisting
#: chapter-layout.xml:242
#, no-c-format
msgid ""
"<![CDATA[VerticalLayout vertical = new VerticalLayout ();\n"
"vertical.addComponent(new TextField(\"Name\"));\n"
"vertical.addComponent(new TextField(\"Street address\"));\n"
"vertical.addComponent(new TextField(\"Postal code\"));\n"
"layout.addComponent(vertical);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:244
#, no-c-format
msgid ""
"The component captions are placed above the component, so the layout will "
"look as follows:"
msgstr "组件的标题被放置在组件上方, 因此布局的显示大致如下:"

#. Tag: para
#: chapter-layout.xml:257
#, no-c-format
msgid ""
"Using <classname>HorizontalLayout</classname> gives the following layout:"
msgstr "使用 <classname>HorizontalLayout</classname> 的布局显示如下:"

#. Tag: title
#: chapter-layout.xml:273
#, no-c-format
msgid "Spacing in Ordered Layouts"
msgstr "在有顺序的布局中控制组件间隔"

#. Tag: para
#: chapter-layout.xml:275
#, no-c-format
msgid ""
"The ordered layouts can have spacing between the horizontal or vertical "
"cells. The spacing can be enabled with <methodname>setSpacing(true)</"
"methodname>."
msgstr ""
"有顺序的布局可以在水平和垂直方向的单元格之间控制间隔. 间隔功能可以使用 "
"<methodname>setSpacing(true)</methodname> 方法启用."

#. Tag: para
#: chapter-layout.xml:281
#, no-c-format
msgid ""
"The spacing as a default height or width, which can be customized in CSS. "
"You need to set the height or width for spacing elements with <literal>v-"
"spacing</literal> style. You also need to specify an enclosing rule element "
"in a CSS selector, such as <literal>v-verticallayout</literal> for a "
"<classname>VerticalLayout</classname> or <literal>v-horizontallayout</"
"literal> for a <classname>HorizontalLayout</classname>. You can also use "
"<literal>v-vertical</literal> and <literal>v-horizontal</literal> for all "
"vertically or horizontally ordered layouts, such as <classname>FormLayout</"
"classname>."
msgstr ""
"间隔的默认宽度或高度可以通过 CSS 来定制. 你需要为 <literal>v-spacing</"
"literal> 样式的间隔元素设置宽度或高度. 你还需要指定一个在 CSS 选择器中指定封"
"装这个间隔元素的容器元素, 比如, 对于 <classname>VerticalLayout</classname> 来"
"说, 容器元素的样式为 <literal>v-verticallayout</literal>, 对于 "
"<classname>HorizontalLayout</classname>, 容器元素的样式为 <literal>v-"
"horizontallayout</literal>. 你也可以用 <literal>v-vertical</literal> 和 "
"<literal>v-horizontal</literal> 来控制所有的垂直或水平布局, 比如 "
"<classname>FormLayout</classname>."

#. Tag: para
#: chapter-layout.xml:295
#, no-c-format
msgid ""
"For example, the following sets the amount of spacing for all "
"<classname>VerticalLayout</classname>s, as well as <classname>FormLayout</"
"classname>, in the UI:"
msgstr ""
"比如, 下面的例子对 UI 中所有的 <classname>VerticalLayout</classname> 和 "
"<classname>FormLayout</classname> 设置间隔空白的尺寸:"

#. Tag: programlisting
#: chapter-layout.xml:301
#, no-c-format
msgid ""
"<![CDATA[.v-vertical > .v-spacing {\n"
"    height: 30px;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:303
#, no-c-format
msgid "Or for <classname>HorizontalLayout</classname>:"
msgstr "对于 <classname>HorizontalLayout</classname>, 如下:"

#. Tag: programlisting
#: chapter-layout.xml:307
#, no-c-format
msgid ""
"<![CDATA[.v-horizontal > .v-spacing {\n"
"    width: 50px;\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:311
#, no-c-format
msgid "Sizing Contained Components"
msgstr "控制布局内组件的尺寸"

#. Tag: para
#: chapter-layout.xml:313
#, no-c-format
msgid ""
"The components contained within an ordered layout can be laid out in a "
"number of different ways depending on how you specify their height or width "
"in the primary direction of the layout component."
msgstr ""
"有顺序的布局之内包含的组件, 有几种不同的排列方式, 取决于你如何指定组件在布局"
"的主方向上的高度/宽度."

#. Tag: title
#: chapter-layout.xml:320
#, no-c-format
msgid "Component Widths in <classname>HorizontalLayout</classname>"
msgstr "<classname>HorizontalLayout</classname> 中组件的宽度"

#. Tag: para
#: chapter-layout.xml:328
#, no-c-format
msgid ""
"above gives a summary of the sizing options for a "
"<classname>HorizontalLayout</classname>. The figure is broken down in the "
"following subsections."
msgstr ""
"大致解释了在 <classname>HorizontalLayout</classname> 内可用的几种尺寸. 上图的"
"内容我们分成后面的几个小节来解释."

#. Tag: title
#: chapter-layout.xml:336
#, no-c-format
msgid "Layout with Undefined Size"
msgstr "未指定尺寸的布局"

#. Tag: para
#: chapter-layout.xml:338
#, no-c-format
msgid ""
"If a <classname>VerticalLayout</classname> has undefined height or "
"<classname>HorizontalLayout</classname> undefined width, the layout will "
"shrink to fit the contained components so that there is no extra space "
"between them."
msgstr ""
"如果 <classname>VerticalLayout</classname> 的高度未指定, 或者 "
"<classname>HorizontalLayout</classname> 的宽度未指定, 这种情况下布局管理组件"
"会缩小到适合于它内部组件的大小, 因此内部组件之间不会带有额外的间隔空白."

#. Tag: programlisting
#: chapter-layout.xml:345
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[HorizontalLayout fittingLayout = new "
"HorizontalLayout();\n"
"fittingLayout.setWidth(Sizeable.SIZE_UNDEFINED, 0); // Default\n"
"fittingLayout.addComponent(new Button(\"Small\"));\n"
"fittingLayout.addComponent(new Button(\"Medium-sized\"));\n"
"fittingLayout.addComponent(new Button(\"Quite a big component\"));\n"
"parentLayout.addComponent(fittingLayout);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:353
#, no-c-format
msgid ""
"The both layouts actually have undefined height by default and "
"<classname>HorizontalLayout</classname> has also undefined width, while "
"<classname>VerticalLayout</classname> has 100% relative width."
msgstr ""
"垂直和水平布局的默认高度都是未指定, <classname>HorizontalLayout</classname> "
"的默认宽度也是未指定, 而 <classname>VerticalLayout</classname> 默认为 100% 的"
"相对宽度."

#. Tag: para
#: chapter-layout.xml:359
#, no-c-format
msgid ""
"If such a vertical layout with undefined height continues below the bottom "
"of a window (a <classname>Window</classname> object), the window will pop up "
"a vertical scroll bar on the right side of the window area. This way, you "
"get a \"web page\". The same applies to <classname>Panel</classname>."
msgstr ""
"这种未指定高度的垂直布局, 如果它的内容一致延续到窗口(<classname>Window</"
"classname> 对象)底部的更下方, 窗口会在右侧显示出垂直滚动条. 这时, 你的应用程"
"序的显示就变得和 \"Web 页面\" 类似了. 这种特性在 <classname>Panel</"
"classname> 中同样存在."

#. Tag: title
#: chapter-layout.xml:368 chapter-layout.xml:638
#, no-c-format
msgid ""
"A layout that contains components with percentual size must have a defined "
"size!"
msgstr "如果布局中包含的组件使用了百分比尺寸, 那么容器布局本身必须指定尺寸!"

#. Tag: para
#: chapter-layout.xml:371
#, no-c-format
msgid ""
"If a layout has undefined size and a contained component has, say, 100% "
"size, the component would fill the space given by the layout, while the "
"layout would shrink to fit the space taken by the component, which would be "
"a paradox. This requirement holds for height and width separately. The debug "
"window allows detecting such invalid cases; see <xref linkend=\"advanced."
"debug.hierarchy\"/>."
msgstr ""
"如果布局尺寸未指定, 并且其中包含的组件使用相对尺寸, 比如, 100% 相对大小, 那么"
"组件会占据布局给出的所有空间, 而布局却想要缩小自己的尺寸与它包含的组件相适"
"应, 于是发生矛盾. 这里所说的限制对于高度和宽度两个方向都是存在的. 使用调试窗"
"口可以查看这种无效的情况; 详情请参见 <xref linkend=\"advanced.debug.hierarchy"
"\"/>."

#. Tag: para
#: chapter-layout.xml:382
#, no-c-format
msgid ""
"An exception to the above rule is a case where you have a layout with "
"undefined size that contains a component with a fixed or undefined size "
"together with one or more components with relative size. In this case, the "
"contained component with fixed (or undefined) size in a sense defines the "
"size of the containing layout, removing the paradox. That size is then used "
"for the relatively sized components."
msgstr ""
"上面这条规则有一个例外, 假如布局的尺寸为未指定, 内含的一个组件尺寸为固定或未"
"指定, 其他一个或多个组件为相对尺寸. 这种情况下, 内含组件中拥有固定(或未指定) "
"尺寸的那一个, 可以用来决定布局容器的尺寸, 于是解决了上面所说的矛盾. 布局容器"
"的尺寸确定之后, 其他组件的相对尺寸也就确定了."

#. Tag: para
#: chapter-layout.xml:391
#, no-c-format
msgid ""
"The technique can be used to define the width of a "
"<classname>VerticalLayout</classname> or the height of a "
"<classname>HorizontalLayout</classname>."
msgstr ""
"这种方法可以用来决定 <classname>VerticalLayout</classname> 的宽度, 或者 "
"<classname>HorizontalLayout</classname> 的高度."

#. Tag: programlisting
#: chapter-layout.xml:398
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Vertical layout would normally have 100% "
"width\n"
"VerticalLayout vertical = new VerticalLayout();\n"
"        \n"
"// Shrink to fit the width of contained components\n"
"vertical.setWidth(Sizeable.SIZE_UNDEFINED, 0);\n"
"        \n"
"// Label has normally 100% width, but we set it as\n"
"// undefined so that it will take only the needed space\n"
"Label label =\n"
"    new Label(\"\\u2190 The VerticalLayout shrinks to fit \"+\n"
"              \"the width of this Label \\u2192\");\n"
"label.setWidth(Sizeable.SIZE_UNDEFINED, 0);\n"
"vertical.addComponent(label);\n"
"        \n"
"// Button has undefined width by default\n"
"Button butt = new Button(\"\\u2190 This Button takes 100% \"+\n"
"                         \"of the width \\u2192\");\n"
"butt.setWidth(\"100%\");\n"
"vertical.addComponent(butt);]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:401
#, no-c-format
msgid "Defining the Size with a Component"
msgstr "使用组件来控制尺寸"

#. Tag: title
#: chapter-layout.xml:414
#, no-c-format
msgid "Layout with Defined Size"
msgstr "指定尺寸的布局"

#. Tag: para
#: chapter-layout.xml:416
#, no-c-format
msgid ""
"If you set a <classname>HorizontalLayout</classname> to a defined size "
"horizontally or a <classname>VerticalLayout</classname> vertically, and "
"there is space left over from the contained components, the extra space is "
"distributed equally between the component cells. The components are aligned "
"within these cells according to their alignment setting, top left by "
"default, as in the example below."
msgstr ""
"如果你将 <classname>HorizontalLayout</classname> 设置为固定的宽度, 或将一个 "
"<classname>VerticalLayout</classname> 设置为固定高度, 假如布局除掉内含的组件"
"之外还有剩余空间, 那么这部分剩余空间会在各个组件之间平均分配. 组件之间按照设"
"定来对齐, 默认是左上对齐, 如下例所示."

#. Tag: programlisting
#: chapter-layout.xml:425
#, no-c-format
msgid "<![CDATA[fixedLayout.setWidth(\"400px\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:433
#, no-c-format
msgid ""
"Using percentual sizes for components contained in a layout requires "
"answering the question, \"Percentage of what?\" There is no sensible default "
"answer for this question in the current implementation of the layouts, so in "
"practice, you may not define \"100%\" size alone."
msgstr ""
"对布局内的组件使用相对百分比尺寸, 需要回答一个问题, \"这是相对于谁的百分比?"
"\" 在现在的布局实现中, 这个问题没有合理的默认答案, 所以在实际运用中, 你不应该"
"单独定义 \"100%\" 尺寸."

#. Tag: title
#: chapter-layout.xml:442 chapter-layout.xml:1816
#, no-c-format
msgid "Expanding Components"
msgstr "组件的扩张"

#. Tag: para
#: chapter-layout.xml:444
#, no-c-format
msgid ""
"Often, you want to have one component that takes all the available space "
"left over from other components. You need to set its size as 100% and set it "
"as <emphasis>expanding</emphasis> with <methodname>setExpandRatio()</"
"methodname>. The second parameter for the method is an expansion ratio, "
"which is relevant if there are more than one expanding component, but its "
"value is irrelevant for a single expanding component."
msgstr ""
"很多时候你会希望某个组件占据其他组件所留下的所有剩余空间. 你需要设置它的尺寸"
"为 100%, 并使用 <methodname>setExpandRatio()</methodname> 方法将它设置为 "
"<emphasis>扩张</emphasis>. 这个方法的第二个参数是扩张比例, 这个比例是指存在多"
"个扩张组件时的相对比例, 只存在一个扩张组件时, 这个比例值是无意义的."

#. Tag: programlisting
#: chapter-layout.xml:454
#, no-c-format
msgid ""
"<![CDATA[HorizontalLayout layout = new HorizontalLayout();\n"
"layout.setWidth(\"400px\");\n"
"\n"
"// These buttons take the minimum size.\n"
"layout.addComponent(new Button(\"Small\"));\n"
"layout.addComponent(new Button(\"Medium-sized\"));\n"
"\n"
"// This button will expand.\n"
"Button expandButton = new Button(\"Expanding component\");\n"
"\n"
"// Use 100% of the expansion cell's width.\n"
"expandButton.setWidth(\"100%\");\n"
"\n"
"// The component must be added to layout before setting the ratio.\n"
"layout.addComponent(expandButton);\n"
"\n"
"// Set the component's cell to expand.\n"
"layout.setExpandRatio(expandButton, 1.0f);\n"
"\n"
"parentLayout.addComponent(layout);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:462
#, no-c-format
msgid ""
"Notice that you must call <methodname>setExpandRatio()</methodname> "
"<emphasis>after</emphasis> <methodname>addComponent()</methodname>, because "
"the layout can not operate on an component that it doesn't (yet) include."
msgstr ""
"注意, 你必须在调用<methodname>addComponent()</methodname> 方法<emphasis>之后"
"</emphasis>才可以调用 <methodname>setExpandRatio()</methodname> 方法, 因为对"
"于布局内(暂时还)不存在的组件, 布局是无法操作它的."

#. Tag: title
#: chapter-layout.xml:471
#, no-c-format
msgid "Expand Ratios"
msgstr "扩张比例"

#. Tag: para
#: chapter-layout.xml:473
#, no-c-format
msgid ""
"If you specify an expand ratio for multiple components, they will all try to "
"use the available space according to the ratio."
msgstr "如果对多个组件指定扩张比例, 它们会按照这个比例来分配可用的空间."

#. Tag: programlisting
#: chapter-layout.xml:478
#, no-c-format
msgid ""
"<![CDATA[HorizontalLayout layout = new HorizontalLayout();\n"
"layout.setWidth(\"400px\");\n"
"\n"
"// Create three equally expanding components.\n"
"String[] captions = { \"Small\", \"Medium-sized\",\n"
"                      \"Quite a big component\" };\n"
"for (int i = 1; i <= 3; i++) {\n"
"    Button button = new Button(captions[i-1]);\n"
"    button.setWidth(\"100%\");\n"
"    layout.addComponent(button);\n"
"\n"
"    // Have uniform 1:1:1 expand ratio.\n"
"    layout.setExpandRatio(button, 1.0f);\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:486
#, no-c-format
msgid ""
"As the example used the same ratio for all components, the ones with more "
"content may have the content cut. Below, we use differing ratios:"
msgstr ""
"上例中对所有组件使用相同的比例, 所以文字内容较长的组件可能会截断它的内容. 下"
"例中, 我们使用不同的比例:"

#. Tag: programlisting
#: chapter-layout.xml:491
#, no-c-format
msgid ""
"<![CDATA[// Expand ratios for the components are 1:2:3.\n"
"layout.setExpandRatio(button, i * 1.0f);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:499
#, no-c-format
msgid ""
"If the size of the expanding components is defined as a percentage "
"(typically \"100%\"), the ratio is calculated from the <emphasis>overall</"
"emphasis> space available for the relatively sized components. For example, "
"if you have a 100 pixels wide layout with two cells with 1.0 and 4.0 "
"respective expansion ratios, and both the components in the layout are set "
"as <methodname>setWidth(\"100%\")</methodname>, the cells will have "
"respective widths of 20 and 80 pixels, regardless of the minimum size of the "
"components."
msgstr ""
"如果扩张组件的尺寸定义为百分比(一般是 \"100%\"), 比例会根据相对大小的组件的"
"<emphasis>整体</emphasis> 可用空间来计算. 比如, 假定你的布局宽度为 100 像素, "
"其中包含两个单元格, 扩张比例分别为 1.0 和 4.0, 而且布局内的两个组件都设置为 "
"<methodname>setWidth(\"100%\")</methodname>, 那么这两个单元格宽度将分别是 20 "
"像素和 80 像素, 组件定义的最小尺寸会被忽略."

#. Tag: para
#: chapter-layout.xml:511
#, no-c-format
msgid ""
"However, if the size of the contained components is undefined or fixed, the "
"expansion ratio is of the <emphasis>excess</emphasis> available space. In "
"this case, it is the excess space that expands, not the components."
msgstr ""
"但是, 如果内含组件的尺寸为未指定或者固定, 扩张比例是 <emphasis>额外</"
"emphasis> 可用空间的比例. 这种情况下, 扩张的是额外空间(译注: 也就是组件宽度加"
"它后面的间隔空白的宽度), 而不是组件本身."

#. Tag: programlisting
#: chapter-layout.xml:518
#, no-c-format
msgid ""
"<![CDATA[for (int i = 1; i <= 3; i++) {\n"
"    // Button with undefined size.\n"
"    Button button = new Button(captions[i - 1]);\n"
"    \n"
"    layout4.addComponent(button);\n"
"\n"
"    // Expand ratios are 1:2:3.\n"
"    layout4.setExpandRatio(button, i * 1.0f);\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:526
#, no-c-format
msgid ""
"It is not meaningful to combine expanding components with percentually "
"defined size and components with fixed or undefined size. Such combination "
"can lead to a very unexpected size for the percentually sized components."
msgstr ""
"将百分比尺寸的扩张组件, 与固定(或未指定)尺寸的组件组合在一起是无意义的. 这样"
"的组合, 对百分比尺寸的组件可能导致一个非常意外的尺寸."

#. Tag: title
#: chapter-layout.xml:535
#, no-c-format
msgid "Percentage of Cells"
msgstr "单元格的百分比"

#. Tag: para
#: chapter-layout.xml:537
#, no-c-format
msgid ""
"A percentual size of a component defines the size of the component "
"<emphasis>within its cell</emphasis>. Usually, you use \"100%\", but a "
"smaller percentage or a fixed size (smaller than the cell size) will leave "
"an empty space in the cell and align the component within the cell according "
"to its alignment setting, top left by default."
msgstr ""
"组件的百分比尺寸指定的是组件 <emphasis>在它的单元格之内</emphasis> 的尺寸. 通"
"常使用 \"100%\", 但一个更小的百分比, 或者一个固定尺寸(比单元格更小) 会在单元"
"格内留下空白空间, 并根据设定将组件在单元格内对齐, 默认对齐到左上方."

#. Tag: programlisting
#: chapter-layout.xml:545
#, no-c-format
msgid ""
"<![CDATA[HorizontalLayout layout50 = new HorizontalLayout();\n"
"layout50.setWidth(\"400px\");\n"
"\n"
"String[] captions1 = { \"Small 50%\", \"Medium 50%\",\n"
"                       \"Quite a big 50%\" };\n"
"for (int i = 1; i <= 3; i++) {\n"
"    Button button = new Button(captions1[i-1]);\n"
"    button.setWidth(\"50%\");\n"
"    layout50.addComponent(button);\n"
"\n"
"    // Expand ratios for the components are 1:2:3.\n"
"    layout50.setExpandRatio(button, i * 1.0f);\n"
"}\n"
"parentLayout.addComponent(layout50);]]>"
msgstr ""

#. Tag: classname
#: chapter-layout.xml:557
#, no-c-format
msgid "GridLayout"
msgstr "GridLayout"

#. Tag: para
#: chapter-layout.xml:559
#, no-c-format
msgid ""
"<classname>GridLayout</classname> container lays components out on a grid, "
"defined by the number of columns and rows. The columns and rows of the grid "
"serve as coordinates that are used for laying out components on the grid. "
"Each component can use multiple cells from the grid, defined as an area (x1,"
"y1,x2,y2), although they typically take up only a single grid cell."
msgstr ""
"<classname>GridLayout</classname> 容器将组件摆放在一个网格中, 网格由列数和行"
"数定义. 网格的列数和行数也是组件摆放时使用的坐标值. 每个组件都可以使用网格内"
"的多个单元格, 以 (x1,y1,x2,y2) 形式的区域来指定, 但通常只使用一个单元格."

#. Tag: para
#: chapter-layout.xml:567
#, no-c-format
msgid ""
"The grid layout maintains a cursor for adding components in left-to-right, "
"top-to-bottom order. If the cursor goes past the bottom-right corner, it "
"will automatically extend the grid downwards by adding a new row."
msgstr ""
"网格布局管理一个游标, 用来按照从左到右, 从上到下的顺序添加组件. 如果游标超过"
"了右下角, 它会自动扩张网格, 在最下方增加一个新行."

#. Tag: para
#: chapter-layout.xml:573
#, no-c-format
msgid ""
"The following example demonstrates the use of <classname>GridLayout</"
"classname>. The <methodname>addComponent</methodname> takes a component and "
"optional coordinates. The coordinates can be given for a single cell or for "
"an area in x,y (column,row) order. The coordinate values have a base value "
"of 0. If coordinates are not given, the cursor will be used."
msgstr ""
"下例演示 <classname>GridLayout</classname> 的使用方法. "
"<methodname>addComponent</methodname> 方法接受的参数是一个组件, 另外一个可选"
"参数是坐标位置. 坐标位置以x,y (列, 行)的顺序指定, 可以是单个单元格, 也可以是"
"一个区域. 坐标位置的起点为 0. 如果坐标位置未指定, 会使用游标位置."

#. Tag: programlisting
#: chapter-layout.xml:582
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Create a 4 by 4 grid layout.\n"
"GridLayout grid = new GridLayout(4, 4);\n"
"grid.addStyleName(\"example-gridlayout\");\n"
"\n"
"// Fill out the first row using the cursor.\n"
"grid.addComponent(new Button(\"R/C 1\"));\n"
"for (int i = 0; i < 3; i++) {\n"
"    grid.addComponent(new Button(\"Col \" + (grid.getCursorX() + 1)));\n"
"}\n"
"\n"
"// Fill out the first column using coordinates.\n"
"for (int i = 1; i < 4; i++) {\n"
"    grid.addComponent(new Button(\"Row \" + i), 0, i);\n"
"}\n"
"\n"
"// Add some components of various shapes.\n"
"grid.addComponent(new Button(\"3x1 button\"), 1, 1, 3, 1);\n"
"grid.addComponent(new Label(\"1x2 cell\"), 1, 2, 1, 3);\n"
"InlineDateField date = new InlineDateField(\"A 2x2 date field\");\n"
"date.setResolution(DateField.RESOLUTION_DAY);\n"
"grid.addComponent(date, 2, 2, 3, 3);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:584
#, no-c-format
msgid ""
"The resulting layout will look as follows. The borders have been made "
"visible to illustrate the layout cells."
msgstr "上例的运行结果如下. 我们将边框设置为可见, 以便看清楚网格中的单元格."

#. Tag: title
#: chapter-layout.xml:590
#, no-c-format
msgid "The Grid Layout Component"
msgstr "Grid Layout 组件"

#. Tag: para
#: chapter-layout.xml:598
#, no-c-format
msgid ""
"A component to be placed on the grid must not overlap with existing "
"components. A conflict causes throwing a <classname>GridLayout."
"OverlapsException</classname>."
msgstr ""
"放置在网格内的组件一定不能与已有的组件重叠. 组件间的位置冲突会抛出一个 "
"<classname>GridLayout.OverlapsException</classname> 例外."

#. Tag: title
#: chapter-layout.xml:605
#, no-c-format
msgid "Sizing Grid Cells"
msgstr "调整单元格尺寸"

#. Tag: para
#: chapter-layout.xml:607
#, no-c-format
msgid ""
"You can define the size of both a grid layout and its components in either "
"fixed or percentual units, or leave the size undefined altogether, as "
"described in <xref linkend=\"components.features.sizeable\"/>. <xref linkend="
"\"layout.settings.size\"/> gives an introduction to sizing of layouts."
msgstr ""
"对于网格布局和它之内的组件, 你都可以使用固定或百分比单位定义其尺寸, 也可以将"
"尺寸保留为未指定, 详情请参见 <xref linkend=\"components.features.sizeable\"/"
">. <xref linkend=\"layout.settings.size\"/> 介绍布局本身的尺寸控制."

#. Tag: para
#: chapter-layout.xml:616
#, no-c-format
msgid ""
"The size of the <classname>GridLayout</classname> component is undefined by "
"default, so it will shrink to fit the size of the components placed inside "
"it. In most cases, especially if you set a defined size for the layout but "
"do not set the contained components to full size, there will be some unused "
"space. The position of the non-full components within the grid cells will be "
"determined by their <emphasis>alignment</emphasis>. See <xref linkend="
"\"layout.settings.alignment\"/> for details on how to align the components "
"inside the cells."
msgstr ""
"<classname>GridLayout</classname> 组件的尺寸默认为未指定, 因此它会缩小到与它"
"内部的组件尺寸一致. 大多数情况下, 如果你为布局设定了一个指定的尺寸, 但没有将"
"内部的组件设置为全尺寸, 那么网格中会留下一些未使用的空间. 非全尺寸的组件在单"
"元格内的位置由组件的 <emphasis>对齐设置</emphasis> 来决定. 关于如何在单元格内"
"控制组件的对齐, 请参见 <xref linkend=\"layout.settings.alignment\"/>."

#. Tag: para
#: chapter-layout.xml:628
#, no-c-format
msgid ""
"The components contained within a <classname>GridLayout</classname> layout "
"can be laid out in a number of different ways depending on how you specify "
"their height or width. The layout options are similar to "
"<classname>HorizontalLayout</classname> and <classname>VerticalLayout</"
"classname>, as described in <xref linkend=\"layout.orderedlayout\"/>."
msgstr ""
"<classname>GridLayout</classname> 内的组件, 可以以几种不同的方式摆放, 取决与"
"你如何指定它们的高度或宽度. 布局选项类似于 <classname>HorizontalLayout</"
"classname> 和 <classname>VerticalLayout</classname>, 参见 <xref linkend="
"\"layout.orderedlayout\"/>."

#. Tag: para
#: chapter-layout.xml:640
#, no-c-format
msgid ""
"If a layout has undefined size and a contained component has, say, 100% "
"size, the component would fill the space given by the layout, while the "
"layout would shrink to fit the space taken by the component, which is a "
"paradox. This requirement holds for height and width separately. The debug "
"mode allows detecting such invalid cases; see <xref linkend=\"advanced.debug."
"mode\"/>."
msgstr ""
"如果布局尺寸未指定, 并且其中包含的组件使用相对尺寸, 比如, 100% 相对大小, 那么"
"组件会占据布局给出的所有空间, 而布局却想要缩小自己的尺寸与它包含的组件相适"
"应, 于是发生矛盾. 这里所说的限制对于高度和宽度两个方向都是存在的. 使用调试模"
"式可以查看这种无效的情况; 详情请参见 <xref linkend=\"advanced.debug.mode\"/>."

#. Tag: para
#: chapter-layout.xml:650
#, no-c-format
msgid ""
"Often, you want to have one or more rows or columns that take all the "
"available space left over from non-expanding rows or columns. You need to "
"set the rows or columns as <emphasis>expanding</emphasis> with "
"<methodname>setRowExpandRatio()</methodname> and "
"<methodname>setColumnExpandRatio()</methodname>. The first parameter for "
"these methods is the index of the row or column to set as expanding. The "
"second parameter for the methods is an expansion ratio, which is relevant if "
"there are more than one expanding row or column, but its value is irrelevant "
"if there is only one. With multiple expanding rows or columns, the ratio "
"parameter sets the relative portion how much a specific row/column will take "
"in relation with the other expanding rows/columns."
msgstr ""
"你常常会想要一个或多个行或列占据其他非扩展行或列留下的所有可用空间. 你需要使"
"用 <methodname>setRowExpandRatio()</methodname> 和 "
"<methodname>setColumnExpandRatio()</methodname> 方法, 将这些行或列设置为 "
"<emphasis>扩张</emphasis>. 这两个方法的第一个参数是想要设置为扩张的对象行或列"
"的索引. 第二个参数是扩张比例, 这个比例是指存在多个扩张行/列时的相对比例, 只存"
"在一个扩张行/列时, 这个比例值是无意义的. 存在多个扩张行/列时, 扩张比例参数指"
"定的是某个行/列占据的空间与其他扩张行/列之间的比例."

#. Tag: programlisting
#: chapter-layout.xml:665
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[GridLayout grid = new GridLayout(3,2);\n"
"\n"
"// Layout containing relatively sized components must have\n"
"// a defined size, here is fixed size.\n"
"grid.setWidth(\"600px\");\n"
"grid.setHeight(\"200px\");\n"
"\n"
"// Add some content\n"
"String labels [] = {\n"
"        \"Shrinking column<br/>Shrinking row\",\n"
"        \"Expanding column (1:)<br/>Shrinking row\",\n"
"        \"Expanding column (5:)<br/>Shrinking row\",\n"
"        \"Shrinking column<br/>Expanding row\",\n"
"        \"Expanding column (1:)<br/>Expanding row\",\n"
"        \"Expanding column (5:)<br/>Expanding row\"\n"
"};\n"
"for (int i=0; i<labels.length; i++) {\n"
"    Label label = new Label(labels[i], ContentMode.HTML);\n"
"    label.setWidth(null); // Set width as undefined\n"
"    grid.addComponent(label);\n"
"}\n"
"\n"
"// Set different expansion ratios for the two columns\n"
"grid.setColumnExpandRatio(1, 1);\n"
"grid.setColumnExpandRatio(2, 5);\n"
"\n"
"// Set the bottom row to expand\n"
"grid.setRowExpandRatio(1, 1);\n"
"\n"
"// Align and size the labels.\n"
"for (int col=0; col<grid.getColumns(); col++) {\n"
"    for (int row=0; row<grid.getRows(); row++) {\n"
"        Component c = grid.getComponent(col, row);\n"
"        grid.setComponentAlignment(c, Alignment.TOP_CENTER);\n"
"        \n"
"        // Make the labels high to illustrate the empty\n"
"        // horizontal space.\n"
"        if (col != 0 || row != 0)\n"
"            c.setHeight(\"100%\");\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:668
#, no-c-format
msgid "Expanding Rows and Columns in <classname>GridLayout</classname>"
msgstr "<classname>GridLayout</classname> 中的扩张行/列"

#. Tag: para
#: chapter-layout.xml:676
#, no-c-format
msgid ""
"If the size of the contained components is undefined or fixed, the expansion "
"ratio is of the <emphasis>excess</emphasis> space, as in <xref linkend="
"\"figure.ui.gridlayout.sizing.expanding\"/> (excess horizontal space is "
"shown in white). However, if the size of the all the contained components in "
"the expanding rows or columns is defined as a percentage, the ratio is "
"calculated from the <emphasis>overall</emphasis> space available for the "
"percentually sized components. For example, if we had a 100 pixels wide grid "
"layout with two columns with 1.0 and 4.0 respective expansion ratios, and "
"all the components in the grid were set as <methodname>setWidth(\"100%\")</"
"methodname>, the columns would have respective widths of 20 and 80 pixels, "
"regardless of the minimum size of their contained components."
msgstr ""
"如果内含组件的尺寸为未定义或者固定尺寸, 扩张比例是 <emphasis>额外</emphasis> "
"可用空间的比例, 见 <xref linkend=\"figure.ui.gridlayout.sizing.expanding\"/> "
"(额外的水平空间显示为白色). 但是, 如果在某个扩张行/列内所有组件的尺寸都定义为"
"百分比, 扩张比例会以百分比尺寸组件的<emphasis>整体</emphasis>可用空间来计算. "
"比如, 如果有一个 100 像素宽的网格布局, 包含两列, 扩张比例分别为1.0 和 4.0, 网"
"格内的所有组件都设置为 <methodname>setWidth(\"100%\")</methodname>, 那么列宽"
"将分别是 20 和 80 像素, 内含组件定义的最小尺寸会被忽略."

#. Tag: title
#: chapter-layout.xml:695 chapter-layout.xml:771 chapter-layout.xml:900
#: chapter-layout.xml:1199 chapter-layout.xml:1387 chapter-layout.xml:1455
#, no-c-format
msgid "CSS Style Rules"
msgstr "CSS 样式规则"

#. Tag: programlisting
#: chapter-layout.xml:697
#, no-c-format
msgid ""
"<![CDATA[.v-gridlayout {}\n"
".v-gridlayout-margin {}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:699
#, no-c-format
msgid ""
"The <markup>v-gridlayout</markup> is the root element of the "
"<classname>GridLayout</classname> component. The <markup>v-gridlayout-"
"margin</markup> is a simple element inside it that allows setting a padding "
"between the outer element and the cells."
msgstr ""
"<markup>v-gridlayout</markup> 是 <classname>GridLayout</classname> 组件的根元"
"素样式. <markup>v-gridlayout-margin</markup> 是根元素内的一个简单元素, 用来设"
"置外层元素与单元格之间的边距."

#. Tag: para
#: chapter-layout.xml:706
#, no-c-format
msgid ""
"For styling the individual grid cells, you should style the components "
"inserted in the cells. The implementation structure of the grid can change, "
"so depending on it, as is done in the example below, is not generally "
"recommended. Normally, if you want to have, for example, a different color "
"for a certain cell, just make set the component inside it "
"<methodname>setSizeFull()</methodname>, and add a style name for it. "
"Sometimes you may need to use a layout component between a cell and its "
"actual component just for styling."
msgstr ""
"要分别控制单个单元格的样式, 你应该控制插入到单元格内的组件的样式. 网格本身的 "
"HTML 元素结构在未来的实现中可能会变化, 因此, 像下例那样依赖于这个元素结构, 一"
"般是不推荐的. 通常, 如果你希望某个单元格拥有不同的颜色, 首先应该将这个单元格"
"内的组件设置为 <methodname>setSizeFull()</methodname>, 然后对组件添加一个样式"
"名. 有时, 为了样式控制, 你可能需要在单元格和真实组件之间再使用一个布局管理组"
"件."

#. Tag: para
#: chapter-layout.xml:717
#, no-c-format
msgid ""
"The following example shows how to make the grid borders visible, as in "
"<xref linkend=\"figure.ui.gridlayout.sizing.expanding\"/>."
msgstr ""
"下例演示如何让网格的边框变为可见, 参见 <xref linkend=\"figure.ui.gridlayout."
"sizing.expanding\"/>."

#. Tag: programlisting
#: chapter-layout.xml:722
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[.v-gridlayout-gridexpandratio {\n"
"    background: blue; /* Creates a \"border\" around the grid. */\n"
"    margin:     10px; /* Empty space around the layout. */\n"
"}\n"
"\n"
"/* Add padding through which the background color shows. */\n"
".v-gridlayout-gridexpandratio .v-gridlayout-margin {\n"
"    padding: 2px;     \n"
"}\n"
"\n"
"/* Add cell borders and make the cell backgrounds white.\n"
" * Warning: This depends heavily on the HTML structure. */\n"
".v-gridlayout-gridexpandratio > div > div > div {\n"
"    padding:    2px;   /* Layout background will show through. */\n"
"    background: white; /* The cells will be colored white. */\n"
"}\n"
"\n"
"/* Components inside the layout are a safe way to style cells. */\n"
".v-gridlayout-gridexpandratio .v-label {\n"
"    text-align: left;\n"
"    background: #ffffc0; /* Pale yellow */\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:724
#, no-c-format
msgid ""
"You should beware of <literal>margin</literal>, <literal>padding</literal>, "
"and <literal>border</literal> settings in CSS as they can mess up the "
"layout. The dimensions of layouts are calculated in the Client-Side Engine "
"of Vaadin and some settings can interfere with these calculations. For more "
"information, on margins and spacing, see <xref linkend=\"layout.settings."
"spacing\"/> and <xref linkend=\"layout.settings.margins\"/>"
msgstr ""
"要注意 CSS 中对 <literal>margin</literal>, <literal>padding</literal>, 和 "
"<literal>border</literal> 的设置, 它们可能会搞乱布局. 布局的尺寸由 Vaadin 的"
"客户端引擎计算, 某些设置会妨碍这些计算工作. 关于边框余白和间隔空白, 请参见 "
"<xref linkend=\"layout.settings.spacing\"/> 和  <xref linkend=\"layout."
"settings.margins\"/>"

#. Tag: classname
#: chapter-layout.xml:737
#, no-c-format
msgid "FormLayout"
msgstr "FormLayout"

#. Tag: para
#: chapter-layout.xml:739
#, no-c-format
msgid ""
"<classname>FormLayout</classname> lays the components and their captions out "
"in two columns, with optional indicators for required fields and errors that "
"can be shown for each field. The field captions can have an icon in addition "
"to the text. <classname>FormLayout</classname> is an ordered layout and much "
"like <classname>VerticalLayout</classname>. For description of margins, "
"spacing, and other features in ordered layouts, see <xref linkend=\"layout."
"orderedlayout\"/>."
msgstr ""
"<classname>FormLayout</classname> 将组件和它们的标题摆放为两列, 另外对必须 "
"Field 和每个 Field 的错误信息还带有可选的指示器. Field 标题除文字之外还可以带"
"有图标. <classname>FormLayout</classname> 是一个有顺序的布局, 与 "
"<classname>VerticalLayout</classname> 很类似. 关于有顺序的布局中的边框余白, "
"间隔空白, 以及其他功能, 请参见 <xref linkend=\"layout.orderedlayout\"/>."

#. Tag: para
#: chapter-layout.xml:749
#, no-c-format
msgid ""
"The following example shows typical use of <classname>FormLayout</classname> "
"in a form:"
msgstr "下例演示 <classname>FormLayout</classname> 在 Form 中的常见用法:"

#. Tag: programlisting
#: chapter-layout.xml:754
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// A FormLayout used outside the context of a "
"Form\n"
"FormLayout fl = new FormLayout();\n"
"\n"
"// Make the FormLayout shrink to its contents \n"
"fl.setSizeUndefined();\n"
"\n"
"TextField tf = new TextField(\"A Field\");\n"
"fl.addComponent(tf);\n"
"\n"
"// Mark the first field as required\n"
"tf.setRequired(true);\n"
"tf.setRequiredError(\"The Field may not be empty.\");\n"
"\n"
"TextField tf2 = new TextField(\"Another Field\");\n"
"fl.addComponent(tf2);\n"
"\n"
"// Set the second field straing to error state with a message.\n"
"tf2.setComponentError(\n"
"    new UserError(\"This is the error indicator of a Field.\"));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:756
#, no-c-format
msgid ""
"The resulting layout will look as follows. The error message shows in a "
"tooptip when you hover the mouse pointer over the error indicator."
msgstr ""
"运行结果如下图. 当你将鼠标指针移动到错误指示器上时, 错误消息显示为提示信息."

#. Tag: title
#: chapter-layout.xml:762
#, no-c-format
msgid "A <classname>FormLayout</classname> Layout for Forms"
msgstr "用于 Form 的 <classname>FormLayout</classname>"

#. Tag: programlisting
#: chapter-layout.xml:774
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[.v-formlayout {}\n"
".v-formlayout .v-caption {}\n"
"\n"
"/* Columns in a field row. */\n"
".v-formlayout-contentcell {} /* Field content. */\n"
".v-formlayout-captioncell {} /* Field caption. */\n"
".v-formlayout-errorcell {}   /* Field error indicator. */\n"
"\n"
"/* Overall style of field rows. */\n"
".v-formlayout-row {}\n"
".v-formlayout-firstrow {}\n"
".v-formlayout-lastrow {}\n"
"\n"
"/* Required field indicator. */\n"
".v-formlayout .v-required-field-indicator {}\n"
".v-formlayout-captioncell .v-caption\n"
"        .v-required-field-indicator {}\n"
"\n"
"/* Error indicator. */\n"
".v-formlayout-cell .v-errorindicator {}\n"
".v-formlayout-error-indicator .v-errorindicator {}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:776
#, no-c-format
msgid ""
"The top-level element of <classname>FormLayout</classname> has the "
"<literal>v-formlayout</literal> style. The layout is tabular with three "
"columns: the caption column, the error indicator column, and the field "
"column. These can be styled with <literal>v-formlayout-captioncell</"
"literal>, <literal>v-formlayout-errorcell</literal>, and <literal>v-"
"formlayout-contentcell</literal>, respectively. While the error indicator is "
"shown as a dedicated column, the indicator for required fields is currently "
"shown as a part of the caption column."
msgstr ""
"<classname>FormLayout</classname> 的顶级元素带有 <literal>v-formlayout</"
"literal> 样式. 布局排列为三列: 标签列, 错误指示器列, 以及Field 列. 这些列的样"
"式可以分别通过 <literal>v-formlayout-captioncell</literal>, <literal>v-"
"formlayout-errorcell</literal>, 和 <literal>v-formlayout-contentcell</"
"literal> 来控制. 错误指示器显示为单独的一列, 但必须 Field 的指示器目前显示为"
"标题列的一部分."

#. Tag: para
#: chapter-layout.xml:788
#, no-c-format
msgid ""
"For information on setting margins and spacing, see also <xref linkend="
"\"layout.orderedlayout.spacing\"/> and <xref linkend=\"layout.settings."
"margins\"/>."
msgstr ""
"关于边框余白和间隔空白, 请参见 <xref linkend=\"layout.orderedlayout.spacing"
"\"/> 和 <xref linkend=\"layout.settings.margins\"/>."

#. Tag: classname
#: chapter-layout.xml:798
#, no-c-format
msgid "Panel"
msgstr "Panel"

#. Tag: para
#: chapter-layout.xml:800
#, no-c-format
msgid ""
"<classname>Panel</classname> is a single-component container with a frame "
"around the content. It has an optional caption and an icon which are handled "
"by the panel itself, not its containing layout. The panel itself does not "
"manage the caption of its contained component. You need to set the content "
"with <methodname>setContent()</methodname>."
msgstr ""
"<classname>Panel</classname> 是一个单组件容器, 在它的内容周围环绕着一个边框. "
"Panel 有一个可选的标题, 图标, 这些都由 Panel 自身管理, 而不由它所属的布局管理"
"组件来管理. Panel 自身不管理它内部包含的组件的标题. 你需要使用 "
"<methodname>setContent()</methodname> 方法设置 Panel 的内容."

#. Tag: para
#: chapter-layout.xml:808
#, no-c-format
msgid ""
"<classname>Panel</classname> has 100% width and undefined height by default. "
"This corresponds with the default sizing of <classname>VerticalLayout</"
"classname>, which is perhaps most commonly used as the content of a "
"<classname>Panel</classname>. If the width or height of a panel is "
"undefined, the content must have a corresponding undefined or fixed size in "
"the same direction to avoid a sizing paradox."
msgstr ""
"<classname>Panel</classname> 默认宽度为 100%, 默认高度为未指定. 与 "
"<classname>VerticalLayout</classname> 的默认尺寸一致, 最常用作 "
"<classname>Panel</classname> 内容的可能就是 VerticalLayout. 如果 Panel 的宽度"
"或高度为未指定, 那么其中的内容在同一个方向上也必须有一个未指定的或固定的尺"
"寸, 这样才能避免尺寸的矛盾."

#. Tag: programlisting
#: chapter-layout.xml:817
#, no-c-format
msgid ""
"<![CDATA[Panel panel = new Panel(\"Astronomy Panel\");\n"
"panel.addStyleName(\"mypanelexample\");\n"
"panel.setSizeUndefined(); // Shrink to fit content\n"
"layout.addComponent(panel);\n"
"        \n"
"// Create the content\n"
"FormLayout content = new FormLayout();\n"
"content.addStyleName(\"mypanelcontent\");\n"
"content.addComponent(new TextField(\"Participant\"));\n"
"content.addComponent(new TextField(\"Organization\"));\n"
"content.setSizeUndefined(); // Shrink to fit\n"
"content.setMargin(true);\n"
"panel.setContent(content);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:819
#, no-c-format
msgid ""
"The resulting layout is shown in <xref linkend=\"figure.layout.panel\"/>."
msgstr "结果见 <xref linkend=\"figure.layout.panel\"/>."

#. Tag: title
#: chapter-layout.xml:824
#, no-c-format
msgid "A <classname>Panel</classname>"
msgstr "<classname>Panel</classname>"

#. Tag: title
#: chapter-layout.xml:833
#, no-c-format
msgid "Scrolling the Panel Content"
msgstr "滚动 Panel 的内容"

#. Tag: primary
#: chapter-layout.xml:836 chapter-layout.xml:1031
#, no-c-format
msgid "scroll bars"
msgstr ""

#. Tag: para
#: chapter-layout.xml:839
#, no-c-format
msgid ""
"Normally, if a panel has undefined size in a direction, as it has by default "
"vertically, it will fit the size of the content and grow as the content "
"grows. However, if it has a fixed or percentual size and its content becomes "
"too big to fit in the content area, a scroll bar will appear for the "
"particular direction. Scroll bars in a <classname>Panel</classname> are "
"handled natively by the browser with the <literal>overflow: auto</literal> "
"property in CSS."
msgstr ""
"通常, 如果 Panel 在某个方向上的尺寸未指定, 比如它的高度默认就是如此, 它会将自"
"己的尺寸调整为与内容尺寸一致, 如果内容扩大 Panel 也会随之扩大. 但是, 如果它的"
"尺寸为固定或百分比, 并且内容尺寸太大不能在 Panel 的内容区域内显示, 那么在 "
"Panel 的这个方向上会出现一个滚动条. <classname>Panel</classname> 中的滚动条, "
"是使用 CSS 的 <literal>overflow: auto</literal> 属性, 由浏览器的原生功能处理"
"的."

#. Tag: indexterm
#: chapter-layout.xml:848
#, no-c-format
msgid "overflow CSS property"
msgstr ""

#. Tag: para
#: chapter-layout.xml:851
#, no-c-format
msgid ""
"In the following example, we have a 300 pixels wide and very high "
"<classname>Image</classname> component as the panel content."
msgstr ""
"下例中, 我们有一个 300 像素宽, 并且非常高的 <classname>Image</classname> 组"
"件, 以它作为 Panel 的内容."

#. Tag: programlisting
#: chapter-layout.xml:856
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Display an image stored in theme\n"
"Image image = new Image(null,\n"
"    new ThemeResource(\"img/Ripley_Scroll-300px.jpg\"));\n"
"        \n"
"// To enable scrollbars, the size of the panel content\n"
"// must not be relative to the panel size\n"
"image.setSizeUndefined(); // Actually the default\n"
"\n"
"// The panel will give it scrollbars.\n"
"Panel panel = new Panel(\"Scroll\");\n"
"panel.setWidth(\"300px\");\n"
"panel.setHeight(\"300px\");\n"
"panel.setContent(image);\n"
"\n"
"layout.addComponent(panel);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:860
#, no-c-format
msgid ""
"The result is shown in <xref linkend=\"figure.layout.panel.scrolling\"/>. "
"Notice that also the horizontal scrollbar has appeared even though the panel "
"has the same width as the content (300 pixels) - the 300px width for the "
"panel includes the panel border and vertical scrollbar."
msgstr ""
"结果见 <xref linkend=\"figure.layout.panel.scrolling\"/>. 注意, 虽然 Panel 具"
"有与内容一样的宽度(300 像素), 但还是显示出了水平滚动条 - Panel 的 300 像素宽"
"度还包括了边框, 和垂直滚动条."

#. Tag: title
#: chapter-layout.xml:869
#, no-c-format
msgid "Panel with Scroll Bars"
msgstr "带滚动条的 Panel"

#. Tag: interfacename
#: chapter-layout.xml:878 chapter-layout.xml:1046
#, no-c-format
msgid "Scrollable"
msgstr ""

#. Tag: title
#: chapter-layout.xml:882
#, no-c-format
msgid "Programmatic Scrolling"
msgstr "通过程序来滚动"

#. Tag: para
#: chapter-layout.xml:884
#, no-c-format
msgid ""
"<classname>Panel</classname> implements the <interfacename>Scrollable</"
"interfacename> interface to allow programmatic scrolling. You can set the "
"scroll position in pixels with <methodname>setScrollTop()</methodname> and "
"<methodname>setScrollLeft()</methodname>. You can also get the scroll "
"position set previously, but scrolling the panel in the browser does not "
"update the scroll position to the server-side."
msgstr ""
"<classname>Panel</classname> 实现了 <interfacename>Scrollable</"
"interfacename> 接口, 因此可以通过程序来滚动它. 你可以使用 "
"<methodname>setScrollTop()</methodname> 和 <methodname>setScrollLeft()</"
"methodname>方法, 来设置像素单位的滚动位置. 你也可以得到前面设定的规定位置, 但"
"在浏览器端滚动 Panel 时, 不会将滚动位置信息更新到服务器端."

#. Tag: programlisting
#: chapter-layout.xml:902
#, no-c-format
msgid ""
"<![CDATA[.v-panel {}\n"
".v-panel-caption {}\n"
".v-panel-nocaption {}\n"
".v-panel-content {}\n"
".v-panel-deco {}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:904
#, no-c-format
msgid ""
"The entire panel has <literal>v-panel</literal> style. A panel consists of "
"three parts: the caption, content, and bottom decorations (shadow). These "
"can be styled with <literal>v-panel-caption</literal>, <literal>v-panel-"
"content</literal>, and <literal>v-panel-deco</literal>, respectively. If the "
"panel has no caption, the caption element will have the style <literal>v-"
"panel-nocaption</literal>."
msgstr ""
"整个 Panel 带有 <literal>v-panel</literal> 样式. Panel 由三部分构成: 标题, 内"
"容, 底部装饰(阴影). 这些部分可以分别使用 <literal>v-panel-caption</literal>, "
"<literal>v-panel-content</literal>, <literal>v-panel-deco</literal> 来控制样"
"式. 如果 Panel 没有标题, 标题元素将带有 <literal>v-panel-nocaption</literal> "
"样式."

#. Tag: para
#: chapter-layout.xml:914
#, no-c-format
msgid ""
"The built-in <literal>light</literal> style in the Reindeer and Runo themes "
"has no borders or border decorations for the <classname>Panel</classname>. "
"You can use the <parameter>Reindeer.PANEL_LIGHT</parameter> and "
"<parameter>Runo.PANEL_LIGHT</parameter> constants to add the style to a "
"panel. Other themes may also provide the light and other styles for "
"<classname>Panel</classname> as well."
msgstr ""
"在 Reindeer 和 Runo Theme 中, 对于 <classname>Panel</classname> 组件, 内建的 "
"<literal>light</literal> 样式没有边框和边框装饰. 你可以使用 "
"<parameter>Reindeer.PANEL_LIGHT</parameter> 和 <parameter>Runo.PANEL_LIGHT</"
"parameter> 常数, 将这个样式添加给 Panel. 其他 Theme 可能也为 "
"<classname>Panel</classname> 组件提供了 light 样式, 或其他样式."

#. Tag: title
#: chapter-layout.xml:927
#, no-c-format
msgid "Sub-Windows"
msgstr "子窗口"

#. Tag: para
#: chapter-layout.xml:929
#, no-c-format
msgid ""
"<emphasis>Sub-windows</emphasis> are floating panels within a native browser "
"window. Unlike native browser windows, sub-windows are managed by the client-"
"side runtime of Vaadin using HTML features. Vaadin allows opening, closing, "
"resizing, maximizing and restoring sub-windows, as well as scrolling the "
"window content."
msgstr ""
"<emphasis>子窗口</emphasis> 是一个浮动的面板, 位于原生的浏览器窗口内部. 与原"
"生的浏览器窗口不同, 子窗口由 Vaadin 的客户端引擎使用 HTML 的功能来管理. "
"Vaadin 允许子窗口的打开, 关闭, 改变大小, 最大化, 恢复, 以及滚动子窗口中的内"
"容."

#. Tag: title
#: chapter-layout.xml:938
#, no-c-format
msgid "A Sub-Window"
msgstr "子窗口"

#. Tag: para
#: chapter-layout.xml:949
#, no-c-format
msgid ""
"Sub-windows are typically used for <firstterm>Dialog Windows</firstterm> and "
"<firstterm>Multiple Document Interface</firstterm> applications. Sub-windows "
"are by default not modal; you can set them modal as described in <xref "
"linkend=\"layout.sub-window.modal\"/>."
msgstr ""
"子窗口通常用于 <firstterm>对话框窗口</firstterm> 和 <firstterm>多文档界面"
"(MDI, Multiple Document Interface)</firstterm> 应用程序. 子窗口默认不是模态"
"的; 你可以将它设置为模态, 参加 <xref linkend=\"layout.sub-window.modal\"/>."

#. Tag: title
#: chapter-layout.xml:957
#, no-c-format
msgid "Opening and Closing Sub-Windows"
msgstr "打开和关闭子窗口"

#. Tag: para
#: chapter-layout.xml:959
#, no-c-format
msgid ""
"You can open a new sub-window by creating a new <classname>Window</"
"classname> object and adding it to the UI with <methodname>addWindow()</"
"methodname>, typically in some event listener. A sub-window needs a content "
"component, which is typically a layout."
msgstr ""
"你可以打开一个新的子窗口, 方法是创建一个新的 <classname>Window</classname> 对"
"象, 然后使用 <methodname>addWindow()</methodname> 方法将它添加到 UI 中, 这段"
"处理通常在同一个事件监听器中实现. 子窗口需要一个内容组件, 它通常是一个布局."

#. Tag: para
#: chapter-layout.xml:966
#, no-c-format
msgid "In the following, we display a sub-window immediately when a UI opens:"
msgstr "下例中, 我们在 UI 打开时立即显示一个子窗口:"

#. Tag: programlisting
#: chapter-layout.xml:970
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[public static class SubWindowUI extends UI {\n"
"    @Override\n"
"    protected void init(VaadinRequest request) {\n"
"        // Some other UI content\n"
"        setContent(new Label(\"Here's my UI\"));\n"
"        \n"
"        // Create a sub-window and set the content\n"
"        Window subWindow = new Window(\"Sub-window\");\n"
"        VerticalLayout subContent = new VerticalLayout();\n"
"        subContent.setMargin(true);\n"
"        subWindow.setContent(subContent);\n"
"        \n"
"        // Put some components in it\n"
"        subContent.addComponent(new Label(\"Meatball sub\"));\n"
"        subContent.addComponent(new Button(\"Awlright\"));\n"
"        \n"
"        // Center it in the browser window\n"
"        subWindow.center();\n"
"        \n"
"        // Open it in the UI\n"
"        addWindow(subWindow);\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:972
#, no-c-format
msgid ""
"The result was shown in <xref linkend=\"figure.layout.sub-window.basic\"/>. "
"Sub-windows by default have undefined size in both dimensions, so they will "
"shrink to fit the content."
msgstr ""
"结果见 <xref linkend=\"figure.layout.sub-window.basic\"/>. 子窗口默认在宽度高"
"度都为未指定, 因此它会缩小到与其中的内容相适应."

#. Tag: para
#: chapter-layout.xml:978
#, no-c-format
msgid ""
"The user can close a sub-window by clicking the close button in the upper-"
"right corner of the window. The button is controlled by the "
"<emphasis>closable</emphasis> property, so you can disable it with "
"<methodname>setClosable(false)</methodname>."
msgstr ""
"用户可以点击右上角的关闭按钮来关闭子窗口. 这个按钮由 <emphasis>closable</"
"emphasis> 属性控制, 因此你可以使用 <methodname>setClosable(false)</"
"methodname> 方法来禁用这个按钮."

#. Tag: para
#: chapter-layout.xml:985
#, no-c-format
msgid ""
"You close a sub-window also programmatically by calling the "
"<methodname>close()</methodname> for the sub-window, typically in a click "
"listener for an <guibutton>OK</guibutton> or <guibutton>Cancel</guibutton> "
"button. You can also call <methodname>removeWindow()</methodname> for the "
"current <classname>UI</classname>."
msgstr ""
"也可以通过程序来关闭一个子窗口, 方法是对子窗口调用 <methodname>close()</"
"methodname> 方法, 通常会在 <guibutton>OK</guibutton> 或 <guibutton>Cancel</"
"guibutton> 按钮的点击事件监听器中这样做. 你也可以对当前 <classname>UI</"
"classname> 调用 <methodname>removeWindow()</methodname> 方法."

#. Tag: title
#: chapter-layout.xml:994
#, no-c-format
msgid "Sub-Window Management"
msgstr "子窗口管理"

#. Tag: para
#: chapter-layout.xml:996
#, no-c-format
msgid ""
"Usually, you would extend the <classname>Window</classname> class for your "
"specific sub-window as follows:"
msgstr ""
"通常, 为了实现你的特定用途的子窗口, 需要继承 <classname>Window</classname> "
"类, 如下例:"

#. Tag: programlisting
#: chapter-layout.xml:1001
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Define a sub-window by inheritance\n"
"class MySub extends Window {\n"
"    public MySub() {\n"
"        super(\"Subs on Sale\"); // Set window caption\n"
"        center();\n"
"\n"
"        // Some basic content for the window\n"
"        VerticalLayout content = new VerticalLayout();\n"
"        content.addComponent(new Label(\"Just say it's OK!\"));\n"
"        content.setMargin(true);\n"
"        setContent(content);\n"
"        \n"
"        // Disable the close button\n"
"        setClosable(false);\n"
"\n"
"        // Trivial logic for closing the sub-window\n"
"        Button ok = new Button(\"OK\");\n"
"        ok.addClickListener(new ClickListener() {\n"
"            public void buttonClick(ClickEvent event) {\n"
"                close(); // Close the sub-window\n"
"            }\n"
"        });\n"
"        content.addComponent(ok);\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1003
#, no-c-format
msgid "You could open the window as follows:"
msgstr "你可以打开窗口, 方法如下:"

#. Tag: programlisting
#: chapter-layout.xml:1007
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[// Some UI logic to open the sub-window\n"
"final Button open = new Button(\"Open Sub-Window\");\n"
"open.addClickListener(new ClickListener() {\n"
"    public void buttonClick(ClickEvent event) {\n"
"        MySub sub = new MySub();\n"
"        \n"
"        // Add it to the root component\n"
"        UI.getCurrent().addWindow(sub);\n"
"    }\n"
"});]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:1012
#, no-c-format
msgid "Window Positioning"
msgstr "窗口位置"

#. Tag: para
#: chapter-layout.xml:1014
#, no-c-format
msgid ""
"When created, a sub-window will have an undefined default size and position. "
"You can specify the size of a window with <methodname>setHeight()</"
"methodname> and <methodname>setWidth()</methodname> methods. You can set the "
"position of the window with <methodname>setPositionX()</methodname> and "
"<methodname>setPositionY()</methodname> methods."
msgstr ""
"创建后, 子窗口默认尺寸和位置都将是未指定. 你可以使用 "
"<methodname>setHeight()</methodname> 和 <methodname>setWidth()</methodname> "
"方法, 来设置窗口的尺寸. 可以使用 <methodname>setPositionX()</methodname> 和 "
"<methodname>setPositionY()</methodname> 方法, 来设置窗口位置."

#. Tag: programlisting
#: chapter-layout.xml:1023
#, no-c-format
msgid ""
"<![CDATA[// Create a new sub-window\n"
"mywindow = new Window(\"My Dialog\");\n"
"\n"
"// Set window size.\n"
"mywindow.setHeight(\"200px\");\n"
"mywindow.setWidth(\"400px\");\n"
"\n"
"// Set window position.\n"
"mywindow.setPositionX(200);\n"
"mywindow.setPositionY(50);\n"
"\n"
"UI.getCurrent().addWindow(mywindow);]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:1028
#, no-c-format
msgid "Scrolling Sub-Window Content"
msgstr "滚动窗口内容"

#. Tag: para
#: chapter-layout.xml:1034
#, no-c-format
msgid ""
"If a sub-window has a fixed or percentual size and its content becomes too "
"big to fit in the content area, a scroll bar will appear for the particular "
"direction. On the other hand, if the sub-window has undefined size in the "
"direction, it will fit the size of the content and never get a scroll bar. "
"Scroll bars in sub-windows are handled with regular HTML features, namely "
"<literal>overflow: auto</literal> property in CSS."
msgstr ""
"如果子窗口尺寸为固定或百分比, 并且它的内容太大, 超过了内容显示区域的大小, 那"
"么在对应的方向上会显示出一个滚动条. 另一方面, 如果子窗口在这个方向上的尺寸为"
"未指定, 它将调制自己的尺寸来适应内容大小, 因此永远不会出现滚动条. 子窗口的滚"
"动条是由标准的 HTML 功能处理的, 也就是 CSS 中的 <literal>overflow: auto</"
"literal> 属性."

#. Tag: primary
#: chapter-layout.xml:1041
#, no-c-format
msgid "overflow"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1046
#, no-c-format
msgid ""
"As <classname>Window</classname> extends <classname>Panel</classname>, "
"windows are also <interfacename>Scrollable</interfacename>. Note that the "
"interface defines <emphasis>programmatic scrolling</emphasis>, not scrolling "
"by the user. Please see <xref linkend=\"layout.panel\"/>."
msgstr ""
"由于 <classname>Window</classname> 继承自 <classname>Panel</classname>, 因此"
"窗口也是 <interfacename>Scrollable</interfacename>. 注意, 这个接口定义的功能"
"是 <emphasis>通过程序来滚动</emphasis>, 而不是由用户操作发生的滚动. 详情请参"
"见 <xref linkend=\"layout.panel\"/>."

#. Tag: title
#: chapter-layout.xml:1058
#, no-c-format
msgid "Modal Sub-Windows"
msgstr "模态子窗口"

#. Tag: para
#: chapter-layout.xml:1060
#, no-c-format
msgid ""
"A modal window is a sub-window that prevents interaction with the other UI. "
"Dialog windows, as illustrated in <xref linkend=\"figure.layout.sub-window."
"modal\"/>, are typical cases of modal windows. The advantage of modal "
"windows is limiting the scope of user interaction to a sub-task, so changes "
"in application state are more limited. The disadvantage of modal windows is "
"that they can restrict workflow too much."
msgstr ""
"模态窗口是指子窗口显示时禁止用户操作 UI 的其他部分. 对话框窗口, 见 <xref "
"linkend=\"figure.layout.sub-window.modal\"/>, 是模态窗口的典型情况. 模态窗口"
"的好处是在进行某个子任务时, 可以限制用户操作的范围, 因此应用程序的状态变化就"
"很有限. 模态窗口的缺点是它可能对用户工作流程造成太大的限制."

#. Tag: para
#: chapter-layout.xml:1070
#, no-c-format
msgid ""
"You can make a sub-window modal with <methodname>setModal(true)</methodname>."
msgstr ""
"你可以使用 <methodname>setModal(true)</methodname> 方法将一个主窗口设置为模态"
"窗口."

#. Tag: title
#: chapter-layout.xml:1076
#, no-c-format
msgid "Modal Sub-Window"
msgstr "模态子窗口"

#. Tag: para
#: chapter-layout.xml:1087
#, no-c-format
msgid ""
"Depending on the theme, the parent window may be grayed when the modal "
"window is open."
msgstr "根据 Theme 的设定不同, 模态主窗口打开时, 父窗口有可能被变为灰色."

#. Tag: title
#: chapter-layout.xml:1093
#, no-c-format
msgid "Security Warning"
msgstr "安全问题"

#. Tag: para
#: chapter-layout.xml:1094
#, no-c-format
msgid ""
"Modality of child windows is purely a client-side feature and can be "
"circumvented with client-side attack code. You should not trust in the "
"modality of child windows in security-critical situations such as login "
"windows."
msgstr ""
"子窗口的模态是纯粹的客户端功能, 因此是可以被客户端攻击代码绕过的. 在与系统安"
"全相关的场合, 比如 Login 窗口, 你不应该信任子窗口的模态功能."

#. Tag: title
#: chapter-layout.xml:1105 chapter-layout.xml:1144
#, no-c-format
msgid ""
"<classname>HorizontalSplitPanel</classname> and "
"<classname>VerticalSplitPanel</classname>"
msgstr ""
"<classname>HorizontalSplitPanel</classname> 和 "
"<classname>VerticalSplitPanel</classname>"

#. Tag: classname
#: chapter-layout.xml:1108
#, no-c-format
msgid "HorizontalSplitPanel"
msgstr ""

#. Tag: classname
#: chapter-layout.xml:1111
#, no-c-format
msgid "VerticalSplitPanel"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1114
#, no-c-format
msgid ""
"<classname>HorizontalSplitPanel</classname> and "
"<classname>VerticalSplitPanel</classname> are a two-component containers "
"that divide the available space into two areas to accomodate the two "
"components. <classname>HorizontalSplitPanel</classname> makes the split "
"horizontally with a vertical splitter bar, and "
"<classname>VerticalSplitPanel</classname> vertically with a horizontal "
"splitter bar. The user can drag the bar to adjust its position."
msgstr ""
"<classname>HorizontalSplitPanel</classname> 和 "
"<classname>VerticalSplitPanel</classname> 是双组件容器, 它们将可用的空间分为"
"两个部分, 放置两个组件. <classname>HorizontalSplitPanel</classname> 用垂直分"
"隔条将空间分为水平的两部分, <classname>VerticalSplitPanel</classname> 用水平"
"分隔条将空间分为垂直的两部分. 用户可以拖拽分隔条来调整它的位置."

#. Tag: para
#: chapter-layout.xml:1124
#, no-c-format
msgid ""
"You can set the two components with the <methodname>setFirstComponent()</"
"methodname> and <methodname>setSecondComponent()</methodname> methods, or "
"with the regular <methodname>addComponent()</methodname> method."
msgstr ""
"你可以使用 <methodname>setFirstComponent()</methodname> 和 "
"<methodname>setSecondComponent()</methodname> 方法来设置容器内的两个组件, 也"
"可以使用通常的 <methodname>addComponent()</methodname> 方法."

#. Tag: programlisting
#: chapter-layout.xml:1132
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Have a panel to put stuff in\n"
"Panel panel = new Panel(\"Split Panels Inside This Panel\");\n"
"\n"
"// Have a horizontal split panel as its content\n"
"HorizontalSplitPanel hsplit = new HorizontalSplitPanel();\n"
"panel.setContent(hsplit);\n"
"\n"
"// Put a component in the left panel\n"
"Tree tree = new Tree(\"Menu\", TreeExample.createTreeContent());\n"
"hsplit.setFirstComponent(tree);\n"
"\n"
"// Put a vertical split panel in the right panel\n"
"VerticalSplitPanel vsplit = new VerticalSplitPanel();\n"
"hsplit.setSecondComponent(vsplit);\n"
"\n"
"// Put other components in the right panel\n"
"vsplit.addComponent(new Label(\"Here's the upper panel\"));\n"
"vsplit.addComponent(new Label(\"Here's the lower panel\"));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1134
#, no-c-format
msgid ""
"The result is shown in <xref linkend=\"figure.splitpanel.basic\"/>. Observe "
"that the tree is cut horizontally as it can not fit in the layout. If its "
"height exceeds the height of the panel, a vertical scroll bar will appear "
"automatically. If horizontal scroll bar is necessary, you could put the "
"content in a <classname>Panel</classname>, which can have scroll bars in "
"both directions."
msgstr ""
"运行结果见 <xref linkend=\"figure.splitpanel.basic\"/>(译注: 图内容与示例代码"
"貌似不符). 注意, Tree 在水平方向上被切断了, 因为它尺寸太大, 无法适应容器尺"
"寸. 如果它的高度超出了容器范围, 会自动出现垂直滚动条. 如果需要水平滚动条的"
"话, 你可以将内容组件放在 <classname>Panel</classname> 内, 它在水平和垂直两个"
"方向上都可以带有滚动条."

#. Tag: para
#: chapter-layout.xml:1152
#, no-c-format
msgid ""
"You can set the split position with <methodname>setSplitPosition()</"
"methodname>. It accepts any units defined in the <classname>Sizeable</"
"classname> interface, with percentual size relative to the size of the "
"component."
msgstr ""
"你可以使用 <methodname>setSplitPosition()</methodname> 方法设置分隔位置. 这个"
"方法可以接受 <classname>Sizeable</classname> 接口中定义的任何参数, 其中的百分"
"比尺寸是相对于组件本身的尺寸."

#. Tag: programlisting
#: chapter-layout.xml:1160
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Have a horizontal split panel\n"
"HorizontalSplitPanel hsplit = new HorizontalSplitPanel();\n"
"hsplit.setFirstComponent(new Label(\"75% wide panel\"));\n"
"hsplit.setSecondComponent(new Label(\"25% wide panel\"));\n"
"\n"
"// Set the position of the splitter as percentage\n"
"hsplit.setSplitPosition(75, Sizeable.UNITS_PERCENTAGE);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1162
#, no-c-format
msgid ""
"Another version of the <methodname>setSplitPosition()</methodname> method "
"allows leaving out the unit, using the same unit as previously. The method "
"also has versions take take a boolean parameter, <parameter>reverse</"
"parameter>, which allows defining the size of the right or bottom panel "
"instead of the left or top panel."
msgstr ""
"<methodname>setSplitPosition()</methodname> 方法的另一个版本可以不指定单位, "
"与前一次使用相同的单位. 这个方法还有一个版本, 接受一个 boolean 参数, "
"<parameter>reverse</parameter>, 这个参数可以用来指定右部/下部的尺寸, 而不是左"
"部/上部的尺寸."

#. Tag: para
#: chapter-layout.xml:1170
#, no-c-format
msgid ""
"The split bar allows the user to adjust the split position by dragging the "
"bar with mouse. To lock the split bar, use <methodname>setLocked(true)</"
"methodname>. When locked, the move handle in the middle of the bar is "
"disabled."
msgstr ""
"用户可以用鼠标拖动分隔条来调整两部分内容的分隔位置. 可以使用 "
"<methodname>setLocked(true)</methodname> 方法将分隔条锁定. 锁定之后, 分隔条中"
"间的鼠标拖动区会被禁用."

#. Tag: programlisting
#: chapter-layout.xml:1177
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Lock the splitter\n"
"hsplit.setLocked(true);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1179
#, no-c-format
msgid ""
"Setting the split position programmatically and locking the split bar is "
"illustrated in <xref linkend=\"figure.component.splitpanel.splitposition\"/>."
msgstr ""
"上面的例子通过程序来设置分隔位置, 然后锁定分隔条, 运行结果见 <xref linkend="
"\"figure.component.splitpanel.splitposition\"/>."

#. Tag: title
#: chapter-layout.xml:1185
#, no-c-format
msgid "A Layout With Nested SplitPanels"
msgstr "SplitPanel 布局(译注: 图的标题貌似不正确)"

#. Tag: para
#: chapter-layout.xml:1193
#, no-c-format
msgid ""
"Notice that the size of a split panel must not be undefined in the split "
"direction."
msgstr "注意, SplitPanel 本身在它的分隔方向上的尺寸必须是确定的."

#. Tag: programlisting
#: chapter-layout.xml:1201
#, no-c-format
msgid ""
"<?pocket-size 70% ?>/* For a horizontal SplitPanel. */\n"
".v-splitpanel-horizontal {}\n"
".v-splitpanel-hsplitter {}\n"
".v-splitpanel-hsplitter-locked {}\n"
"\n"
"/* For a vertical SplitPanel. */\n"
".v-splitpanel-vertical {}\n"
".v-splitpanel-vsplitter {}\n"
".v-splitpanel-vsplitter-locked {}\n"
"\n"
"/* The two container panels. */\n"
".v-splitpanel-first-container {}  /* Top or left panel. */\n"
".v-splitpanel-second-container {} /* Bottom or right panel. */"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1203
#, no-c-format
msgid ""
"The entire split panel has the style <literal>v-splitpanel-horizontal</"
"literal> or <literal>v-splitpanel-vertical</literal>, depending on the panel "
"direction. The split bar or <emphasis>splitter</emphasis> between the two "
"content panels has either the <literal>...-splitter</literal> or "
"<literal>...-splitter-locked</literal> style, depending on whether its "
"position is locked or not."
msgstr ""
"SplitPanel 整体带有 <literal>v-splitpanel-horizontal</literal> 或 <literal>v-"
"splitpanel-vertical</literal> 样式. 两个内容 Panel 之间的分隔条, 或者叫 "
"<emphasis>分隔器</emphasis> 带有 <literal>...-splitter</literal> 或 "
"<literal>...-splitter-locked</literal> 样式, 具体是哪个样式, 由分隔条是否被锁"
"定决定."

#. Tag: classname
#: chapter-layout.xml:1220
#, no-c-format
msgid "TabSheet"
msgstr "TabSheet"

#. Tag: para
#: chapter-layout.xml:1222
#, no-c-format
msgid ""
"The <classname>TabSheet</classname> is a multicomponent container that "
"allows switching between the components with \"tabs\". The tabs are "
"organized as a tab bar at the top of the tab sheet. Clicking on a tab opens "
"its contained component in the main display area of the layout. If there are "
"more tabs than fit in the tab bar, navigation buttons will appear."
msgstr ""
"<classname>TabSheet</classname> 是一种多组件容器, 它可以用 \"tab\" 的形式在各"
"个组件之间切换. Tab 以 TabSheet 上方的 Tab Bar 的形式组织. 点击一个 Tab, 会在"
"布局的主显示区域中打开这个 Tab 中包含的组件. 如果 Tab 太多, 超过了 Tab Bar 的"
"显示范围, 会出现导航按钮."

#. Tag: title
#: chapter-layout.xml:1231
#, no-c-format
msgid "A Simple TabSheet Layout"
msgstr "一个简单的 TabSheet 布局"

#. Tag: title
#: chapter-layout.xml:1240
#, no-c-format
msgid "Adding Tabs"
msgstr "添加 Tab"

#. Tag: para
#: chapter-layout.xml:1242
#, no-c-format
msgid ""
"You add new tabs to a tab sheet with the <methodname>addTab()</methodname> "
"method. The simple version of the method takes as its parameter the root "
"component of the tab. You can use the root component to retrieve its "
"corresponding <classname>Tab</classname> object. Typically, you put a layout "
"component as the root component."
msgstr ""
"你可以使用 <methodname>addTab()</methodname> 方法将新的 Tab 添加到 TabSheet"
"中. 这个方法的简单版本接受的参数是 Tab 内容的根组件. 你可以使用根组件得到它对"
"应的 <classname>Tab</classname> 对象. 通常我们使用布局管理组件作为 Tab 内的根"
"组件."

#. Tag: para
#: chapter-layout.xml:1250
#, no-c-format
msgid ""
"You can also give the caption and the icon as parameters for the "
"<methodname>addTab()</methodname> method. The following example demonstrates "
"the creation of a simple tab sheet, where each tab shows a different "
"<classname>Label</classname> component. The tabs have an icon, which are (in "
"this example) loaded as Java class loader resources from the application."
msgstr ""
"你也可以在 <methodname>addTab()</methodname> 方法的参数中指定 Tab 的标题和图"
"标. 下例演示了如何创建一个简单的 TabSheet, 其中的各个 Tab 显示不同的 "
"<classname>Label</classname> 组件. Tab 带有图标, (在这个例子中) 图标从应用程"
"序的 Java 类资源中载入."

#. Tag: programlisting
#: chapter-layout.xml:1259
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[TabSheet tabsheet = new TabSheet();\n"
"layout.addComponent(tabsheet);\n"
"\n"
"// Create the first tab\n"
"VerticalLayout tab1 = new VerticalLayout();\n"
"tab1.addComponent(new Embedded(null,\n"
"        new ThemeResource(\"img/planets/Mercury.jpg\")));\n"
"tabsheet.addTab(tab1, \"Mercury\",\n"
"        new ThemeResource(\"img/planets/Mercury_symbol.png\"));\n"
"\n"
"// This tab gets its caption from the component caption\n"
"VerticalLayout tab2 = new VerticalLayout();\n"
"tab2.addComponent(new Embedded(null,\n"
"        new ThemeResource(\"img/planets/Venus.jpg\")));\n"
"tab2.setCaption(\"Venus\");\n"
"tabsheet.addTab(tab2).setIcon(\n"
"        new ThemeResource(\"img/planets/Venus_symbol.png\"));\n"
"...]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:1263
#, no-c-format
msgid "Tab Objects"
msgstr "Tab 对象"

#. Tag: para
#: chapter-layout.xml:1265
#, no-c-format
msgid ""
"Each tab in a tab sheet is represented as a <classname>Tab</classname> "
"object, which manages the tab caption, icon, and attributes such as hidden "
"and visible. You can set the caption with <methodname>setCaption()</"
"methodname> and the icon with <methodname>setIcon()</methodname>. If the "
"component added with <methodname>addTab()</methodname> has a caption or "
"icon, it is used as the default for the <classname>Tab</classname> object. "
"However, changing the attributes of the root component later does not affect "
"the tab, but you must make the setting through the <classname>Tab</"
"classname> object. The <methodname>addTab()</methodname> returns the new "
"<classname>Tab</classname> object, so you can easily set an attribute using "
"the reference."
msgstr ""
"TabSheet 中的各个 Tab 由 <classname>Tab</classname> 对象来表达, 这个对象管理 "
"Tab 的标题, 图标, 以及其他属性, 比如隐藏和可见. 你可以使用 "
"<methodname>setCaption()</methodname> 方法设置标题, 使用 "
"<methodname>setIcon()</methodname> 方法设置图标. 使用 <methodname>addTab()</"
"methodname> 方法添加 Tab 时, 如果被添加的组件带有标题或图标, 这个标题或图标会"
"被用作 <classname>Tab</classname> 对象的标题或图标. 但是, 如果之后再改变根组"
"件的属性, 不会影响到 Tab 对象, 你必须通过<classname>Tab</classname> 对象来设"
"置这些属性. <methodname>addTab()</methodname> 方法返回一个新的 "
"<classname>Tab</classname> 对象, 因此你可以很容易地通过这个对象引用来设置属"
"性."

#. Tag: programlisting
#: chapter-layout.xml:1280
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// Set an attribute using the returned "
"reference\n"
"tabsheet.addTab(myTab).setCaption(\"My Tab\");]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:1283
#, no-c-format
msgid "Disabling and Hiding Tabs"
msgstr "禁用和隐藏 Tab"

#. Tag: para
#: chapter-layout.xml:1285
#, no-c-format
msgid ""
"A tab can be disabled by setting <methodname>setEnabled(false)</methodname> "
"for the <classname>Tab</classname> object, thereby disallowing selecting it."
msgstr ""
"对 <classname>Tab</classname> 对象设置 <methodname>setEnabled(false)</"
"methodname> 可以禁用 Tab, 禁用后将无法选择这个 Tab."

#. Tag: para
#: chapter-layout.xml:1291
#, no-c-format
msgid ""
"A tab can be made invisible by setting <methodname>setVisible(false)</"
"methodname> for the <classname>Tab</classname> object. The "
"<methodname>hideTabs()</methodname> method allows hiding the tab bar "
"entirely. This can be useful in tabbed document interfaces (TDI) when there "
"is only one tab."
msgstr ""
"对  <classname>Tab</classname> 对象设置 <methodname>setVisible(false)</"
"methodname> 可以隐藏 Tab. <methodname>hideTabs()</methodname> 方法可以隐藏整"
"个 Tab Bar. 在 Tab 式文档界面(TDI, Tabbed Document Interfaces) 中, 如果只有一"
"个 Tab, 那么隐藏 Tab Bar 是很有用的."

#. Tag: title
#: chapter-layout.xml:1301
#, no-c-format
msgid "A TabSheet with Hidden and Disabled Tabs"
msgstr "含隐藏 Tab 和禁用 Tab 的 TabSheet"

#. Tag: title
#: chapter-layout.xml:1312
#, no-c-format
msgid "Tab Change Events"
msgstr "Tab 切换事件"

#. Tag: para
#: chapter-layout.xml:1314
#, no-c-format
msgid ""
"Clicking on a tab selects it. This fires a <classname>TabSheet."
"SelectedTabChangeEvent</classname>, which you can handle by implementing the "
"<classname>TabSheet.SelectedTabChangeListener</classname> interface. You can "
"access the tabsheet of the event with <methodname>getTabSheet()</"
"methodname>, and find the new selected tab with "
"<methodname>getSelectedTab()</methodname>."
msgstr ""
"点击一个 Tab 会选中它. 这个操作会激发一个 <classname>TabSheet."
"SelectedTabChangeEvent</classname> 事件, 你可以实现 <classname>TabSheet."
"SelectedTabChangeListener</classname> 接口来处理这个事件. 你可以使用 "
"<methodname>getTabSheet()</methodname> 方法, 取得事件相关的 TabSheet, 还可以"
"使用 <methodname>getSelectedTab()</methodname> 方法得到新选中的 Tab."

#. Tag: para
#: chapter-layout.xml:1324
#, no-c-format
msgid ""
"You can programmatically select a tab with <methodname>setSelectedTab()</"
"methodname>, which also fires the <classname>SelectedTabChangeEvent</"
"classname> (beware of recursive events). Reselecting the currently selected "
"tab does not fire the event."
msgstr ""
"你可以通过程序选中 Tab, 方法是使用 <methodname>setSelectedTab()</methodname> "
"方法, 这个方法同样会激发 <classname>SelectedTabChangeEvent</classname> 事件 "
"(这时要小心递归事件). 已经选中的 Tab, 再次选中它不会激发这个事件."

#. Tag: para
#: chapter-layout.xml:1331
#, no-c-format
msgid ""
"Notice that when the first tab is added, it is selected and the change event "
"is fired, so if you want to catch that, you need to add your listener before "
"adding any tabs."
msgstr ""
"注意, 当添加第一个 Tab 时, 它会被选中, 并且激发这个事件, 所以如果你希望捕捉这"
"个事件的话, 你应该在添加 Tab 之前先添加事件监听器."

#. Tag: title
#: chapter-layout.xml:1338
#, no-c-format
msgid "Creating Tab Content Dynamically"
msgstr "动态创建 Tab 内容"

#. Tag: para
#: chapter-layout.xml:1340
#, no-c-format
msgid ""
"In the following example, we create the tabs as empty content layouts, and "
"add the tab content dynamically when a tab is selected:"
msgstr ""
"下例中, 我们创建 Tab, 在其中只放置空的布局, 然后在 Tab 被选中时动态地创建其中"
"的内容:"

#. Tag: programlisting
#: chapter-layout.xml:1345
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[TabSheet tabsheet = new TabSheet();\n"
"\n"
"// Create tab content dynamically when tab is selected\n"
"tabsheet.addSelectedTabChangeListener(\n"
"        new TabSheet.SelectedTabChangeListener() {\n"
"    public void selectedTabChange(SelectedTabChangeEvent event) {\n"
"        // Find the tabsheet\n"
"        TabSheet tabsheet = event.getTabSheet();\n"
"        \n"
"        // Find the tab (here we know it's a layout)\n"
"        Layout tab = (Layout) tabsheet.getSelectedTab();\n"
"\n"
"        // Get the tab caption from the tab object\n"
"        String caption = tabsheet.getTab(tab).getCaption();\n"
"        \n"
"        // Fill the tab content\n"
"        tab.removeAllComponents();\n"
"        tab.addComponent(new Image(null,\n"
"            new ThemeResource(\"img/planets/\"+caption+\".jpg\")));\n"
"    }\n"
"});\n"
"        \n"
"// Have some tabs\n"
"String[] tabs = {\"Mercury\", \"Venus\", \"Earth\", \"Mars\"};\n"
"for (String caption: tabs)\n"
"    tabsheet.addTab(new VerticalLayout(), caption,\n"
"        new ThemeResource(\"img/planets/\"+caption+\"_symbol.png\"));]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:1351
#, no-c-format
msgid "Enabling and Handling Closing Tabs"
msgstr "允许关闭 Tab, 处理 Tab 的关闭事件"

#. Tag: para
#: chapter-layout.xml:1353
#, no-c-format
msgid ""
"You can enable a close button for individual tabs with the "
"<literal>closable</literal> property in the <classname>TabSheet.Tab</"
"classname> objects."
msgstr ""
"你可以使用 <classname>TabSheet.Tab</classname> 对象的 <literal>closable</"
"literal> 属性, 为各个 Tab 分别显示关闭按钮."

#. Tag: programlisting
#: chapter-layout.xml:1359
#, no-c-format
msgid ""
"<![CDATA[// Enable closing the tab\n"
"tabsheet.getTab(tabComponent).setClosable(true);]]>"
msgstr ""

#. Tag: title
#: chapter-layout.xml:1362
#, no-c-format
msgid "TabSheet with Closable Tabs"
msgstr "Tab 可关闭的 TabSheet"

#. Tag: title
#: chapter-layout.xml:1371
#, no-c-format
msgid "Handling Tab Close Events"
msgstr "处理 Tab 的关闭事件"

#. Tag: para
#: chapter-layout.xml:1373
#, no-c-format
msgid ""
"You can handle closing tabs by implementing a custom <classname>TabSheet."
"CloseHandler</classname>. The default implementation simply calls "
"<methodname>removeTab()</methodname> for the tab to be closed, but you can "
"prevent the close by not calling it. This allows, for example, opening a "
"dialog window to confirm the close."
msgstr ""
"你可以实现自定义的 <classname>TabSheet.CloseHandler</classname> 处理器, 来处"
"理 Tab 的关闭事件. 这个处理器的默认实现只是简单地对被关闭的 Tab 调用 "
"<methodname>removeTab()</methodname>, 但你可以不调用这个方法, 这样就可以阻止 "
"Tab 关闭. 利用这个机能我们可以打开一个确认对话框, 询问是否要关闭?."

#. Tag: programlisting
#: chapter-layout.xml:1382
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[tabsheet.setCloseHandler(new CloseHandler() {\n"
"    @Override\n"
"    public void onTabClose(TabSheet tabsheet,\n"
"                           Component tabContent) {\n"
"        Tab tab = tabsheet.getTab(tabContent);\n"
"        Notification.show(\"Closing \" + tab.getCaption());\n"
"        \n"
"        // We need to close it explicitly in the handler\n"
"        tabsheet.removeTab(tab);\n"
"    }\n"
"});]]>"
msgstr ""

#. Tag: programlisting
#: chapter-layout.xml:1389
#, no-c-format
msgid ""
".v-tabsheet {}\n"
".v-tabsheet-tabs {}\n"
".v-tabsheet-content {}\n"
".v-tabsheet-deco {}\n"
".v-tabsheet-tabcontainer {}\n"
".v-tabsheet-tabsheetpanel {}\n"
".v-tabsheet-hidetabs {}\n"
"\n"
".v-tabsheet-scroller {}\n"
".v-tabsheet-scrollerPrev {}\n"
".v-tabsheet-scrollerNext {}\n"
".v-tabsheet-scrollerPrev-disabled{}\n"
".v-tabsheet-scrollerNext-disabled{}\n"
"\n"
".v-tabsheet-tabitem {}\n"
".v-tabsheet-tabitem-selected {}\n"
".v-tabsheet-tabitemcell {}\n"
".v-tabsheet-tabitemcell-first {}\n"
"\n"
".v-tabsheet-tabs td {}\n"
".v-tabsheet-spacertd {}"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1391
#, no-c-format
msgid ""
"The entire tabsheet has the <literal>v-tabsheet</literal> style. A tabsheet "
"consists of three main parts: the tabs on the top, the main content pane, "
"and decorations around the tabsheet."
msgstr ""
"TabSheet 整体带有 <literal>v-tabsheet</literal> 样式. Tabsheet 由三个主要部分"
"组成: 上方的 Tab, 主内容显示区, 以及 TabSheet 周围的装饰."

#. Tag: para
#: chapter-layout.xml:1397
#, no-c-format
msgid ""
"The tabs area at the top can be styled with <literal>v-tabsheet-tabs</"
"literal>, <literal>v-tabsheet-tabcontainer</literal> and <literal>v-tabsheet-"
"tabitem*</literal>."
msgstr ""
"上方的 Tab 区域可以使用 <literal>v-tabsheet-tabs</literal>, <literal>v-"
"tabsheet-tabcontainer</literal> 和 <literal>v-tabsheet-tabitem*</literal> 来"
"控制样式."

#. Tag: para
#: chapter-layout.xml:1404
#, no-c-format
msgid ""
"The style <literal>v-tabsheet-spacertd</literal> is used for any empty space "
"after the tabs. If the tabsheet has too little space to show all tabs, "
"scroller buttons enable browsing the full tab list. These use the styles "
"<literal>v-tabsheet-scroller*</literal>."
msgstr ""
"<literal>v-tabsheet-spacertd</literal> 样式用于控制 Tab 之后剩余的空白区域. "
"如果 TabSheet 的空间不足以显示所有的 Tab, 会出现滚动按钮, 用于查看完整的 Tab "
"列表. 滚动按钮使用 <literal>v-tabsheet-scroller*</literal> 样式."

#. Tag: para
#: chapter-layout.xml:1411
#, no-c-format
msgid ""
"The content area where the tab contents are shown can be styled with "
"<literal>v-tabsheet-content</literal>, and the surrounding decoration with "
"<literal>v-tabsheet-deco</literal>."
msgstr ""
"Tab 内容的显示区域使用 <literal>v-tabsheet-content</literal> 样式, TabSheet "
"周围的装饰使用 <literal>v-tabsheet-deco</literal> 样式."

#. Tag: classname
#: chapter-layout.xml:1420
#, no-c-format
msgid "Accordion"
msgstr "Accordion"

#. Tag: para
#: chapter-layout.xml:1422
#, no-c-format
msgid ""
"<classname>Accordion</classname> is a multicomponent container similar to "
"<classname>TabSheet</classname>, except that the \"tabs\" are arranged "
"vertically. Clicking on a tab opens its contained component in the space "
"between the tab and the next one. You can use an <classname>Accordion</"
"classname> identically to a <classname>TabSheet</classname>, which it "
"actually inherits. See <xref linkend=\"layout.tabsheet\"/> for more "
"information."
msgstr ""
"<classname>Accordion</classname> 是与 <classname>TabSheet</classname> 类似的"
"多组件容器, 区别是, 它的 \"tab\" 是垂直排列的. 点击一个 Tab, 会在这个 Tab 和"
"下一个 Tab 之间的位置显示它包含的组件. 你可以用与 <classname>TabSheet</"
"classname> 完全相同的方式使用 <classname>Accordion</classname>, Accordion 实"
"际上就是从 TabSheet 继承而来的. 详情请参见 <xref linkend=\"layout.tabsheet\"/"
">."

#. Tag: para
#: chapter-layout.xml:1432
#, no-c-format
msgid ""
"The following example shows how you can create a simple accordion. As the "
"<classname>Accordion</classname> is rather naked alone, we put it inside a "
"Panel that acts as its caption and provides it a border."
msgstr ""
"下例演示如何创建一个简单的 Accordion. As the <classname>Accordion</"
"classname> 本身不带任何装饰, 我们将它放在 Panel 之内, 用 Panel 为 Accordion "
"提供标题和边框."

#. Tag: programlisting
#: chapter-layout.xml:1438
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// Create the Accordion.\n"
"Accordion accordion = new Accordion();\n"
"\n"
"// Have it take all space available in the layout.\n"
"accordion.setSizeFull();\n"
"\n"
"// Some components to put in the Accordion.\n"
"Label l1 = new Label(\"There are no previously saved actions.\");\n"
"Label l2 = new Label(\"There are no saved notes.\");\n"
"Label l3 = new Label(\"There are currently no issues.\");\n"
"\n"
"// Add the components as tabs in the Accordion.\n"
"accordion.addTab(l1, \"Saved actions\", null);\n"
"accordion.addTab(l2, \"Notes\", null);\n"
"accordion.addTab(l3, \"Issues\", null);\n"
"\n"
"// A container for the Accordion.\n"
"Panel panel = new Panel(\"Tasks\");\n"
"panel.setWidth(\"300px\");\n"
"panel.setHeight(\"300px\");\n"
"panel.setContent(accordion);\n"
"\n"
"// Trim its layout to allow the Accordion take all space.\n"
"panel.getLayout().setSizeFull();\n"
"panel.getLayout().setMargin(false);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1440
#, no-c-format
msgid "shows what the example would look like with the default theme."
msgstr "展示了默认 Theme 下示例程序的运行结果."

#. Tag: title
#: chapter-layout.xml:1446
#, no-c-format
msgid "An Accordion"
msgstr "Accordion"

#. Tag: programlisting
#: chapter-layout.xml:1457
#, no-c-format
msgid ""
".v-accordion {}\n"
".v-accordion-item {}\n"
".v-accordion-item-open {}\n"
".v-accordion-item-first {}\n"
".v-accordion-item-caption {}\n"
".v-accordion-item-caption .v-caption {}\n"
".v-accordion-item-content {}"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1459
#, no-c-format
msgid ""
"The top-level element of <classname>Accordion</classname> has the <literal>v-"
"accordion</literal> style. An <classname>Accordion</classname> consists of a "
"sequence of item elements, each of which has a caption element (the tab) and "
"a content area element."
msgstr ""
"<classname>Accordion</classname> 的顶级元素带有 <literal>v-accordion</"
"literal> 样式. <classname>Accordion</classname> 由它之下的一系列项目元素组"
"成, 每个项目元素中含有一个标题元素(Tab 本身), 和一个内容区域元素."

#. Tag: para
#: chapter-layout.xml:1466
#, no-c-format
msgid ""
"The selected item (tab) has also the <literal>v-accordion-open</literal> "
"style. The content area is not shown for the closed items."
msgstr ""
"被选中的项目(Tab) 还带有 <literal>v-accordion-open</literal> 样式. 对于被关闭"
"的项目, 内容区域不会显示."

#. Tag: classname
#: chapter-layout.xml:1474
#, no-c-format
msgid "AbsoluteLayout"
msgstr "AbsoluteLayout"

#. Tag: para
#: chapter-layout.xml:1476
#, no-c-format
msgid ""
"<classname>AbsoluteLayout</classname> allows placing components in arbitrary "
"positions in the layout area. The positions are specified in the "
"<methodname>addComponent()</methodname> method with horizontal and vertical "
"coordinates relative to an edge of the layout area. The positions can "
"include a third depth dimension, the <emphasis>z-index</emphasis>, which "
"specifies which components are displayed in front and which behind other "
"components."
msgstr ""
"<classname>AbsoluteLayout</classname> 可以将组件放置在布局区域内的任何位置. "
"位置在方法 <methodname>addComponent()</methodname> 中指定, 值是相对于布局区域"
"边界的水平和垂直坐标. 位置还可以包含第三个维度: 深度, 也叫 <emphasis>z-下标</"
"emphasis>, 它决定哪个组件显示在前方, 哪个组件在其他组件的后方."

#. Tag: para
#: chapter-layout.xml:1485
#, no-c-format
msgid ""
"The positions are specified by a CSS absolute position string, using the "
"<literal>left</literal>, <literal>right</literal>, <literal>top</literal>, "
"<literal>bottom</literal>, and <literal>z-index</literal> properties known "
"from CSS. In the following example, we have a 300 by 150 pixels large layout "
"and position a text field 50 pixels from both the left and the top edge:"
msgstr ""
"位置以 CSS 绝对位置字符串的形式指定, 使用与 CSS 相同的 <literal>left</"
"literal>, <literal>right</literal>, <literal>top</literal>, <literal>bottom</"
"literal>, 和 <literal>z-index</literal> 属性. 下例中, 我们创建一个 300 x 150 "
"像素大的布局, 然后将一个文本放置在距离左边界和上边界 50 像素的位置:"

#. Tag: programlisting
#: chapter-layout.xml:1493
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// A 400x250 pixels size layout\n"
"AbsoluteLayout layout = new AbsoluteLayout();\n"
"layout.setWidth(\"400px\");\n"
"layout.setHeight(\"250px\");\n"
"        \n"
"// A component with coordinates for its top-left corner\n"
"TextField text = new TextField(\"Somewhere someplace\");\n"
"layout.addComponent(text, \"left: 50px; top: 50px;\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1495
#, no-c-format
msgid ""
"The <literal>left</literal> and <literal>top</literal> specify the distance "
"from the left and top edge, respectively. The <literal>right</literal> and "
"<literal>bottom</literal> specify the distances from the right and top edge."
msgstr ""
"<literal>left</literal> 和 <literal>top</literal> 属性分别指定相对于左边界和"
"上边界的距离. <literal>right</literal> 和 <literal>bottom</literal> 分别指定"
"相对于左边界和上边界(译注: 原文如此, 应为\"下边界\")的距离."

#. Tag: programlisting
#: chapter-layout.xml:1501
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// At the top-left corner\n"
"Button button = new Button( \"left: 0px; top: 0px;\");\n"
"layout.addComponent(button, \"left: 0px; top: 0px;\");\n"
"\n"
"// At the bottom-right corner\n"
"Button buttCorner = new Button( \"right: 0px; bottom: 0px;\");\n"
"layout.addComponent(buttCorner, \"right: 0px; bottom: 0px;\");\n"
"\n"
"// Relative to the bottom-right corner\n"
"Button buttBrRelative = new Button( \"right: 50px; bottom: 50px;\");\n"
"layout.addComponent(buttBrRelative, \"right: 50px; bottom: 50px;\");\n"
"\n"
"// On the bottom, relative to the left side\n"
"Button buttBottom = new Button( \"left: 50px; bottom: 0px;\");\n"
"layout.addComponent(buttBottom, \"left: 50px; bottom: 0px;\");\n"
"\n"
"// On the right side, up from the bottom\n"
"Button buttRight = new Button( \"right: 0px; bottom: 100px;\");\n"
"layout.addComponent(buttRight, \"right: 0px; bottom: 100px;\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1503
#, no-c-format
msgid ""
"The result of the above code examples is shown in <xref linkend=\"figure."
"layout.absolutelayout.bottomright\"/>."
msgstr ""
"上例的运行结果见 <xref linkend=\"figure.layout.absolutelayout.bottomright\"/"
">."

#. Tag: title
#: chapter-layout.xml:1508
#, no-c-format
msgid "Components Positioned Relative to Various Edges"
msgstr "放置在各种位置上的组件"

#. Tag: para
#: chapter-layout.xml:1516
#, no-c-format
msgid ""
"In the above examples, we had components of undefined size and specified the "
"positions of components by a single pair of coordinates. The other "
"possibility is to specify an area and let the component fill the area by "
"specifying a proportinal size for the component, such as \"<literal>100%</"
"literal>\". Normally, you use <methodname>setSizeFull()</methodname> to take "
"the entire area given by the layout."
msgstr ""
"上面的示例中, 我们将组件尺寸设置为未指定, 并用一对坐标来指定组件位置. 另一种"
"方法是指定一个区域, 然后为组件设置一个比例大小, 比如 \"<literal>100%</"
"literal>\", 让它填充到这个区域中. 通常可以设置 <methodname>setSizeFull()</"
"methodname>, 让组件占满布局分配给它的整个区域."

#. Tag: programlisting
#: chapter-layout.xml:1526
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Specify an area that a component should "
"fill\n"
"Panel panel = new Panel(\"A Panel filling an area\");\n"
"panel.setSizeFull(); // Fill the entire given area\n"
"layout.addComponent(panel, \"left: 25px; right: 50px; \"+\n"
"                           \"top: 100px; bottom: 50px;\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1528
#, no-c-format
msgid ""
"The result is shown in <xref linkend=\"figure.layout.absolutelayout.area\"/>"
msgstr "运行结果见  <xref linkend=\"figure.layout.absolutelayout.area\"/>"

#. Tag: title
#: chapter-layout.xml:1533
#, no-c-format
msgid "Component Filling an Area Specified by Coordinates"
msgstr "用坐标指定一个区域, 组件充满这个区域"

#. Tag: para
#: chapter-layout.xml:1541
#, no-c-format
msgid "You can also use proportional coordinates to specify the coordinates:"
msgstr "也可以用比例坐标来指定区域:"

#. Tag: programlisting
#: chapter-layout.xml:1545
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// A panel that takes 30% to 90% horizontally "
"and\n"
"// 20% to 80% vertically\n"
"Panel panel = new Panel(\"A Panel\");\n"
"panel.setSizeFull(); // Fill the specified area\n"
"layout.addComponent(panel, \"left: 30%; right: 10%;\" +\n"
"                           \"top: 20%; bottom: 20%;\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1547
#, no-c-format
msgid ""
"The result is shown in <xref linkend=\"figure.layout.absolutelayout."
"proportional\"/>"
msgstr ""
"运行结果见 <xref linkend=\"figure.layout.absolutelayout.proportional\"/>"

#. Tag: title
#: chapter-layout.xml:1552
#, no-c-format
msgid "Specifying an Area by Proportional Coordinates"
msgstr "通过比例坐标指定区域"

#. Tag: para
#: chapter-layout.xml:1560
#, no-c-format
msgid ""
"Drag and drop is very useful for moving the components contained in an "
"<classname>AbsoluteLayout</classname>. Check out the example in <xref "
"linkend=\"advanced.dragndrop.drop-on-component\"/>."
msgstr ""
"对于 <classname>AbsoluteLayout</classname> 内的组件, 使用拖放操作来移动它们的"
"位置是很便利的方法. 示例请参见 <xref linkend=\"advanced.dragndrop.drop-on-"
"component\"/>."

#. Tag: title
#: chapter-layout.xml:1567 chapter-layout.xml:1680
#, no-c-format
msgid "Styling with CSS"
msgstr "使用 CSS 控制样式"

#. Tag: programlisting
#: chapter-layout.xml:1569
#, no-c-format
msgid ""
"<![CDATA[.v-absolutelayout {}\n"
".v-absolutelayout-wrapper {}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1571
#, no-c-format
msgid ""
"The <classname>AbsoluteLayout</classname> component has <literal>v-"
"absolutelayout</literal> root style. Each component in the layout is "
"contained within an element that has the <literal>v-absolutelayout-wrapper</"
"literal>. The component captions are outside the wrapper elements, in a "
"separate element with the usual <literal>v-caption</literal> style."
msgstr ""
"<classname>AbsoluteLayout</classname> 组件的顶层式样为 <literal>v-"
"absolutelayout</literal>. 布局内的每个组件都包含在一个元素内, 这个元素的样式"
"是 <literal>v-absolutelayout-wrapper</literal>. 组件标题在这个包装元素之外, "
"位于一个独立的元素之内, 使用通常的 <literal>v-caption</literal> 样式."

#. Tag: classname
#: chapter-layout.xml:1583
#, no-c-format
msgid "CssLayout"
msgstr "CssLayout"

#. Tag: para
#: chapter-layout.xml:1585
#, no-c-format
msgid ""
"<classname>CssLayout</classname> allows strong control over styling of the "
"components contained inside the layout. The components are contained in a "
"simple DOM structure consisting of <literal>&lt;div&gt;</literal> elements. "
"By default, the contained components are laid out horizontally and wrap "
"naturally when they reach the width of the layout, but you can control this "
"and most other behaviour with CSS. You can also inject custom CSS for each "
"contained component. As <classname>CssLayout</classname> has a very simple "
"DOM structure and no dynamic rendering logic, relying purely on the built-in "
"rendering logic of the browsers, it is the fastest of the layout components."
msgstr ""
"<classname>CssLayout</classname> 允许对布局内组件的样式进行高度控制. 组件被包"
"含在<literal>&lt;div&gt;</literal> 元素构成的简单的 DOM 结构中. 默认情况下, "
"被包含的组件水平排列, 达到布局最大款式都自然折行, 但你可以通过 CSS 来控制这个"
"行为, 其他大多数行为也都可以通过 CSS 来控制. 你还可以为每个组件注入自定义的 "
"CSS. 由于 <classname>CssLayout</classname> 的 DOM 结构非常简单, 也没有动态的"
"描绘逻辑, 它只依赖于浏览器本身内建的描绘逻辑, 所以它是所有布局管理组件中执行"
"速度最快的."

#. Tag: para
#: chapter-layout.xml:1597
#, no-c-format
msgid ""
"The basic use of <classname>CssLayout</classname> is just like with any "
"other layout component:"
msgstr "<classname>CssLayout</classname> 的基本用法与其他布局管理组件类似:"

#. Tag: programlisting
#: chapter-layout.xml:1602
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[CssLayout layout = new CssLayout();\n"
"        \n"
"// Component with a layout-managed caption and icon\n"
"TextField tf = new TextField(\"A TextField\");\n"
"tf.setIcon(new ThemeResource(\"icons/user.png\"));\n"
"layout.addComponent(tf);\n"
"\n"
"// Labels are 100% wide by default so must unset width\n"
"Label label = new Label(\"A Label\");\n"
"label.setWidth(Sizeable.SIZE_UNDEFINED, 0);\n"
"layout.addComponent(label);\n"
"        \n"
"layout.addComponent(new Button(\"A Button\"));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1604
#, no-c-format
msgid ""
"The result is shown in <xref linkend=\"figure.layout.csslayout.basic\"/>. "
"Notice that the default spacing and alignment of the layout is quite crude "
"and CSS styling is nearly always needed."
msgstr ""
"运行结果见 <xref linkend=\"figure.layout.csslayout.basic\"/>. 注意, 布局默认"
"的间隔空白和对齐控制是非常粗糙的, 通常总是需要你通过 CSS 来控制其中的样式."

#. Tag: title
#: chapter-layout.xml:1611
#, no-c-format
msgid "Basic Use of <classname>CssLayout</classname>"
msgstr "<classname>CssLayout</classname> 的基本使用"

#. Tag: para
#: chapter-layout.xml:1619
#, no-c-format
msgid ""
"The <literal>display</literal> attribute of <classname>CssLayout</classname> "
"is <literal>inline-block</literal> by default, so the components are laid "
"out horizontally following another. <classname>CssLayout</classname> has "
"100% width by default. If the components reach the width of the layout, they "
"are wrapped to the next \"line\" just as text would be. If you add a "
"component with 100% width, it will take an entire line by wrapping before "
"and after the component."
msgstr ""
"<classname>CssLayout</classname> 的 <literal>display</literal> 属性默认值是 "
"<literal>inline-block</literal>, 因此组件在水平方向逐个排列. "
"<classname>CssLayout</classname> 宽地默认为 100%. 如果内部组件达到了布局宽度"
"的边界, 它们会向文本一样折到下一 \"行\". 如果你添加了一个 100% 宽度的组件, 它"
"将占据整行, 它之前和之后都会出现折行."

#. Tag: title
#: chapter-layout.xml:1630
#, no-c-format
msgid "CSS Injection"
msgstr "CSS 注入"

#. Tag: para
#: chapter-layout.xml:1632
#, no-c-format
msgid ""
"Overriding the <methodname>getCss()</methodname> method allows injecting "
"custom CSS for each component. The CSS returned by the method is inserted in "
"the <parameter>style</parameter> attribute of the <literal>&lt;div&gt;</"
"literal> element of the component, so it will override any style definitions "
"made in CSS files."
msgstr ""
"覆盖 <methodname>getCss()</methodname> 方法可以为每个组件注入自定义 CSS. 这个"
"方法返回的 CSS 会被插入到组件的 <literal>&lt;div&gt;</literal> 元素的 "
"<parameter>style</parameter> 属性中, 因此它会覆盖掉 CSS 文件导致的所有样式定"
"义."

#. Tag: programlisting
#: chapter-layout.xml:1640
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[CssLayout layout = new CssLayout() {\n"
"    @Override\n"
"    protected String getCss(Component c) {\n"
"        if (c instanceof Label) {\n"
"            // Color the boxes with random colors\n"
"            int rgb = (int) (Math.random()*(1<<24));\n"
"            return \"background: #\" + Integer.toHexString(rgb);\n"
"        }\n"
"        return null;\n"
"    }\n"
"};\n"
"layout.setWidth(\"400px\"); // Causes to wrap the contents\n"
"\n"
"// Add boxes of various sizes\n"
"for (int i=0; i<40; i++) {\n"
"    Label box = new Label(\"&nbsp;\", ContentMode.HTML);\n"
"    box.addStyleName(\"flowbox\");\n"
"    box.setWidth((float) Math.random()*50,\n"
"                 Sizeable.UNITS_PIXELS);\n"
"    box.setHeight((float) Math.random()*50,\n"
"                  Sizeable.UNITS_PIXELS);\n"
"    layout.addComponent(box);\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1642
#, no-c-format
msgid ""
"The style name added to the components allows making common styling in a CSS "
"file:"
msgstr "添加到组件上的样式名可以在 CSS 中定义共通样式:"

#. Tag: programlisting
#: chapter-layout.xml:1647
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[.v-label-flowbox {\n"
"  border: thin black solid;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1649
#, no-c-format
msgid "shows the rendered result."
msgstr "显示了上例的运行结果"

#. Tag: title
#: chapter-layout.xml:1654
#, no-c-format
msgid "Use of <methodname>getCss()</methodname> and line wrap"
msgstr "<methodname>getCss()</methodname> 方法和折行的使用"

#. Tag: title
#: chapter-layout.xml:1664
#, no-c-format
msgid "Browser Compatibility"
msgstr "浏览器兼容性"

#. Tag: para
#: chapter-layout.xml:1666
#, no-c-format
msgid ""
"The stregth of the <classname>CssLayout</classname> is also its weakness. "
"Much of the logic behind the other layout components is there to give nice "
"default behaviour and to handle the differences in different browsers. Some "
"browsers, no need to say which, are notoriously incompatible with the CSS "
"standards, so they require a lot of custom CSS. You may need to make use of "
"the browser-specific style classes in the root element of the application. "
"Some features in the other layouts are not even solvable in pure CSS, at "
"least in all browsers."
msgstr ""
"<classname>CssLayout</classname> 的优点同时也是它的弱点. 其他布局管理组件之后"
"隐藏着很多逻辑, 目的是实现良好的默认的行为, 并处理各种浏览器之间的差异. 某些"
"浏览器, 我们就不必提它们的名字了, 是著名的与 CSS 标准不兼容, 因此对它们需要编"
"写大量的定制 CSS. 你可能会需要在应用程序的根元素上使用某些浏览器独有的样式"
"类. 其他布局中的功能甚至是用纯 CSS 无法实现的, 至少不能对所有的浏览器实现."

#. Tag: programlisting
#: chapter-layout.xml:1682
#, no-c-format
msgid ""
"<![CDATA[.v-csslayout {}\n"
".v-csslayout-margin {}\n"
".v-csslayout-container {}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1684
#, no-c-format
msgid ""
"The <classname>CssLayout</classname> component has <literal>v-csslayout</"
"literal> root style. The margin element with <literal>v-csslayout-margin</"
"literal> style is always enabled. The components are contained in an element "
"with <literal>v-csslayout-container</literal> style."
msgstr ""
"<classname>CssLayout</classname> 组件的根样式为 <literal>v-csslayout</"
"literal>. 余白元素使用 <literal>v-csslayout-margin</literal> 样式, 这个元素永"
"远是有效的. 组件包含在 <literal>v-csslayout-container</literal> 样式的元素之"
"内."

#. Tag: para
#: chapter-layout.xml:1692
#, no-c-format
msgid ""
"For example, we could style the basic <classname>CssLayout</classname> "
"example shown earlier as follows:"
msgstr ""
"比如, 我们可以对前面例子中的 <classname>CssLayout</classname> 定义它的样式, "
"如下:"

#. Tag: programlisting
#: chapter-layout.xml:1697
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[/* Have the caption right of the text box, "
"bottom-aligned */\n"
".csslayoutexample .mylayout .v-csslayout-container {\n"
"    direction: rtl;\n"
"    line-height: 24px;\n"
"    vertical-align: bottom;\n"
"}\n"
"\n"
"/* Have some space before and after the caption */\n"
".csslayoutexample .mylayout .v-csslayout-container .v-caption {\n"
"    padding-left:  3px;\n"
"    padding-right: 10px;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1699
#, no-c-format
msgid ""
"The example would now be rendered as shown in <xref linkend=\"figure.layout."
"csslayout.styling\"/>."
msgstr ""
"这个示例的显示效果见 <xref linkend=\"figure.layout.csslayout.styling\"/>."

#. Tag: title
#: chapter-layout.xml:1705
#, no-c-format
msgid "Styling <classname>CssLayout</classname>"
msgstr "控制 <classname>CssLayout</classname> 的样式"

#. Tag: para
#: chapter-layout.xml:1713
#, no-c-format
msgid ""
"Captions and icons that are managed by the layout are contained in an "
"element with <literal>v-caption</literal> style. These caption elements are "
"contained flat at the same level as the actual component elements. This may "
"cause problems with wrapping in <literal>inline-block</literal> mode, as "
"wrapping can occur between the caption and its corresponding component "
"element just as well as between components. Such use case is therefore not "
"feasible."
msgstr ""
"由布局来管理的标题和图标, 会被包含在 <literal>v-caption</literal> 样式元素"
"内. 标题元素与真实组件处于同一个层次上, 平行排列. <literal>inline-block</"
"literal> 模式下折行时, 可能会出问题, 因为折行不仅发生在组件和组件之间, 也可能"
"发生在标题和对应的组件元素之间. 因此这样的用法是不适当的."

#. Tag: title
#: chapter-layout.xml:1726
#, no-c-format
msgid "Layout Formatting"
msgstr "布局格式控制"

#. Tag: para
#: chapter-layout.xml:1728
#, no-c-format
msgid ""
"While the formatting of layouts is mainly done with style sheets, just as "
"with other components, style sheets are not ideal or even possible to use in "
"some situations. For example, CSS does not allow defining the spacing of "
"table cells, which is done with the <parameter>cellspacing</parameter> "
"attribute in HTML."
msgstr ""
"虽然布局的格式主要是由样式表实现的, 和其他组件一样, 某些情况下, 样式表不是理"
"想的解决方案, 甚至完全不可用. 比如, CSS 不允许定义表格单元格之间的间隔空白, "
"间隔空白是通过 HTML 的 <parameter>cellspacing</parameter> 属性实现的."

#. Tag: para
#: chapter-layout.xml:1736
#, no-c-format
msgid ""
"Moreover, as many layout sizes are calculated dynamically in the Client-Side "
"Engine of Vaadin, some CSS settings can fail altogether."
msgstr ""
"此外, 由于很多布局的尺寸是在 Vaadin 的客户端引擎中动态计算的, 某些 CSS 设置可"
"能会完全失效."

#. Tag: title
#: chapter-layout.xml:1742
#, no-c-format
msgid "Layout Size"
msgstr "布局的尺寸"

#. Tag: para
#: chapter-layout.xml:1744
#, no-c-format
msgid ""
"The size of a layout component can be specified with the "
"<methodname>setWidth()</methodname> and <methodname>setHeight()</methodname> "
"methods defined in the <classname>Sizeable</classname> interface, just like "
"for any component. It can also be undefined, in which case the layout "
"shrinks to fit the component(s) inside it. <xref linkend=\"components."
"features.sizeable\"/> gives details on the interface."
msgstr ""
"和任何组件一样, 布局组件的尺寸可以使用 <methodname>setWidth()</methodname> "
"和 <methodname>setHeight()</methodname> 方法来设置, 这两个方法定义在 "
"<classname>Sizeable</classname> 接口中. 尺寸也可以是未指定, 这时布局会缩小到"
"适应于其中包含的组件大小. 关于 Sizeable 接口, 详情见 <xref linkend="
"\"components.features.sizeable\"/>."

#. Tag: title
#: chapter-layout.xml:1755
#, no-c-format
msgid "<classname>HorizontalLayout</classname> with Undefined vs Defined size"
msgstr ""
"<classname>HorizontalLayout</classname> 布局, 未指定尺寸和指定尺寸的情况"

#. Tag: para
#: chapter-layout.xml:1763
#, no-c-format
msgid ""
"Many layout components take 100% width by default, while they have the "
"height undefined."
msgstr "很多布局组件默认占据 100% 宽度, 默认高度则为未指定."

#. Tag: para
#: chapter-layout.xml:1768
#, no-c-format
msgid ""
"The sizes of components inside a layout can also be defined as a percentage "
"of the space available in the layout, for example with "
"<methodname>setWidth(\"100%\");</methodname> or with the (most commonly used "
"method) <methodname>setFullSize()</methodname> that sets 100% size in both "
"directions. If you use a percentage in a <classname>HorizontalLayout</"
"classname>, <classname>VerticalLayout</classname>, or <classname>GridLayout</"
"classname>, you will also have to set the component as <emphasis>expanding</"
"emphasis>, as noted below."
msgstr ""
"布局内部的组件的尺寸也可以定义为百分比, 这个百分相对于布局内的可用空间, 比"
"如, 可以使用 <methodname>setWidth(\"100%\");</methodname>, 也可以使用 "
"<methodname>setFullSize()</methodname> (这是最常用的), 这个方法会将宽高都设置"
"为 100%. 如果在 <classname>HorizontalLayout</classname>, "
"<classname>VerticalLayout</classname>, 或 <classname>GridLayout</classname> "
"内使用百分比尺寸, 你还需要将组件设置为 <emphasis>扩张</emphasis>, 详见下文."

#. Tag: para
#: chapter-layout.xml:1781
#, no-c-format
msgid ""
"<emphasis>A layout that contains components with percentual size must have a "
"defined size</emphasis>!"
msgstr ""
"<emphasis>如果布局中包含的组件使用了百分比尺寸, 那么容器布局本身必须指定尺寸"
"</emphasis>!"

#. Tag: para
#: chapter-layout.xml:1786
#, no-c-format
msgid ""
"If a layout has undefined size and a contained component has, say, 100% "
"size, the component will try to fill the space given by the layout, while "
"the layout will shrink to fit the space taken by the component, which is a "
"paradox. This requirement holds for height and width separately. The debug "
"mode allows detecting such invalid cases; see <xref linkend=\"advanced.debug."
"hierarchy\"/>."
msgstr ""
"如果布局尺寸未指定, 并且其中包含的组件使用相对尺寸, 比如, 100% 相对大小, 那么"
"组件会占据布局给出的所有空间, 而布局却想要缩小自己的尺寸与它包含的组件相适"
"应, 于是发生矛盾. 这里所说的限制对于高度和宽度两个方向都是存在的. 使用调试模"
"式可以查看这种无效的情况; 详情请参见 <xref linkend=\"advanced.debug.hierarchy"
"\"/>."

#. Tag: para
#: chapter-layout.xml:1796 chapter-layout.xml:2053
#, no-c-format
msgid "For example:"
msgstr "比如"

#. Tag: programlisting
#: chapter-layout.xml:1800
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// This takes 100% width but has undefined "
"height.\n"
"VerticalLayout layout = new VerticalLayout();\n"
"\n"
"// A button that takes all the space available in the layout.\n"
"Button button = new Button(\"100%x100% button\");\n"
"button.setSizeFull();\n"
"layout.addComponent(button);\n"
"\n"
"// We must set the layout to a defined height vertically, in\n"
"// this case 100% of its parent layout, which also must\n"
"// not have undefined size.\n"
"layout.setHeight(\"100%\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1802
#, no-c-format
msgid ""
"If you have a layout with undefined height, such as "
"<classname>VerticalLayout</classname>, in a <classname>UI</classname>, "
"<classname>Window</classname>, or <classname>Panel</classname>, and put "
"enough content in it so that it extends outside the bottom of the view area, "
"scrollbars will appear. If you want your application to use all the browser "
"view, nothing more or less, you should use <methodname>setFullSize()</"
"methodname> for the root layout."
msgstr ""
"如果你在 <classname>UI</classname>, <classname>Window</classname>, 或 "
"<classname>Panel</classname> 之内有一个布局, 比如 <classname>VerticalLayout</"
"classname>, 高度为未指定,  然后在其中放置了足够多的内容, 使得它的尺寸超过了外"
"部容器的可见区域, 这时就会出现滚动条. 如果你希望你的应用程序使用浏览器的全部"
"视图, 不要更多也不要更少, 那么你应该对最顶层布局使用 "
"<methodname>setFullSize()</methodname>."

#. Tag: programlisting
#: chapter-layout.xml:1812
#, no-c-format
msgid ""
"<![CDATA[// Create the UI content\n"
"VerticalLayout content = new VerticalLayout();\n"
"\n"
"// Use entire view area\n"
"content.setSizeFull();\n"
"\n"
"setContent(content);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1818
#, no-c-format
msgid ""
"If you set a <classname>HorizontalLayout</classname> to a defined size "
"horizontally or a <classname>VerticalLayout</classname> vertically, and "
"there is space left over from the contained components, the extra space is "
"distributed equally between the component cells. The components are aligned "
"within these cells, according to their alignment setting, top left by "
"default, as in the example below."
msgstr ""
"如果你将 <classname>HorizontalLayout</classname> 设置为确定的宽度, 或者将 "
"<classname>VerticalLayout</classname> 设置为确定的高度, 并且除了内涵的组件"
"外, 还有剩余的空间, 那么剩余空间会平均分配在各个组件单元格之间. 组件会在各自"
"的单元格内按照设定的方向对齐, 默认是朝左上对齐, 如下例所示."

#. Tag: para
#: chapter-layout.xml:1833
#, no-c-format
msgid ""
"Often, you don't want such empty space, but want one or more components to "
"take all the leftover space. You need to set such a component to 100% size "
"and use <methodname>setExpandRatio()</methodname>. If there is just one such "
"expanding component in the layout, the ratio parameter is irrelevant."
msgstr ""
"很多时候你不希望留下这些空白, 而希望一个或多个组件占据所有的剩余空间. 你需要"
"将这些组件设置为 100% 尺寸, 并使用 <methodname>setExpandRatio()</methodname> "
"方法来设置扩张比例. 如果布局内这样的扩张组件只有一个, 那么扩张比例的值是无所"
"谓的."

#. Tag: para
#: chapter-layout.xml:1847
#, no-c-format
msgid ""
"If you set multiple components as expanding, the expand ratio dictates how "
"large proportion of the available space (overall or excess depending on "
"whether the components are sized as a percentage or not) each component "
"takes. In the example below, the buttons have 1:2:3 ratio for the expansion."
msgstr ""
"如果你设置了多个扩张组件, 那么它们各自的扩张比例决定了各个组件的尺寸(如果组件"
"使用百分比尺寸, 那么将是组件自身的尺寸, 否则将是组件的额外尺寸)将在剩余空间中"
"占据多大的比例. 下例中, 按钮的扩张比例是 1:2:3."

#. Tag: para
#: chapter-layout.xml:1861
#, no-c-format
msgid ""
"<classname>GridLayout</classname> has corresponding method for both of its "
"directions, <methodname>setRowExpandRatio()</methodname> and "
"<methodname>setColumnExpandRatio()</methodname>."
msgstr ""
"<classname>GridLayout</classname> 对于垂直和水平方向分别使用 "
"<methodname>setRowExpandRatio()</methodname> 和 "
"<methodname>setColumnExpandRatio()</methodname> 方法."

#. Tag: para
#: chapter-layout.xml:1867
#, no-c-format
msgid ""
"Expansion is dealt in detail in the documentation of the layout components "
"that support it. See <xref linkend=\"layout.orderedlayout\"/> and <xref "
"linkend=\"layout.gridlayout\"/> for details on components with relative "
"sizes."
msgstr ""
"关于组件的扩张, 在支持这个功能的各个布局的文档中有详细介绍. 关于组件的相对尺"
"寸, 参见 <xref linkend=\"layout.orderedlayout\"/> 和 <xref linkend=\"layout."
"gridlayout\"/>."

#. Tag: title
#: chapter-layout.xml:1877
#, no-c-format
msgid "Layout Cell Alignment"
msgstr "布局单元格的对齐"

#. Tag: primary
#: chapter-layout.xml:1880
#, no-c-format
msgid "Alignment"
msgstr ""

#. Tag: methodname
#: chapter-layout.xml:1883
#, no-c-format
msgid "setComponentAlignment()"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1886
#, no-c-format
msgid ""
"You can set the alignment of the component inside a specific layout cell "
"with the <methodname>setComponentAlignment()</methodname> method. The method "
"takes as its parameters the component contained in the cell to be formatted, "
"and the horizontal and vertical alignment."
msgstr ""
"你可以使用 <methodname>setComponentAlignment()</methodname> 方法来设置组件在"
"某个布局单元格内的对齐方式. 这个方法接受的参数是单元格内的组件, 以及它在水平"
"和垂直方向上的对齐方式."

#. Tag: para
#: chapter-layout.xml:1893
#, no-c-format
msgid ""
"illustrates the alignment of components within a <classname>GridLayout</"
"classname>."
msgstr "展示了 <classname>GridLayout</classname> 之内组件对齐的情况."

#. Tag: title
#: chapter-layout.xml:1899
#, no-c-format
msgid "Cell Alignments"
msgstr "布局单元格内组件的对齐"

#. Tag: para
#: chapter-layout.xml:1910
#, no-c-format
msgid ""
"The easiest way to set alignments is to use the constants defined in the "
"<classname>Alignment</classname> class. Let us look how the buttons in the "
"top row of the above <classname>GridLayout</classname> are aligned with "
"constants:"
msgstr ""
"设置对齐方式的最简便方法是使用 <classname>Alignment</classname> 类中定义的常"
"数. 我们来看看上图中 <classname>GridLayout</classname> 第一行内的按钮是如何使"
"用这些常数来对齐的:"

#. Tag: programlisting
#: chapter-layout.xml:1917
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[// Create a grid layout\n"
"final GridLayout grid = new GridLayout(3, 3);\n"
"\n"
"grid.setWidth(400, Sizeable.UNITS_PIXELS);\n"
"grid.setHeight(200, Sizeable.UNITS_PIXELS);\n"
"\n"
"Button topleft = new Button(\"Top Left\");\n"
"grid.addComponent(topleft, 0, 0);\n"
"grid.setComponentAlignment(topleft, Alignment.TOP_LEFT);\n"
"\n"
"Button topcenter = new Button(\"Top Center\");\n"
"grid.addComponent(topcenter, 1, 0);\n"
"grid.setComponentAlignment(topcenter, Alignment.TOP_CENTER);\n"
"\n"
"Button topright = new Button(\"Top Right\");\n"
"grid.addComponent(topright, 2, 0);\n"
"grid.setComponentAlignment(topright, Alignment.TOP_RIGHT);\n"
"...]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1919
#, no-c-format
msgid ""
"The following table lists all the <classname>Alignment</classname> constants "
"by their respective locations:"
msgstr ""
"下表列出了所有的 <classname>Alignment</classname> 常数, 表中常数排列的位置代"
"表它的对齐方向:"

#. Tag: title
#: chapter-layout.xml:1925
#, no-c-format
msgid "Alignment Constants"
msgstr "对齐方式常数"

#. Tag: parameter
#: chapter-layout.xml:1929
#, no-c-format
msgid "TOP_LEFT"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1930
#, no-c-format
msgid "TOP_CENTER"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1931
#, no-c-format
msgid "TOP_RIGHT"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1934
#, no-c-format
msgid "MIDDLE_LEFT"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1935
#, no-c-format
msgid "MIDDLE_CENTER"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1936
#, no-c-format
msgid "MIDDLE_RIGHT"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1939
#, no-c-format
msgid "BOTTOM_LEFT"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1940
#, no-c-format
msgid "BOTTOM_CENTER"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1941
#, no-c-format
msgid "BOTTOM_RIGHT"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1947
#, no-c-format
msgid ""
"Another way to specify the alignments is to create an <classname>Alignment</"
"classname> object and specify the horizontal and vertical alignment with "
"separate constants. You can specify either of the directions, in which case "
"the other alignment direction is not modified, or both with a bitmask "
"operation between the two directions."
msgstr ""
"指定对齐方式的另一种方法是创建一个 <classname>Alignment</classname> 对象, 分"
"别指定它在水平和垂直方向上的对齐方式. 你可以指定其中任意一个, 这时另一个方向"
"的对齐设置不会变化, 也可以在两个方向的设定上使用 bit 结合操作, 同时指定两个方"
"向的对齐设置."

#. Tag: programlisting
#: chapter-layout.xml:1955
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[Button middleleft = new Button(\"Middle Left"
"\");\n"
"grid.addComponent(middleleft, 0, 1);\n"
"grid.setComponentAlignment(middleleft,\n"
"          new Alignment(Bits.ALIGNMENT_VERTICAL_CENTER | \n"
"                        Bits.ALIGNMENT_LEFT));\n"
"\n"
"Button middlecenter = new Button(\"Middle Center\");\n"
"grid.addComponent(middlecenter, 1, 1);\n"
"grid.setComponentAlignment(middlecenter,\n"
"          new Alignment(Bits.ALIGNMENT_VERTICAL_CENTER |\n"
"                        Bits.ALIGNMENT_HORIZONTAL_CENTER));\n"
"\n"
"Button middleright = new Button(\"Middle Right\");\n"
"grid.addComponent(middleright, 2, 1);\n"
"grid.setComponentAlignment(middleright,\n"
"          new Alignment(Bits.ALIGNMENT_VERTICAL_CENTER |\n"
"                        Bits.ALIGNMENT_RIGHT));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1957
#, no-c-format
msgid ""
"Obviously, you may combine only one vertical bitmask with one horizontal "
"bitmask, though you may leave either one out. The following table lists the "
"available alignment bitmask constants:"
msgstr ""
"显然, 你只能将一个垂直方向的常数与一个水平方向的常数结合, 当然你也可以不管其"
"中的某一个. 下表列出了所有可用的对齐设定 Bitmask  常数:"

#. Tag: title
#: chapter-layout.xml:1964
#, no-c-format
msgid "Alignment Bitmasks"
msgstr "对齐设定的 Bitmask 常数"

#. Tag: entry
#: chapter-layout.xml:1968
#, no-c-format
msgid "Horizontal"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1969
#, no-c-format
msgid "Bits.ALIGNMENT_LEFT"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1972
#, no-c-format
msgid "Bits.ALIGNMENT_HORIZONTAL_CENTER"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1975
#, no-c-format
msgid "Bits.ALIGNMENT_RIGHT"
msgstr ""

#. Tag: entry
#: chapter-layout.xml:1978
#, no-c-format
msgid "Vertical"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1979
#, no-c-format
msgid "Bits.ALIGNMENT_TOP"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1982
#, no-c-format
msgid "Bits.ALIGNMENT_VERTICAL_CENTER"
msgstr ""

#. Tag: parameter
#: chapter-layout.xml:1985
#, no-c-format
msgid "Bits.ALIGNMENT_BOTTOM"
msgstr ""

#. Tag: para
#: chapter-layout.xml:1991
#, no-c-format
msgid ""
"You can determine the current alignment of a component with "
"<methodname>getComponentAlignment()</methodname>, which returns an "
"<classname>Alignment</classname> object. The class provides a number of "
"getter methods for decoding the alignment, which you can also get as a "
"bitmask value."
msgstr ""
"你可以使用 <methodname>getComponentAlignment()</methodname> 方法来得到一个组"
"件的对齐设定, 返回值是 <classname>Alignment</classname> 对象. 这个类提供了很"
"多 getter 方法用于解析对齐设定, 当然对齐设定也可以以 Bitmask 值的形式得到."

#. Tag: title
#: chapter-layout.xml:2000
#, no-c-format
msgid "Size of Aligned Components"
msgstr "对齐的组件的尺寸"

#. Tag: para
#: chapter-layout.xml:2002
#, no-c-format
msgid ""
"You can only align a component that is smaller than its containing cell in "
"the direction of alignment. If a component has 100% width, as many "
"components have by default, horizontal alignment does not have any effect. "
"For example, <classname>Label</classname> is 100% wide by default and can "
"not therefore be horizontally aligned as such. The problem can be hard to "
"notice, as the text inside a <classname>Label</classname> is left-aligned."
msgstr ""
"只有在某个方向上, 组件的尺寸小于它所在单元格的尺寸时, 你才可以控制它的对齐. "
"如果组件宽度为 100%, 很多组件的默认都是如此, 那么水平对齐的设定不会有任何效"
"果. 比如, <classname>Label</classname> 默认宽度为 100%, 因此不能进行水平对"
"齐. 这个问题可能很难注意到, 因为 <classname>Label</classname> 之内的文字是左"
"对齐的."

#. Tag: para
#: chapter-layout.xml:2012
#, no-c-format
msgid ""
"You usually need to set either a fixed size, undefined size, or less than a "
"100% relative size for the component to be aligned - a size that is smaller "
"than the containing layout has."
msgstr ""
"对于需要对齐的组件, 你通常应该设置为固定大小, 未指定大小, 或小于 100% 的相对"
"大小, 也就是要小于布局的大小."

#. Tag: para
#: chapter-layout.xml:2018
#, no-c-format
msgid ""
"For example, assuming that a <classname>Label</classname> has short content "
"that is less wide than the containing <classname>VerticalLayout</classname>, "
"you could center it as follows:"
msgstr ""
"比如, 假设一个 <classname>Label</classname> 的内容比较短, 宽度小于它所在的 "
"<classname>VerticalLayout</classname>, 你可以将它居中对齐, 如下:"

#. Tag: programlisting
#: chapter-layout.xml:2024
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[VerticalLayout layout = new "
"VerticalLayout(); // 100% default width\n"
"Label label = new Label(\"Hello\"); // 100% default width\n"
"label.setSizeUndefined();\n"
"layout.addComponent(label);\n"
"layout.setComponentAlignment(label, Alignment.MIDDLE_CENTER);]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2026
#, no-c-format
msgid ""
"If you set the size as undefined and the component itself contains "
"components, make sure that the contained components also have either "
"undefined or fixed size. For example, if you set the size of a "
"<classname>Form</classname> as undefined, its containing layout "
"<classname>FormLayout</classname> has 100% default width, which you also "
"need to set as undefined. But then, any components inside the "
"<classname>FormLayout</classname> must have either undefined or fixed size."
msgstr ""
"如果设置组件的尺寸为未指定, 而组件本身又包含组件, 这是需要保证被包含的组件的"
"尺寸要么是未指定, 要么是固定尺寸. 比如, 如果设置 <classname>Form</classname> "
"的尺寸为未指定, 它包含的 <classname>FormLayout</classname> 布局默认宽度为 "
"100%, 你必须将宽度也设置为未指定. 但是这样以来, <classname>FormLayout</"
"classname> 之内包含的所有组件也必须是未指定尺寸, 或固定尺寸."

#. Tag: title
#: chapter-layout.xml:2043
#, no-c-format
msgid "Layout Cell Spacing"
msgstr "布局单元格的间隔空白"

#. Tag: para
#: chapter-layout.xml:2045
#, no-c-format
msgid ""
"The <classname>VerticalLayout</classname>, <classname>HorizontalLayout</"
"classname>, and <classname>GridLayout</classname> layouts offer a "
"<methodname>setSpacing()</methodname> method to enable spacing between the "
"cells of the layout."
msgstr ""
"<classname>VerticalLayout</classname>, <classname>HorizontalLayout</"
"classname>, 和 <classname>GridLayout</classname> 布局提供了 "
"<methodname>setSpacing()</methodname> 方法, 可以设置布局单元格之间的间隔空白."

#. Tag: programlisting
#: chapter-layout.xml:2057
#, no-c-format
msgid ""
"<![CDATA[VerticalLayout layout = new VerticalLayout();\n"
"layout.setSpacing(true);\n"
"layout.addComponent(new Button(\"Component 1\"));\n"
"layout.addComponent(new Button(\"Component 2\"));\n"
"layout.addComponent(new Button(\"Component 3\"));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2059
#, no-c-format
msgid ""
"The effect of spacing in <classname>VerticalLayout</classname> and "
"<classname>HorizontalLayout</classname> is illustrated in <xref linkend="
"\"figure.layout.spacing\"/>."
msgstr ""
"<classname>VerticalLayout</classname> 和 <classname>HorizontalLayout</"
"classname> 之内间隔空白的效果, 见 <xref linkend=\"figure.layout.spacing\"/>."

#. Tag: title
#: chapter-layout.xml:2066
#, no-c-format
msgid "Layout Spacings"
msgstr "布局中的间隔空白"

#. Tag: para
#: chapter-layout.xml:2077
#, no-c-format
msgid ""
"The exact amount of spacing is defined in CSS. If the default is not "
"suitable, you can customize it in a custom theme."
msgstr ""
"间隔空白的具体大小由 CSS 决定. 如果默认设置不适合你的需要, 你可以使用自定义 "
"theme 来定制它."

#. Tag: para
#: chapter-layout.xml:2082
#, no-c-format
msgid ""
"In the Valo theme, you can specify the spacing with the <varname>$v-layout-"
"spacing-vertical</varname> and <varname>$v-layout-spacing-horizontal</"
"varname> parameters, as described in <xref linkend=\"themes.valo.variables\"/"
">. The spacing defaults to the <varname>$v-unit-size</varname> measure."
msgstr ""
"在 Valo theme 中, 你可以使用 <varname>$v-layout-spacing-vertical</varname> "
"和 <varname>$v-layout-spacing-horizontal</varname> 参数来指定间隔空白, 详情请"
"参见 <xref linkend=\"themes.valo.variables\"/>. 间隔空白的默认值由 <varname>"
"$v-unit-size</varname> 指定."

#. Tag: para
#: chapter-layout.xml:2090
#, no-c-format
msgid ""
"When adjusting spacing in other themes, you should note that it is "
"implemented in a bit different ways in different layouts. In the ordered "
"layouts, it is done with spacer elements, while in the "
"<classname>GridLayout</classname> it has special handling. Please see the "
"sections on the individual components for more details."
msgstr ""
"当在其他 theme 中调整间隔空白时需要注意, 间隔空白的实现方式与布局的实现略为不"
"同. 在有顺序的布局中, 间隔空白使用空白元素来实现, <classname>GridLayout</"
"classname> 布局则有自己的特殊控制. 详情请阅读各布局组件的文档."

#. Tag: title
#: chapter-layout.xml:2100 chapter-layout.xml:2144
#, no-c-format
msgid "Layout Margins"
msgstr "布局的余白"

#. Tag: para
#: chapter-layout.xml:2102
#, no-c-format
msgid ""
"Most layout components do not have any margin around them by default. The "
"ordered layouts, as well as <classname>GridLayout</classname>, support "
"enabling a margin with <methodname>setMargin()</methodname>. This enables "
"CSS classes for each margin in the HTML element of the layout component."
msgstr ""
"大多数布局组件默认在它们的周围不带有余白. 有顺序的布局, 以及 "
"<classname>GridLayout</classname>, 可以使用 <methodname>setMargin()</"
"methodname> 方法启用余白功能. 这个方法会为布局组件的 HTML 元素各个方向的余白"
"设置对应的 CSS 样式."

#. Tag: para
#: chapter-layout.xml:2110
#, no-c-format
msgid ""
"In the Valo theme, the margin sizes default to <varname>$v-unit-size</"
"varname>. You can customize them with <varname>$v-layout-margin-top</"
"varname>, <varname>right</varname>, <varname>bottom</varname>, and "
"<varname>left</varname>. See <xref linkend=\"themes.valo.variables\"/> for a "
"description of the parameters."
msgstr ""
"在 Valo theme 中, 余白尺寸默认由 <varname>$v-unit-size</varname> 指定. 你可以"
"通过 <varname>$v-layout-margin-top</varname>, <varname>right</varname>, "
"<varname>bottom</varname>, 和 <varname>left</varname> 来定制余白尺寸. 关于这"
"些参数, 详情请参见 <xref linkend=\"themes.valo.variables\"/>."

#. Tag: para
#: chapter-layout.xml:2118
#, no-c-format
msgid ""
"To customize the default margins in other themes, you can define each margin "
"with the <literal>padding</literal> property in CSS. You may want to have a "
"custom CSS class for the layout component to enable specific customization "
"of the margins, as is done in the following with the <literal>mymargins</"
"literal> class:"
msgstr ""
"要在其他 theme 中定制默认的余白, 你可以使用 CSS 的 <literal>padding</"
"literal> 属性开定义各个方向的余白. 你可能希望为布局组件指定自定义的 CSS 样"
"式, 以便控制各个方向的余白, 下例中, 我们使用 <literal>mymargins</literal> 样"
"式实现这一点:"

#. Tag: programlisting
#: chapter-layout.xml:2126
#, no-c-format
msgid ""
".<emphasis role=\"bold\">mymargins</emphasis>.v-margin-left   {padding-"
"left:   <emphasis role=\"bold\">10</emphasis>px;}\n"
".<emphasis role=\"bold\">mymargins</emphasis>.v-margin-right  {padding-"
"right:  <emphasis role=\"bold\">20</emphasis>px;}\n"
".<emphasis role=\"bold\">mymargins</emphasis>.v-margin-top    {padding-"
"top:    <emphasis role=\"bold\">40</emphasis>px;}\n"
".<emphasis role=\"bold\">mymargins</emphasis>.v-margin-bottom {padding-"
"bottom: <emphasis role=\"bold\">80</emphasis>px;}"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2128
#, no-c-format
msgid ""
"You can enable only specific margins by passing a <classname>MarginInfo</"
"classname> to the <methodname>setMargin()</methodname>. The margins are "
"specified in clockwise order for top, right, bottom, and left margin. The "
"following would enable the left and right margins:"
msgstr ""
"你可以只允许某些方向的余白, 方法是传递一个 <classname>MarginInfo</classname> "
"对象作为 <methodname>setMargin()</methodname> 方法的参数. 余白按上, 右, 下, "
"左的顺时针方向指定. 下例会允许左侧和右侧余白:"

#. Tag: programlisting
#: chapter-layout.xml:2136
#, no-c-format
msgid "<![CDATA[layout.setMargin(new MarginInfo(false, true, false, true));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2138
#, no-c-format
msgid ""
"The resulting margins are shown in <xref linkend=\"figure.layout.margin\"/> "
"below. The two ways produce identical margins."
msgstr ""
"运行结果见 <xref linkend=\"figure.layout.margin\"/>. 两种方式产生完全相同的余"
"白效果."

#. Tag: title
#: chapter-layout.xml:2158
#, no-c-format
msgid "Custom Layouts"
msgstr "自定义布局"

#. Tag: para
#: chapter-layout.xml:2160
#, no-c-format
msgid ""
"While it is possible to create almost any typical layout with the standard "
"layout components, it is sometimes best to separate the layout completely "
"from code. With the <classname>CustomLayout</classname> component, you can "
"write your layout as a template in HTML that provides locations of any "
"contained components. The layout template is included in a theme. This "
"separation allows the layout to be designed separately from code, for "
"example using WYSIWYG web designer tools such as Adobe Dreamweaver."
msgstr ""
"虽然几乎所有的典型的布局都可以使用标准的布局组件来创建, 但是有些时候还是需要"
"将代码与布局完全分离. 使用 <classname>CustomLayout</classname> 组件, 你可以"
"以 XHTML 模板的方式编写自己的布局, 由 HTML 模板来决定内含组件的位置. 布局模板"
"包含在 Theme 中. 这种分离方式允许在代码之外设计布局, 这个设计工作可以使用所见"
"即所得(WYSIWYG)的 Web 设计工具, 比如 Adobe Dreamweaver."

#. Tag: para
#: chapter-layout.xml:2170
#, no-c-format
msgid ""
"A template is a HTML file located under <filename>layouts</filename> folder "
"under a theme folder under the <filename>WebContent/VAADIN/themes/</"
"filename> folder, for example, <filename>WebContent/VAADIN/themes/"
"<emphasis>themename/layouts/mylayout.html</emphasis></filename>. (Notice "
"that the root path <filename>WebContent/VAADIN/themes/</filename> for themes "
"is fixed.) A template can also be provided dynamically from an "
"<classname>InputStream</classname>, as explained below. A template includes "
"<literal>&lt;div&gt;</literal> elements with a <parameter>location</"
"parameter> attribute that defines the location identifier. All custom layout "
"HTML-files must be saved using UTF-8 character encoding."
msgstr ""
"模板是 HTML 文件, 位于 <filename>WebContent/VAADIN/themes/</filename> 下的某"
"个 Theme 文件夹下的 <filename>layouts</filename> 文件夹之下, 比如, "
"<filename>WebContent/VAADIN/themes/<emphasis>themename/layouts/mylayout."
"html</emphasis></filename>. (注意, 存放 Theme 的根路径 <filename>WebContent/"
"VAADIN/themes/</filename> 是固定的.) 还可以通过 <classname>InputStream</"
"classname> 来动态地提供模板, 详情见下文. 模板包含 <literal>&lt;div&gt;</"
"literal> 元素, 这个元素带有 <parameter>location</parameter> 属性, 定义了定位"
"标识符. 所有的自定义布局 HTML 文件必须使用 UTF-8 编码来保存."

#. Tag: programlisting
#: chapter-layout.xml:2183
#, no-c-format
msgid ""
"<?pocket-size 75% ?>&lt;table width=\"100%\" height=\"100%\"&gt;\n"
"  &lt;tr height=\"100%\"&gt;\n"
"    &lt;td&gt;\n"
"      &lt;table align=\"center\"&gt;\n"
"        &lt;tr&gt;\n"
"          &lt;td align=\"right\"&gt;User&amp;nbsp;name:&lt;/td&gt;\n"
"          &lt;td&gt;<emphasis role=\"strong\">&lt;div location=\"username"
"\"&gt;&lt;/div&gt;</emphasis>&lt;/td&gt;\n"
"        &lt;/tr&gt;\n"
"        &lt;tr&gt;\n"
"          &lt;td align=\"right\"&gt;Password:&lt;/td&gt;\n"
"          &lt;td&gt;<emphasis role=\"strong\">&lt;div location=\"password"
"\"&gt;&lt;/div&gt;</emphasis>&lt;/td&gt;\n"
"        &lt;/tr&gt;\n"
"      &lt;/table&gt;\n"
"    &lt;/td&gt;\n"
"  &lt;/tr&gt;\n"
"  &lt;tr&gt;\n"
"    &lt;td align=\"right\" colspan=\"2\"&gt;\n"
"      <emphasis role=\"strong\">&lt;div location=\"okbutton\"&gt;</"
"emphasis>&lt;/div&gt;\n"
"    &lt;/td&gt;\n"
"  &lt;/tr&gt;\n"
"&lt;/table&gt;"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2185
#, no-c-format
msgid ""
"The client-side engine of Vaadin will replace contents of the location "
"elements with the components. The components are bound to the location "
"elements by the location identifier given to <methodname>addComponent()</"
"methodname>, as shown in the example below."
msgstr ""
"Vaadin 的客户端引擎会将定位元素的内容替换组件的内容. 组件与定位元素使用定位标"
"识符来绑定, 定位标识符作为 <methodname>addComponent()</methodname> 方法的参数"
"给定, 见下例."

#. Tag: programlisting
#: chapter-layout.xml:2192
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[// Have a Panel where to put the custom "
"layout.\n"
"Panel panel = new Panel(\"Login\");\n"
"panel.setSizeUndefined();\n"
"main.addComponent(panel);\n"
"\n"
"// Create custom layout from \"layoutname.html\" template.\n"
"CustomLayout custom = new CustomLayout(\"layoutname\");\n"
"custom.addStyleName(\"customlayoutexample\");\n"
"\n"
"// Use it as the layout of the Panel.\n"
"panel.setContent(custom);\n"
"\n"
"// Create a few components and bind them to the location tags\n"
"// in the custom layout.\n"
"TextField username = new TextField();\n"
"custom.addComponent(username, \"username\");\n"
"\n"
"TextField password = new TextField();\n"
"custom.addComponent(password, \"password\");\n"
"\n"
"Button ok = new Button(\"Login\");\n"
"custom.addComponent(ok, \"okbutton\");]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2194
#, no-c-format
msgid ""
"The resulting layout is shown below in <xref linkend=\"figure.layout."
"customlayout\"/>."
msgstr "运行结果见 <xref linkend=\"figure.layout.customlayout\"/>."

#. Tag: title
#: chapter-layout.xml:2199
#, no-c-format
msgid "Example of a Custom Layout Component"
msgstr "自定义布局组件示例"

#. Tag: para
#: chapter-layout.xml:2210
#, no-c-format
msgid ""
"You can use <methodname>addComponent()</methodname> also to replace an "
"existing component in the location given in the second parameter."
msgstr ""
"如果某个定位标识符上已有组件, 你也可以使用 <methodname>addComponent()</"
"methodname> 来替换掉已有的组件."

#. Tag: para
#: chapter-layout.xml:2215
#, no-c-format
msgid ""
"In addition to a static template file, you can provide a template "
"dynamically with the <classname>CustomLayout</classname> constructor that "
"accepts an <classname>InputStream</classname> as the template source. For "
"example:"
msgstr ""
"除静态模板文件之外, 你也可以使用<classname>CustomLayout</classname> 构造器的"
"另一个版本, 这个版本接受 <classname>InputStream</classname> 参数来指定模板来"
"源, 通过这种方式可以动态提供模板内容. 如下例:"

#. Tag: programlisting
#: chapter-layout.xml:2221
#, no-c-format
msgid ""
"<![CDATA[new CustomLayout(new ByteArrayInputStream(\"<b>Template</b>\"."
"getBytes()));]]>"
msgstr ""

#. Tag: para
#: chapter-layout.xml:2223
#, no-c-format
msgid "<para>or</para>"
msgstr "<para>或者</para>"

#. Tag: programlisting
#: chapter-layout.xml:2225
#, no-c-format
msgid "<![CDATA[new CustomLayout(new FileInputStream(file));]]>"
msgstr ""
