# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2014-11-01 21:46+0000\n"
"PO-Revision-Date: 2014-11-04 23:47+0900\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"X-Generator: Poedit 1.6.5\n"

#. Tag: title
#: chapter-themes.xml:11
#, no-c-format
msgid "Themes"
msgstr ""

#. Tag: primary
#: chapter-themes.xml:14
#, no-c-format
msgid "theme"
msgstr ""

#. Tag: primary
#: chapter-themes.xml:17 chapter-themes.xml:120 chapter-themes.xml:533
#, no-c-format
msgid "<primary>CSS</primary>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:20
#, no-c-format
msgid ""
"This chapter provides details about using and creating <emphasis>themes</"
"emphasis> that control the visual look of web applications. Themes are "
"created using Sass, which is an extension of CSS (Cascading Style Sheets), "
"or with plain CSS. We provide an introduction to CSS, especially concerning "
"the styling of HTML by element classes."
msgstr ""
"<emphasis>Theme</emphasis> 控制了 Web 应用程序的外观, 本章详细介绍如何使用和"
"创建 Theme. Theme 使用 Sass 或 CSS 来创建, Sass 是 CSS (Cascading Style "
"Sheets) 的一种扩展. 本章也会介绍 CSS, 尤其是关于如何使用 HTML 元素的 class 来"
"控制样式."

#. Tag: title
#: chapter-themes.xml:29
#, no-c-format
msgid "Overview"
msgstr "概述"

#. Tag: para
#: chapter-themes.xml:31
#, no-c-format
msgid ""
"Vaadin separates the appearance of the user interface from its logic using "
"<emphasis>themes</emphasis>. Themes can include Sass or CSS style sheets, "
"custom HTML layouts, and any necessary graphics. Theme resources can also be "
"accessed from application code as <classname>ThemeResource</classname> "
"objects."
msgstr ""
"Vaadin 使用 <emphasis>Theme</emphasis> 将 UI 的外观表现与控制逻辑分离开. "
"Theme 可以包含 Sass 或 CSS 样式表, 自定义的 HTML 布局, 以及所需要的任何图片. "
"在应用程序代码中, Theme 资源也可以通过 <classname>ThemeResource</classname> "
"对象得到."

#. Tag: para
#: chapter-themes.xml:38
#, no-c-format
msgid ""
"Custom themes are placed under the <filename>VAADIN/themes/</filename> "
"folder of the web application (under <filename>WebContent</filename> in "
"Eclipse or <filename>src/main/webapp</filename> in Maven projects). This "
"location is fixed -- the <filename>VAADIN</filename> folder contains static "
"resources that are served by the Vaadin servlet. The servlet augments the "
"files stored in the folder by resources found from corresponding "
"<filename>VAADIN</filename> folders contained in JARs in the class path. For "
"example, the built-in themes are stored in the <filename>vaadin-themes.jar</"
"filename>."
msgstr ""
"自定义 theme 放在 Web 应用程序的 <filename>VAADIN/themes/</filename> 文件夹"
"下, 在 Eclipse 工程中, Web 应用程序目录在 <filename>WebContent</filename> 目"
"录下, 在 Maven 工程中, Web 应用程序目录在 <filename>src/main/webapp</"
"filename>目录下. 这个目录是固定的 -- <filename>VAADIN</filename> 文件夹包含静"
"态资源, 静态资源由 Vaadin Servlet 向外提供服务. Servlet 向外提供的资源包括: "
"这个文件夹下的文件, 以及 Java 类路径中各 JAR 文件内相应的 <filename>VAADIN</"
"filename> 文件夹下的资源. 比如, 内建的 theme 保存在 <filename>vaadin-themes."
"jar</filename> 内."

#. Tag: para
#: chapter-themes.xml:49
#, no-c-format
msgid "illustrates the contents of a theme."
msgstr "展示了 theme 的内容."

#. Tag: title
#: chapter-themes.xml:55
#, no-c-format
msgid "Contents of a Theme"
msgstr "Theme 的内容"

#. Tag: para
#: chapter-themes.xml:66
#, no-c-format
msgid ""
"The name of a theme folder defines the name of the theme. The name is used "
"in the <literal>@Theme</literal> annotation that sets the theme. A theme "
"must contain either a <filename>styles.scss</filename> for Sass themes, or "
"<filename>styles.css</filename> stylesheet for plain CSS themes, but other "
"contents have free naming. We recommend that you have the actual theme "
"content in a SCSS file named after the theme, such as <filename>mytheme."
"scss</filename>, to make the names more unique."
msgstr ""
"theme 文件夹的名称决定了 theme 的名称. theme 名称使用在 <literal>@Theme</"
"literal> 注解中, 我们使用这个注解来设置使用的 theme. 一个 theme 必须包含一个"
"名为 <filename>styles.scss</filename> 的 Sass theme 文件, 或者包含一个名为 "
"<filename>styles.css</filename> 的通常 CSS theme 文件, 除此之外的内容可以自由"
"命名. 我们建议将真实的 theme 内容保存为 SCSS 文件, 命名为与 theme 本身同名, "
"比如 <filename>mytheme.scss</filename>, 以便让文件名称更加清晰."

#. Tag: para
#: chapter-themes.xml:76
#, no-c-format
msgid ""
"We also suggest a convention for naming the folders as <filename>img</"
"filename> for images, <filename>layouts</filename> for custom layouts, and "
"<filename>css</filename> for additional stylesheets."
msgstr ""
"我们还建议遵循以下命名约定: 图像文件夹命名为 <filename>img</filename>, 自定义"
"布局文件夹命名为 <filename>layouts</filename>, 额外的样式表文件夹命名为 "
"<filename>css</filename>."

#. Tag: para
#: chapter-themes.xml:82
#, no-c-format
msgid ""
"Custom themes need to extend a base theme, as described in <xref linkend="
"\"themes.creating\"/>. Copying and modifying an existing theme is also "
"possible, but it is not recommended, as it may need more work to maintain if "
"the modifications are small."
msgstr ""
"定制 theme 需要从一个基础 theme 继承, 详情请参见 <xref linkend=\"themes."
"creating\"/>. 复制并修改一个已有的 theme 也是可以的, 但不推荐这样做, 因为如果"
"修改量较小时, 这种做法会导致较多的维护工作."

#. Tag: para
#: chapter-themes.xml:89
#, no-c-format
msgid ""
"You use a theme by specifying it with the <literal>@Theme</literal> "
"annotation for the &ui; class of the application as follows:"
msgstr ""
"使用 theme 的方法是, 在应用程序的 &ui; 类中通过 <literal>@Theme</literal> 注"
"解来指定 theme, 如下例:"

#. Tag: programlisting
#: chapter-themes.xml:94
#, no-c-format
msgid ""
"<![CDATA[@Theme(\"mytheme\")\n"
"public class MyUI extends UI {\n"
"    @Override\n"
"    protected void init(VaadinRequest request) {\n"
"        ...\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:96
#, no-c-format
msgid ""
"A theme can contain alternate styles for user interface components, which "
"can be changed as needed."
msgstr "theme 中可以包含 UI 组件的多种样式, 可以根据需要来变更样式."

#. Tag: para
#: chapter-themes.xml:101
#, no-c-format
msgid ""
"In addition to style sheets, a theme can contain HTML templates for custom "
"layouts used with <classname>CustomLayout</classname>. See <xref linkend="
"\"layout.customlayout\"/> for details."
msgstr ""
"除样式表外, theme 还可以包含用于 <classname>CustomLayout</classname> 自定义样"
"式的 HTML 模板. 详情请参见 <xref linkend=\"layout.customlayout\"/>."

#. Tag: para
#: chapter-themes.xml:107
#, no-c-format
msgid ""
"Resources provided in a theme can also be accessed using the "
"<classname>ThemeResource</classname> class, as described in <xref linkend="
"\"application.resources.theme\"/>. This allows displaying theme resources in "
"component icons, in the <classname>Image</classname> component, and other "
"such uses."
msgstr ""
"theme 提供的资源可以使用 <classname>ThemeResource</classname> 类来访问, 详情"
"请参见 <xref linkend=\"application.resources.theme\"/>. 这种方法可以将 theme "
"资源用作组件图标, 用在 <classname>Image</classname> 组件内, 以及其他各种用途."

#. Tag: title
#: chapter-themes.xml:117
#, no-c-format
msgid "Introduction to Cascading Style Sheets"
msgstr "层级样式表(CSS, Cascading Style Sheets)简介"

#. Tag: secondary
#: chapter-themes.xml:121
#, no-c-format
msgid "introduction"
msgstr ""

#. Tag: para
#: chapter-themes.xml:124
#, no-c-format
msgid ""
"Cascading Style Sheets or CSS is the basic technique to separate the "
"appearance of a web page from the content represented in HTML. In this "
"section, we give an introduction to CSS and look how they are relevant to "
"software development with Vaadin."
msgstr ""
"层叠样式表(简称 CSS) 是将 HTML 表达的 Web 页面内容与它的外观表现分离的基本技"
"术. 本节中, 我们将介绍 CSS, 并解释它与 Vaadin 软件开发的关系."

#. Tag: title
#: chapter-themes.xml:132
#, no-c-format
msgid "CSS Information Sources"
msgstr "关于 CSS 的参考资源"

#. Tag: para
#: chapter-themes.xml:134
#, no-c-format
msgid ""
"As we can only give a short intruction in this book, we encourage you to "
"refer to the rich literature on CSS and the many resources available in the "
"web. You can find the authoratitative specifications of CSS standards from "
"the <link xlink:href=\"http://www.w3.org/Style/CSS/\">W3C website</"
"link><phrase condition=\"web\">and other literature, references, and "
"tutorials from the <link xlink:href=\"http://www.dmoz.org/Computers/"
"Data_Formats/Style_Sheets/CSS/\">Open Directory Project page on CSS</link>, "
"as well as from other sources</phrase>."
msgstr ""
"本书中我们只能给出简短的介绍, 因此我们建议你参考关于 CSS 的大量书籍, 以及互联"
"网上的丰富资源. 在 <link xlink:href=\"http://www.w3.org/Style/CSS/\">W3C 网站"
"</link> 你可以找到关于 CSS 的最权威的规格说明<phrase condition=\"web\">, 在 "
"<link xlink:href=\"http://www.dmoz.org/Computers/Data_Formats/Style_Sheets/"
"CSS/\">Open Directory Project page on CSS</link> 可以找到其他文章, 参考手册, "
"教程, 当然你也可以在其他网站找到这类资源</phrase>."

#. Tag: title
#: chapter-themes.xml:148
#, no-c-format
msgid "Applying CSS to HTML"
msgstr "将 CSS 应用于 HTML"

#. Tag: para
#: chapter-themes.xml:150
#, no-c-format
msgid ""
"Let us consider the following HTML document that contains various markup "
"elements for formatting text. Vaadin UIs work in essentially similar "
"documents, even though they use somewhat different elements to draw the user "
"interface."
msgstr ""
"我们来看看以下 HTML 文档, 其中包含一些格式化文本的标记元素. Vaadin UI 使用的 "
"HTML 文档与这里的例子本质上是一样的, 不过其中使用了一些不同的元素来描绘 UI."

#. Tag: programlisting
#: chapter-themes.xml:157
#, no-c-format
msgid ""
"&lt;html&gt;\n"
"    &lt;head&gt;\n"
"        &lt;title&gt;My Page&lt;/title&gt;\n"
"        &lt;link rel=\"stylesheet\" type=\"text/css\"\n"
"              href=\"mystylesheet.css\"/&gt;\n"
"    &lt;/head&gt;\n"
"    &lt;body&gt;\n"
"        <emphasis role=\"strong\">&lt;p&gt;</emphasis>This is a "
"paragraph<emphasis role=\"strong\">&lt;/p&gt;</emphasis>\n"
"        <emphasis role=\"strong\">&lt;p&gt;</emphasis>This is another "
"paragraph<emphasis role=\"strong\">&lt;/p&gt;</emphasis>\n"
"        &lt;table&gt;\n"
"            &lt;tr&gt;\n"
"                <emphasis role=\"strong\">&lt;td&gt;</emphasis>This is a "
"table cell<emphasis role=\"strong\">&lt;/td&gt;</emphasis>\n"
"                <emphasis role=\"strong\">&lt;td&gt;</emphasis>This is "
"another table cell<emphasis role=\"strong\">&lt;/td&gt;</emphasis>\n"
"            &lt;/tr&gt;\n"
"        &lt;/table&gt;\n"
"    &lt;/body&gt;\n"
"&lt;/html&gt;"
msgstr ""

#. Tag: para
#: chapter-themes.xml:159
#, no-c-format
msgid ""
"The HTML elements that will be styled later by matching CSS rules are "
"emphasized above."
msgstr ""
"上例中被粗体表示的 HTML 元素, 下文中我们将通过与 CSS 规则匹配来控制它们的样"
"式."

#. Tag: para
#: chapter-themes.xml:164
#, no-c-format
msgid ""
"The <literal>&lt;link&gt;</literal> element in the HTML header defines the "
"used CSS stylesheet. The definition is automatically generated by Vaadin in "
"the HTML page that loads the UI of the application. A stylesheet can also be "
"embedded in the HTML document itself, as is done when optimizing their "
"loading in Vaadin TouchKit, for example."
msgstr ""
"HTML 头部的 <literal>&lt;link&gt;</literal> 元素指定了使用的 CSS 样式表. 这段"
"定义由 Vaadin 在负责装载应用程序 UI 的 HTML 页面中自动生成. 样式表也可以嵌入"
"在 HTML 文档内, 比如, 使用 Vaadin TouchKit 来优化页面装载速度时就会如此."

#. Tag: title
#: chapter-themes.xml:174
#, no-c-format
msgid "Basic CSS Rules"
msgstr "基本的 CSS 规则"

#. Tag: para
#: chapter-themes.xml:176
#, no-c-format
msgid ""
"A stylesheet contains a set of <emphasis>rules</emphasis> that can match the "
"HTML elements in the page. Each rule consists of one or more "
"<emphasis>selectors</emphasis>, separated with commas, and a "
"<emphasis>declaration block</emphasis> enclosed in curly braces. A "
"declaration block contains a list of <emphasis>property</emphasis> "
"statements. Each property has a label and a value, separated with a colon. A "
"property statement ends with a semicolon."
msgstr ""
"样式表中包含了一组 <emphasis>规则</emphasis>, 规则可以与页面内的 HTML 相匹"
"配. 每一条规则包含一个或多个 <emphasis>选择器</emphasis>, 以逗号分隔, 以及以"
"大括号括起的 <emphasis>声明块</emphasis>. 声明块包含一系列的 <emphasis>属性</"
"emphasis> 语句. 每个属性中包含标签和值, 以冒号分隔. 属性语句以分号结尾."

#. Tag: para
#: chapter-themes.xml:186
#, no-c-format
msgid ""
"Let us look at an example that matches certain elements in the simple HTML "
"document given in the previous section:"
msgstr "我们来看看一个例子, 这段样式表匹配前例中那个简单的 HTML 文档中的元素:"

#. Tag: programlisting
#: chapter-themes.xml:191
#, no-c-format
msgid ""
"<![CDATA[p, td { \n"
"  color: blue;\n"
"}\n"
"\n"
"td { \n"
"  background: yellow;\n"
"  font-weight: bold;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:193
#, no-c-format
msgid ""
"The <literal>p</literal> and <literal>td</literal> are element type "
"selectors that match with <literal>&lt;p&gt;</literal> and <literal>&lt;"
"td&gt;</literal> elements in HTML, respectively. The first rule matches with "
"both elements, while the second matches only with <literal>&lt;td&gt;</"
"literal> elements. Let us assume that you have saved the above style sheet "
"with the name <filename>mystylesheet.css</filename> and consider the "
"following HTML file located in the same folder."
msgstr ""
"<literal>p</literal> 和 <literal>td</literal> 是元素类型选择器, 分别匹配到 "
"HTML 中的 <literal>&lt;p&gt;</literal> 和 <literal>&lt;td&gt;</literal> 元"
"素. 上例中的第一条规则同时匹配这两种元素, 第二条规则只匹配到 <literal>&lt;"
"td&gt;</literal> 元素. 假设你将上面的样式表保存为 <filename>mystylesheet."
"css</filename>, 再假设 HTML 文件与它在同一个文件夹下."

#. Tag: title
#: chapter-themes.xml:204
#, no-c-format
msgid "Simple Styling by Element Type"
msgstr "使用元素类型进行简单的样式控制"

#. Tag: title
#: chapter-themes.xml:213
#, no-c-format
msgid "Style Inheritance in CSS"
msgstr "CSS 中的样式继承"

#. Tag: para
#: chapter-themes.xml:215
#, no-c-format
msgid ""
"CSS has <emphasis>inheritance</emphasis> where contained elements inherit "
"the properties of their parent elements. For example, let us change the "
"above example and define it instead as follows:"
msgstr ""
"CSS 拥有 <emphasis>继承</emphasis> 能力, 下层元素可以继承父元素的属性. 比如, "
"我们将上例的样式表修改为以下内容:"

#. Tag: programlisting
#: chapter-themes.xml:221
#, no-c-format
msgid ""
"<![CDATA[table {\n"
"    color: blue;\n"
"    background: yellow;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:223
#, no-c-format
msgid ""
"All elements contained in the <literal>&lt;table&gt;</literal> element would "
"have the same properties. For example, the text in the contained "
"<literal>&lt;td&gt;</literal> elements would be in blue color."
msgstr ""
"<literal>&lt;table&gt;</literal> 元素之内的所有元素都将带有相同的属性. 比如, "
"在<literal>&lt;td&gt;</literal> 元素内的文字将变为蓝色."

#. Tag: title
#: chapter-themes.xml:231
#, no-c-format
msgid "HTML Element Types"
msgstr "HTML 元素类型"

#. Tag: para
#: chapter-themes.xml:233
#, no-c-format
msgid ""
"HTML has a number of element types, each of which accepts a specific set of "
"properties. The <literal>&lt;div&gt;</literal> elements are generic elements "
"that can be used to create almost any layout and formatting that can be "
"created with a specific HTML element type. Vaadin uses <literal>&lt;div&gt;</"
"literal> elements extensively to draw the UI, especially in layout "
"components."
msgstr ""
"HTML 中有很多元素类型, 其中每一种都可以接受一组特定的属性. <literal>&lt;"
"div&gt;</literal> 元素是一种通用元素, 使用其他特定 HTML 元素类型可以创建的布"
"局和格式, 几乎全部都可以使用 div 元素来实现. Vaadin 广泛使用 <literal>&lt;"
"div&gt;</literal> 元素来描绘 UI, 尤其是在布局管理组件中."

#. Tag: primary
#: chapter-themes.xml:243
#, no-c-format
msgid "Google Web Toolkit"
msgstr ""

#. Tag: secondary
#: chapter-themes.xml:243
#, no-c-format
msgid "themeing"
msgstr ""

#. Tag: para
#: chapter-themes.xml:243
#, no-c-format
msgid ""
"Matching elements by their type as shown above is, however, rarely if ever "
"used in style sheets for Vaadin applications. We used it above, because it "
"is the normal way in regular HTML documents that use the various HTML "
"elements for formatting text, but it is not applicable in Vaadin UIs that "
"consist mostly of <literal>&lt;div&gt;</literal> elements. Instead, you need "
"to match by element class, as described next."
msgstr ""
"上例中介绍的, 使用元素的类型来匹配样式的方法, 在 Vaadin 应用程序的样式表中极"
"少用到, 甚至可以说几乎没有用到. 我们演示上面的例子是因为, 这是在使用不同元素"
"来控制文本格式的 HTML 文档中, 进行样式控制的通常方式, 但这种方式并不适用于 "
"Vaadin UI, 因为其中包含的大多是 <literal>&lt;div&gt;</literal> 元素. 你不应该"
"使用元素类型, 而应该使用元素 class 来匹配, 详情见下文."

#. Tag: title
#: chapter-themes.xml:257
#, no-c-format
msgid "Matching by Element Class"
msgstr "使用元素的 class 进行匹配"

#. Tag: para
#: chapter-themes.xml:259
#, no-c-format
msgid ""
"Matching HTML elements by the <emphasis>class</emphasis> attribute is the "
"most common form of matching in Vaadin stylesheets. It is also possible to "
"match with the <emphasis>identifier</emphasis> of a unique HTML element."
msgstr ""
"使用 <emphasis>class</emphasis> 属性来匹配 HTML 元素是 Vaadin 样式表中最通用"
"的匹配方式. 此外, 还可以使用 <emphasis>id</emphasis> 来匹配一个唯一的 HTML 元"
"素."

#. Tag: para
#: chapter-themes.xml:265
#, no-c-format
msgid ""
"The class of an HTML element is defined with the <parameter>class</"
"parameter> attribute as follows:"
msgstr ""
"HTML 元素的 class 通过它的 <parameter>class</parameter> 属性来指定, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:270
#, no-c-format
msgid ""
"<?pocket-size 70% ?>&lt;html&gt;\n"
"  &lt;body&gt;\n"
"    <emphasis role=\"strong\">&lt;p class=\"normal\"&gt;</emphasis>This is "
"the first paragraph<emphasis role=\"strong\">&lt;/p&gt;</emphasis>\n"
"\n"
"    <emphasis role=\"strong\">&lt;p class=\"another\"&gt;</emphasis>This is "
"the second paragraph<emphasis role=\"strong\">&lt;/p&gt;</emphasis>\n"
"\n"
"    &lt;table&gt;\n"
"      &lt;tr&gt;\n"
"        <emphasis role=\"strong\">&lt;td class=\"normal\"&gt;</emphasis>This "
"is a table cell<emphasis role=\"strong\">&lt;/td&gt;</emphasis>\n"
"        <emphasis role=\"strong\">&lt;td class=\"another\"&gt;</"
"emphasis>This is another table cell<emphasis role=\"strong\">&lt;/td&gt;</"
"emphasis>\n"
"      &lt;/tr&gt;\n"
"    &lt;/table&gt;\n"
"  &lt;/body&gt;\n"
"&lt;/html&gt;"
msgstr ""

#. Tag: para
#: chapter-themes.xml:272
#, no-c-format
msgid ""
"The class attributes of HTML elements can be matched in CSS rules with a "
"selector notation where the class name is written after a period following "
"the element name. This gives us full control of matching elements by their "
"type and class."
msgstr ""
"HTML 元素的 class 属性可以在 CSS 规则中使用 class 选择器来匹配, class 选择器"
"中, 元素名之后带有一个点号, 点号之后是 class 名. 这种方式使我们可以通过元素的"
"类型和 class 来匹配规则."

#. Tag: programlisting
#: chapter-themes.xml:279
#, no-c-format
msgid ""
"<![CDATA[p.normal   {color: red;}\n"
"p.another  {color: blue;}\n"
"td.normal  {background: pink;}\n"
"td.another {background: yellow;}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:281
#, no-c-format
msgid "The page would look as shown below:"
msgstr "页面显示结果会是:"

#. Tag: title
#: chapter-themes.xml:286
#, no-c-format
msgid "Matching HTML Element Type and Class"
msgstr "使用 HTML 元素的类型和 Class 进行匹配"

#. Tag: para
#: chapter-themes.xml:297
#, no-c-format
msgid ""
"We can also match solely by the class by using the universal selector "
"<literal>*</literal> for the element name, for example <literal>*.normal</"
"literal>. The universal selector can also be left out altogether so that we "
"use just the class name following the period, for example <literal>.normal</"
"literal>."
msgstr ""
"我们也可以单独使用 class, 方法是对元素名使用通用选择器 <literal>*</literal>, "
"比如 <literal>*.normal</literal>. 通用选择器也可以省略, 因此我们可以使用点号"
"加 class 名, 比如 <literal>.normal</literal>."

#. Tag: programlisting
#: chapter-themes.xml:305
#, no-c-format
msgid ""
"<![CDATA[.normal {\n"
"    color: red;\n"
"}\n"
"\n"
".another {\n"
"    blackground: yellow;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:307
#, no-c-format
msgid ""
"In this case, the rule will match with all elements of the same class "
"regardless of the element type. The result is shown in <xref linkend="
"\"figure.themes.match.class\"/>. This example illustrates a technique to "
"make style sheets compatible regardless of the exact HTML element used in "
"drawing a component."
msgstr ""
"这时, 规则会与相同 class 的所有元素匹配, 无论元素类型是什么. 运行结果见 "
"<xref linkend=\"figure.themes.match.class\"/>. 这个例子展示了一种方法, 使得样"
"式表可以保持兼容, 而无论用来描绘组件的具体的 HTML 元素类型是什么."

#. Tag: title
#: chapter-themes.xml:316
#, no-c-format
msgid "Matching Only HTML Element Class"
msgstr "只使用 HTML 元素的 class 进行匹配"

#. Tag: para
#: chapter-themes.xml:327
#, no-c-format
msgid ""
"To ensure future compatibility, we recommend that you use only matching "
"based on the classes and <emphasis>do not</emphasis> match for specific HTML "
"element types in CSS rules, because Vaadin may change the exact HTML "
"implementation how components are drawn in the future. For example, Vaadin "
"earlier used <literal>&lt;div&gt;</literal> element to draw "
"<classname>Button</classname> components, but later it was changed to use "
"the special-purpose <literal>&lt;button&gt;</literal> element in HTML. "
"Because of using the <literal>v-button</literal> style class in the CSS "
"rules for the button, styling it has changed only very little."
msgstr ""
"为了确保未来的兼容性, 我们建议你在 CSS 规则中只使用 class 进行匹配, "
"<emphasis>不要</emphasis> 匹配具体的 HTML 元素类型, 因为 Vaadin 的未来版本有"
"可能会改变组件描绘时的具体 HTML 实现. 比如, Vaadin 曾经使用 <literal>&lt;"
"div&gt;</literal> 元素来描绘 <classname>Button</classname> 组件, 但后来改为使"
"用 HTML 中不同种类的 <literal>&lt;button&gt;</literal> 元素. 由于在 CSS 规则"
"中对按钮组件使用了 <literal>v-button</literal> 样式类, 因此样式表的变更非常"
"少."

#. Tag: title
#: chapter-themes.xml:341
#, no-c-format
msgid "Matching by Descendant Relationship"
msgstr "使用元素的层级关系进行匹配"

#. Tag: para
#: chapter-themes.xml:343
#, no-c-format
msgid ""
"CSS allows matching HTML by their containment relationship. For example, "
"consider the following HTML fragment:"
msgstr "CSS 允许使用 HTML 元素的包含关系进行匹配. 比如, 对于以下 HTML 片段:"

#. Tag: programlisting
#: chapter-themes.xml:348
#, no-c-format
msgid ""
"<?pocket-size 70% ?>&lt;body&gt;\n"
"  &lt;p class=\"mytext\"&gt;Here is some text inside a\n"
"                    paragraph element&lt;/p&gt;\n"
"  &lt;table class=\"<emphasis role=\"strong\">mytable</emphasis>\"&gt;\n"
"    &lt;tr&gt;\n"
"      &lt;td class=\"<emphasis role=\"strong\">mytext</emphasis>\"&gt;Here "
"is text inside\n"
"                      a table and inside a td element.&lt;/td&gt;\n"
"    &lt;/tr&gt;\n"
"  &lt;/table&gt;\n"
"&lt;/body&gt;"
msgstr ""

#. Tag: para
#: chapter-themes.xml:350
#, no-c-format
msgid ""
"Matching by the class name <literal>.mytext</literal> alone would match both "
"the <literal>&lt;p&gt;</literal> and <literal>&lt;td&gt;</literal> elements. "
"If we want to match only the table cell, we could use the following selector:"
msgstr ""
"单独使用 class 名 <literal>.mytext</literal> 进行匹配, 将会匹配到 "
"<literal>&lt;p&gt;</literal> 和 <literal>&lt;td&gt;</literal> 组件. 如果我们"
"希望只匹配到 table 的单元格, 我们应该使用以下选择器:"

#. Tag: programlisting
#: chapter-themes.xml:356
#, no-c-format
msgid "<![CDATA[.mytable .mytext {color: blue;}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:358
#, no-c-format
msgid ""
"To match, a class listed in a rule does not have to be an immediate "
"descendant of the previous class, but just a descendant. For example, the "
"selector \"<literal>.v-panel .v-button</literal>\" would match all elements "
"with class <literal>.v-button</literal> somewhere inside an element with "
"class <literal>.v-panel</literal>."
msgstr ""
"要匹配成功, 规则中列出的 class 名不必是前一个 class 的直接后代, 只需要是某个"
"层次的后代即可. 比如, 选择器 \"<literal>.v-panel .v-button</literal>\" 会匹配"
"所有带 <literal>.v-button</literal> class 的元素, 只要它在带有 <literal>.v-"
"panel</literal> class 的某个元素之内."

#. Tag: title
#: chapter-themes.xml:368
#, no-c-format
msgid "Importance of Cascading"
msgstr "层级的重要性"

#. Tag: para
#: chapter-themes.xml:370
#, no-c-format
msgid ""
"CSS or Cascading Stylesheets are, as the name implies, about "
"<emphasis>cascading</emphasis> stylesheets, which means applying the "
"stylesheet rules according to their origin, importance, scope, specifity, "
"and order."
msgstr ""
"CSS(层级样式表), 就象它的名称暗示的那样, 是关于 <emphasis>层级</emphasis> 的"
"样式表, 也就是说样式表规则的适用遵循它们的来源, 重要度, 范围, 明确度, 以及顺"
"序."

#. Tag: para
#: chapter-themes.xml:377
#, no-c-format
msgid ""
"For exact rules for cascading in CSS, see the section <link xlink:href="
"\"http://www.w3.org/TR/css3-cascade/#cascading\">Cascading</link> in the CSS "
"specification."
msgstr ""
"关于 CSS 中层级的确切规则, 请参见 CSS 规格书的 <link xlink:href=\"http://www."
"w3.org/TR/css3-cascade/#cascading\">Cascading</link> 小节."

#. Tag: title
#: chapter-themes.xml:384
#, no-c-format
msgid "Importance"
msgstr "重要度"

#. Tag: para
#: chapter-themes.xml:386
#, no-c-format
msgid ""
"Declarations in CSS rules can be made override declarations with otherwise "
"higher priority by annotating them as <literal>!important</literal>. For "
"example, an inline style setting made in the <literal>style</literal> "
"attribute of an HTML element has a higher specificity than any rule in a CSS "
"stylesheet."
msgstr ""
"CSS 的规则定义可以被指定为覆盖其他更高优先度的规则, 方法是为这条规则加上 "
"<literal>!important</literal> 注解. 比如, HTML 元素中使用 <literal>style</"
"literal> 属性指定的样式, 优先度高于 CSS 样式表中的一切规则."

#. Tag: programlisting
#: chapter-themes.xml:394
#, no-c-format
msgid "<![CDATA[<div class=\"v-button\" style=\"height: 20px;\">...]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:396
#, no-c-format
msgid ""
"You can override the higher specificity with the <literal>!important</"
"literal> annotation as follows:"
msgstr ""
"你可以使用 <literal>!important</literal> 注解来覆盖高优先度的规则, 如下例:"

#. Tag: programlisting
#: chapter-themes.xml:401
#, no-c-format
msgid "<![CDATA[.v-button {height: 30px !important;}]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:405
#, no-c-format
msgid "Specificity"
msgstr "明确度"

#. Tag: para
#: chapter-themes.xml:407
#, no-c-format
msgid ""
"A rule that specifies an element with selectors more closely overrides ones "
"that specify it less specifically. With respect to the element class "
"selectors most commonly used in Vaadin themes, the specificity is determined "
"by the number of class selectors in the selector."
msgstr ""
"一个规则的选择器如果指定元素的明确度更高, 那么它将覆盖那么些明确度较低的规"
"则. 由于 Vaadin theme 中最多使用的是元素 class 选择器, 这种情况下明确度由规则"
"中 class 选择器的数量来决定."

#. Tag: programlisting
#: chapter-themes.xml:414
#, no-c-format
msgid ""
"<![CDATA[.v-button {}\n"
".v-verticallayout .v-button {}\n"
".v-app .v-verticallayout .v-button {}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:416
#, no-c-format
msgid ""
"In the above example, the last rule would have the highest specificity and "
"would match."
msgstr "上例中, 最后一条规则的明确度最高, 因此它将匹配成功."

#. Tag: para
#: chapter-themes.xml:421
#, no-c-format
msgid ""
"As noted earlier, style declarations given in the style attribute of a HTML "
"element have higher specificity than declarations in a CSS rule, except if "
"the <literal>!important</literal> annotation is given."
msgstr ""
"我们前面提到过, HTML 元素的 style 属性内定义的样式, 优先度高于 CSS 中的规则, "
"除非在 CSS 中使用了 <literal>!important</literal> 注解."

#. Tag: para
#: chapter-themes.xml:427
#, no-c-format
msgid ""
"See the CSS3 <link xlink:href=\"http://www.w3.org/TR/selectors/#specificity"
"\">selectors module specification</link> for details regarding how the "
"specificity is computed."
msgstr ""
"关于明确度的计算方式, 详情请参见 CSS3 <link xlink:href=\"http://www.w3.org/"
"TR/selectors/#specificity\">选择器模块规格说明</link>."

#. Tag: title
#: chapter-themes.xml:436
#, no-c-format
msgid "Order"
msgstr "顺序"

#. Tag: para
#: chapter-themes.xml:438
#, no-c-format
msgid ""
"CSS rules given later have higher priority than ones given earlier. For "
"example, in the following, the latter rule overrides the former and the "
"color will be black:"
msgstr ""
"后出现的 CSS 规则, 优先度高于先出现的规则. 比如, 下例中, 后一条规则将覆盖前一"
"条, 因此颜色将是黑色:"

#. Tag: programlisting
#: chapter-themes.xml:444
#, no-c-format
msgid ""
"<![CDATA[.v-button {color: white}\n"
".v-button {color: black}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:446
#, no-c-format
msgid ""
"As specificity has a higher cascading priority than order, you could make "
"the first rule have higher priority by adding specificity as follows:"
msgstr ""
"在层级优先度中, 明确度的优先级高于顺序, 因此, 你可以为前一条规则添加明确度, "
"使它的优先度变高, 如下例:"

#. Tag: programlisting
#: chapter-themes.xml:452
#, no-c-format
msgid ""
"<![CDATA[.v-app .v-button {color: white}\n"
".v-button {color: black}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:454
#, no-c-format
msgid ""
"The order is important to notice in certain cases, because Vaadin does not "
"guarantee the order in which CSS stylesheets are loaded in the browser, "
"which can in fact be random and result in very unexpected behavior. This is "
"not relevant for Sass stylesheets, which are compiled to a single "
"stylesheet. For plain CSS stylesheets, such as add-on or TouchKit "
"stylesheets, the order can be relevant."
msgstr ""
"有些情况下注意顺序是很重要的, 因为 Vaadin 不保证 CSS 样式表在浏览器中的装载顺"
"序, 装载顺序实际上有可能会是随机的, 因此导致无法预期的行为. 这个问题在 Sass "
"样式表中不会发生, 因为它会被编译为一个单独的样式表文件. 对于 CSS 样式表, 比如"
"插件或 TouchKit 样式表, 顺序是重要的."

#. Tag: title
#: chapter-themes.xml:466
#, no-c-format
msgid "Style Class Hierarchy of a Vaadin UI"
msgstr "Vaadin UI 的样式类层级"

#. Tag: para
#: chapter-themes.xml:468
#, no-c-format
msgid ""
"Let us give a real case in a Vaadin UI by considering a simple Vaadin UI "
"with a label and a button inside a vertical layout:"
msgstr ""
"下面我们来看看一个真正的 Vaadin UI, 这个简单的 Vaadin UI 例子, 在 Vertical "
"Layout 之内包含一个 Label 和一个 Button:"

#. Tag: programlisting
#: chapter-themes.xml:473
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[// UI has v-ui style class\n"
"@Theme(\"mytheme\")\n"
"public class HelloWorld extends UI {\n"
"    @Override\n"
"    protected void init(VaadinRequest request) {\n"
"        // VerticalLayout has v-verticallayout style\n"
"        VerticalLayout content = new VerticalLayout();\n"
"        setContent(content);\n"
"\n"
"        // Label has v-label style\n"
"        content.addComponent(new Label(\"Hello World!\"));\n"
"        \n"
"        // Button has v-button style\n"
"        content.addComponent(new Button(\"Push Me!\",\n"
"            new Button.ClickListener() {\n"
"            @Override\n"
"            public void buttonClick(ClickEvent event) {\n"
"                Notification.show(\"Pushed!\");\n"
"            }\n"
"        }));\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:475
#, no-c-format
msgid ""
"The UI will look by default as shown in <xref linkend=\"figure.themes.css."
"hierarchy.initial\"/>. By using a HTML inspector such as Firebug, you can "
"view the HTML tree and the element classes and applied styles for each "
"element."
msgstr ""
"这个 UI 的默认外观见 <xref linkend=\"figure.themes.css.hierarchy.initial\"/"
">. 使用 Firebug 之类的 HTML 查看器, 你可以看到 HTML 元素树, 各个元素的 "
"class, 以及应用在各个元素上的样式."

#. Tag: title
#: chapter-themes.xml:483
#, no-c-format
msgid "An Unthemed Vaadin UI"
msgstr "一个没有指定 theme 的 Vaadin UI"

#. Tag: para
#: chapter-themes.xml:491
#, no-c-format
msgid ""
"Now, let us look at the HTML element class structure of the UI, as we can "
"see it in the HTML inspector:"
msgstr ""
"下面我们来看看这个 UI 的 HTML 元素 class 结构, 使用 HTML 查看器可以看到以下内"
"容:"

#. Tag: programlisting
#: chapter-themes.xml:496
#, no-c-format
msgid ""
"<?pocket-size 65% ?>&lt;body class=\"<emphasis role=\"strong\">v-generated-"
"body v-ff v-ff20 v-ff200 v-gecko v-lin</emphasis>\"\n"
"      scroll=\"auto\"&gt;\n"
"  &lt;div id=\"bookexamplesvaadin7helloworld-447164942\"\n"
"       class=\"<emphasis role=\"strong\">v-app mytheme</emphasis>\"&gt;\n"
"    &lt;div class=\"<emphasis role=\"strong\">v-ui v-scrollable</emphasis>"
"\"\n"
"         tabindex=\"1\" style=\"height: 100%; width: 100%;\"&gt;\n"
"      &lt;div class=\"<emphasis role=\"strong\">v-loading-indicator first</"
"emphasis>\"\n"
"           style=\"position: absolute; display: none;\"&gt;&lt;/div&gt;\n"
"      &lt;div class=\"<emphasis role=\"strong\">v-verticallayout v-layout v-"
"vertical\n"
"                  v-widget v-has-width</emphasis>\"\n"
"           style=\"width: 100%;\"&gt;\n"
"        &lt;div class=\"<emphasis role=\"strong\">v-slot</emphasis>\"&gt;\n"
"          &lt;div class=\"<emphasis role=\"strong\">v-label v-widget v-has-"
"width</emphasis>\"\n"
"               style=\"width: 100%;\"&gt;Hello World!&lt;/div&gt;\n"
"        &lt;/div&gt;\n"
"        &lt;div class=\"<emphasis role=\"strong\">v-slot</emphasis>\"&gt;\n"
"          &lt;div class=\"<emphasis role=\"strong\">v-button v-widget</"
"emphasis>\"\n"
"               tabindex=\"0\" role=\"button\"&gt;\n"
"            &lt;span class=\"<emphasis role=\"strong\">v-button-wrap</"
"emphasis>\"&gt;\n"
"              &lt;span class=\"<emphasis role=\"strong\">v-button-caption</"
"emphasis>\"&gt;Push Me!&lt;/span&gt;\n"
"            &lt;/span&gt;\n"
"          &lt;/div&gt;\n"
"        &lt;/div&gt;\n"
"      &lt;/div&gt;\n"
"    &lt;/div&gt;\n"
"  &lt;/div&gt;\n"
"  ...\n"
"&lt;body&gt;"
msgstr ""

#. Tag: para
#: chapter-themes.xml:498
#, no-c-format
msgid ""
"Now, consider the following theme where we set the colors and margins of "
"various elements. The theme is actually a Sass theme."
msgstr ""
"下面, 看看以下 theme, 其中我们设置了各个元素的颜色和余白. 这个 theme 是一个 "
"Sass theme."

#. Tag: programlisting
#: chapter-themes.xml:503
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[@import \"../reindeer/reindeer.scss\";\n"
"\n"
"@mixin mytheme {\n"
"  @include reindeer;\n"
"\n"
"  /* White background for the entire UI */\n"
"  .v-ui {\n"
"    background: white;\n"
"  }\n"
"  \n"
"  /* All labels have white text on black background */\n"
"  .v-label {\n"
"    background: black;\n"
"    color: white;\n"
"    font-size: 24pt;\n"
"    line-height: 24pt;\n"
"    padding: 5px;\n"
"  }\n"
"\n"
"  /* All buttons have blue caption and some margin */\n"
"  .v-button {\n"
"    margin: 10px;\n"
"\n"
"    /* A nested selector to increase specificity */\n"
"    .v-button-caption {\n"
"      color: blue;\n"
"    }\n"
"  }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:505
#, no-c-format
msgid ""
"The look has changed as shown in <xref linkend=\"figure.themes.css.hierarchy."
"themed\"/>."
msgstr ""
"程序的外观变化见 <xref linkend=\"figure.themes.css.hierarchy.themed\"/>."

#. Tag: title
#: chapter-themes.xml:511
#, no-c-format
msgid "Themed Vaadin UI"
msgstr "指定 theme 后的 Vaadin UI"

#. Tag: para
#: chapter-themes.xml:519
#, no-c-format
msgid ""
"An element can have multiple classes separated with a space. With multiple "
"classes, a CSS rule matches an element if any of the classes match. This "
"feature is used in many Vaadin components to allow matching based on the "
"state of the component. For example, when the mouse is over a "
"<classname>Link</classname> component, <literal>over</literal> class is "
"added to the component. Most of such styling is a feature of Google Web "
"Toolkit."
msgstr ""
"一个元素可以带有多个 class, 以空格分隔. 对于多个 class 的情况, CSS 规则只需要"
"匹配其中的一个 class 就可以与这个元素匹配. Vaadin 的很多组件都使用了这个功"
"能, 以便根据组件的不同状态来匹配规则. 比如, 当鼠标指针移动到 "
"<classname>Link</classname> 组件上方时, <literal>over</literal> class 会被添"
"加到组件上. 这样的样式大多是 Google Web Toolkit 中的功能."

#. Tag: title
#: chapter-themes.xml:531
#, no-c-format
msgid "Notes on Compatibility"
msgstr "关于兼容性的注意事项"

#. Tag: secondary
#: chapter-themes.xml:533
#, no-c-format
msgid "<secondary>compatibility</secondary>"
msgstr ""

#. Tag: primary
#: chapter-themes.xml:534
#, no-c-format
msgid "<primary>compatibility</primary>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:536
#, no-c-format
msgid ""
"CSS is a standard continuously under development. It was first proposed in "
"1994. The specification of CSS is maintained by the CSS Working Group of "
"World Wide Web Consortium (W3C). Versioned with backward-compatible \"levels"
"\", CSS Level 1 was published in 1996, Level 2 in 1998, and the ongoing "
"development of CSS Level 3 started in 1998. CSS3 is divided into a number of "
"separate modules, each developed and progressing separately, and many of the "
"modules are already Level 4."
msgstr ""
"CSS 是一个不断开发中的标准. 它初次提出是在 1994 年. CSS 规格由 World Wide "
"Web 协会(W3C)的 CSS 工作组负责维护. 它的版本以向下兼容的 \"级别(Level)\" 来标"
"识, CSS Level 1 于 1996 年公布, Level 2 于 1998 年公布, 正在开发中的 CSS "
"Level 3 开始于 1998 年. CSS3 分为几个不同的模块, 各模块分别独立开发, 很多模块"
"已经达到了 Level 4."

#. Tag: para
#: chapter-themes.xml:546
#, no-c-format
msgid ""
"While the support for CSS has been universal in all graphical web browsers "
"since at least 1995, the support has been very incomplete at times and there "
"still exists an unfortunate number of incompatibilities between browsers. "
"While we have tried to take these incompatibilities into account in the "
"built-in themes in Vaadin, you need to consider them while developing your "
"own themes. Compatibility issues are detailed in various CSS handbooks."
msgstr ""
"至少从 1995 年起, 在所有的图形化 Web 浏览器中都支持了 CSS, 但是这种支持有时是"
"很不完整的, 而且在各种浏览器之间还存在着大量的不兼容, 其数量之多只能以\"不幸"
"\"来形容. 在 Vaadin 内建的 theme 中, 我们已经努力重视这些不兼容性, 但是你在开"
"发自己的 theme 时还是需要考虑这些问题. 兼容性问题的详细介绍, 请参照 CSS 相关"
"书籍."

#. Tag: title
#: chapter-themes.xml:561
#, no-c-format
msgid "Syntactically Awesome Stylesheets (Sass)"
msgstr "优良语法样式表(Sass, Syntactically Awesome Stylesheets)"

#. Tag: para
#: chapter-themes.xml:563
#, no-c-format
msgid ""
"Vaadin uses Sass for stylesheets. Sass is an extension of CSS3 that adds "
"nested rules, variables, mixins, selector inheritance, and other features to "
"CSS. Sass supports two formats for stylesheet: Vaadin themes are written in "
"SCSS (<filename>.scss</filename>), which is a superset of CSS3, but Sass "
"also allows a more concise indented format (<filename>.sass</filename>)."
msgstr ""
"Vaadin 的样式表使用 Sass. Sass 是 CSS3 的扩展, 在 CSS 的基础上增加了规则嵌"
"套, 变量, mixin, 选择器继承, 以及其他功能. Sass 支持两种格式: Vaadin theme 使"
"用 SCSS (<filename>.scss</filename>) 格式, 这个格式是 CSS3 的超集, 另外 Sass "
"也支持更简洁的缩进格式 (<filename>.sass</filename>)."

#. Tag: para
#: chapter-themes.xml:571
#, no-c-format
msgid ""
"Sass can be used in two basic ways in Vaadin applications, either by "
"compiling SCSS files to CSS or by doing the compilation on the fly. The "
"latter way is possible if the development mode is enabled for the Vaadin "
"servlet, as described in <xref linkend=\"application.environment.parameters"
"\"/>."
msgstr ""
"在 Vaadin 应用程序中 Sass 可以通过两种基本的形式来使用, 可以将 SCSS 文件预编"
"译为 CSS, 也可以实时编译. 当 Vaadin Servlet 的开发模式启动时就可以使用后一种"
"方式, 详情请参见 <xref linkend=\"application.environment.parameters\"/>."

#. Tag: title
#: chapter-themes.xml:579
#, no-c-format
msgid "Sass Overview"
msgstr "Sass 概述"

#. Tag: title
#: chapter-themes.xml:582
#, no-c-format
msgid "Variables"
msgstr "变量"

#. Tag: para
#: chapter-themes.xml:584
#, no-c-format
msgid "Sass allows defining variables that can be used in the rules."
msgstr "Sass 允许定义变量, 并在规则中使用这些变量."

#. Tag: programlisting
#: chapter-themes.xml:588
#, no-c-format
msgid ""
"<![CDATA[$textcolor: blue;\n"
"\n"
".v-button-caption {\n"
"  color: $textcolor;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:590
#, no-c-format
msgid "The above rule would be compiled to CSS as:"
msgstr "上述规则编译为 CSS 的结果是:"

#. Tag: programlisting
#: chapter-themes.xml:594
#, no-c-format
msgid ""
"<![CDATA[.v-button-caption {\n"
"  color: blue;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:596
#, no-c-format
msgid "Also mixins can have variables as parameters, as explained later."
msgstr "mixin 也可以使用变量做为参数, 详情见后文."

#. Tag: title
#: chapter-themes.xml:602
#, no-c-format
msgid "Nesting"
msgstr "嵌套"

#. Tag: para
#: chapter-themes.xml:604
#, no-c-format
msgid ""
"Sass supports nested rules, which are compiled into inside-selectors. For "
"example:"
msgstr ""
"Sass 支持规则嵌套, 嵌套的规则会被编译为内部选择器(inside-selector). 比如:"

#. Tag: programlisting
#: chapter-themes.xml:609
#, no-c-format
msgid ""
"<![CDATA[.v-app {\n"
"  background: yellow;\n"
"  \n"
"  .mybutton {\n"
"    font-style: italic;\n"
"    \n"
"    .v-button-caption {\n"
"      color: blue;\n"
"    }\n"
"  }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:611
#, no-c-format
msgid "is compiled as:"
msgstr "编译结果为:"

#. Tag: programlisting
#: chapter-themes.xml:615
#, no-c-format
msgid ""
"<![CDATA[.v-app {\n"
"  background: yellow;\n"
"}\n"
"\n"
".v-app .mybutton {\n"
"    font-style: italic;\n"
"}\n"
"\n"
".v-app .mybutton .v-button-caption {\n"
"  color: blue;\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:620
#, no-c-format
msgid "Mixins"
msgstr "Mixin"

#. Tag: para
#: chapter-themes.xml:622
#, no-c-format
msgid ""
"Mixins are rules that can be included in other rules. You define a mixin "
"rule by prefixing it with the <literal>@mixin</literal> keyword and the name "
"of the mixin. You can then use <literal>@include</literal> to apply it to "
"another rule. You can also pass parameters to it, which are handled as local "
"variables in the mixin."
msgstr ""
"Mixin 是一种规则模板, 可以被其他规则引用. mixin 的定义以 <literal>@mixin</"
"literal> 关键字作为前缀, 后面是 mixin 名称. 然后可以在其他规则中使用 "
"<literal>@include</literal> 来引用这个 mixin. 也可以向 mixin 传递参数, 参数"
"被 mixin 当作局部变量一样处理."

#. Tag: para
#: chapter-themes.xml:631 chapter-themes.xml:1690
#, no-c-format
msgid "For example:"
msgstr "比如:"

#. Tag: programlisting
#: chapter-themes.xml:635
#, no-c-format
msgid ""
"<![CDATA[@mixin mymixin {\n"
"  background: yellow;\n"
"}\n"
"\n"
"@mixin othermixin($param) {\n"
"  margin: $param;\n"
"}\n"
"\n"
".v-button-caption {\n"
"  @include mymixin;\n"
"  @include othermixin(10px);\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:637
#, no-c-format
msgid "The above SCSS would translated to the following CSS:"
msgstr "上例的 SCSS 将被翻译为以下 CSS:"

#. Tag: programlisting
#: chapter-themes.xml:641
#, no-c-format
msgid ""
"<![CDATA[.v-button-caption {\n"
"  background: yellow;\n"
"  margin: 10px;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:643
#, no-c-format
msgid ""
"You can also have nested rules in a mixin, which makes them especially "
"powerful. Mixing in rules is used when extending Vaadin themes, as described "
"in <xref linkend=\"themes.creating.sass\"/>."
msgstr ""
"在 mixin 中也可以使用嵌套规则, 这两种功能的组合非常强大. 扩展 Vaadin theme 时"
"常常用到规则的 mixin, 详情请参见 <xref linkend=\"themes.creating.sass\"/>."

#. Tag: para
#: chapter-themes.xml:649
#, no-c-format
msgid ""
"Vaadin themes are defined as mixins to allow for certain uses, such as "
"different themes for different portlets in a portal."
msgstr ""
"Vaadin theme 也定义为 mixin 的形式, 以便灵活使用, 比如可以在 portal 内对不同"
"的 portlet 使用不同的 theme."

#. Tag: title
#: chapter-themes.xml:664
#, no-c-format
msgid "Sass Basics with Vaadin"
msgstr "Vaadin 中的 Sass"

#. Tag: para
#: chapter-themes.xml:666
#, no-c-format
msgid ""
"We are not going to give in-depth documentation of Sass and refer you to its "
"excellent documentation at <link xlink:href=\"http://sass-lang.com/\">http://"
"sass-lang.com/</link>. In the following, we give just basic introduction to "
"using it with Vaadin."
msgstr ""
"我们在这里不会深入介绍 Sass, 而是向你推荐它的一份优秀文档: <link xlink:href="
"\"http://sass-lang.com/\">http://sass-lang.com/</link>. 下面, 我们非常简单地"
"介绍在 Vaadin 中如何使用 Sass."

#. Tag: para
#: chapter-themes.xml:673
#, no-c-format
msgid ""
"You can create a new Sass-based theme with the Eclipse plugin, as described "
"in <xref linkend=\"themes.eclipse\"/>."
msgstr ""
"你可以使用 Eclipse plugin 来创建基于 Sass 的新 theme, 详情请参见<xref "
"linkend=\"themes.eclipse\"/>."

#. Tag: title
#: chapter-themes.xml:680
#, no-c-format
msgid "Compiling Sass Themes"
msgstr "编译 Sass Theme"

#. Tag: title
#: chapter-themes.xml:683
#, no-c-format
msgid "Compiling On the Fly"
msgstr "实时编译"

#. Tag: para
#: chapter-themes.xml:685
#, no-c-format
msgid ""
"The easiest way to use Sass themes is to let the Vaadin servlet compile them "
"on the run. In this case, the SCSS source files are placed in the theme "
"folder. Compilation is done each time the <filename>styles.css</filename> is "
"requested from the server."
msgstr ""
"使用 Sass theme 的最简单方法是让 Vaadin servlet 在运行时编译它. 这种情况下, "
"SCSS 源文件放置在 theme 文件夹下. 每当向服务器请求 <filename>styles.css</"
"filename> 时都会进行编译."

#. Tag: para
#: chapter-themes.xml:692
#, no-c-format
msgid ""
"The on-the-fly compilation takes a bit time, so it is only available when "
"the Vaadin servlet is in the development mode, as described in <xref linkend="
"\"application.environment.parameters\"/>. Also, it requires the theme "
"compiler and all its dependencies to be in the class path of the servlet. "
"For production, you should compile the theme to CSS, as described next."
msgstr ""
"实时编译会消耗一些时间, 因此它只在 Vaadin servlet 处于开发模式时有效, 详情请"
"参见 <xref linkend=\"application.environment.parameters\"/>. 而且, 这种方式还"
"要求 theme 编译器及其依赖的包放置在 servlet 的类路径下. 对于生产环境, 你应该"
"将 theme 预编译为 CSS, 详情见后文."

#. Tag: title
#: chapter-themes.xml:703
#, no-c-format
msgid "Compiling in Eclipse"
msgstr "在 Eclipse 中编译"

#. Tag: para
#: chapter-themes.xml:705
#, no-c-format
msgid ""
"If using Eclipse and the Vaadin Plugin for Eclipse, its project wizard "
"creates a Sass theme. It includes <menuchoice><guimenuitem>Compile Theme</"
"guimenuitem></menuchoice> command in the toolbar to compile the project "
"theme to CSS. Another command compiles also the widget set."
msgstr ""
"如果你使用 Eclipse 和 Vaadin Plugin for Eclipse, 这个 Plugin 的工程向导会创建"
"一个 Sass theme. 这个 Plugin 还会在工具条中包括 "
"<menuchoice><guimenuitem>Compile Theme</guimenuitem></menuchoice> 命令, 可以"
"将编译工程的 theme 编译为 CSS. 工具条上的另一个命令还可以编译 widget 群."

#. Tag: title
#: chapter-themes.xml:713
#, no-c-format
msgid "Compiling Sass Theme"
msgstr "编译 Sass Theme"

#. Tag: para
#: chapter-themes.xml:721
#, no-c-format
msgid ""
"The <filename>WebContent/VAADIN/mytheme/styles.scss</filename> and any Sass "
"sources included by it are compiled to <filename>styles.css</filename>."
msgstr ""
"<filename>WebContent/VAADIN/mytheme/styles.scss</filename> 文件, 以及由它所包"
"含的其他所有 Sass 源文件, 都会被编译成为 <filename>styles.css</filename> 文"
"件."

#. Tag: title
#: chapter-themes.xml:729
#, no-c-format
msgid "Compiling with Maven"
msgstr "使用 Maven 编译"

#. Tag: para
#: chapter-themes.xml:731
#, no-c-format
msgid ""
"To compile the themes with Maven, you need to include the built-in themes as "
"a dependency:"
msgstr "要使用 Maven 来编译 theme, 你需要引用内建的 theme 作为依赖项目:"

#. Tag: programlisting
#: chapter-themes.xml:736
#, no-c-format
msgid ""
"<![CDATA[  ...\n"
"  <dependencies>\n"
"    ...\n"
"    <dependency>\n"
"        <groupId>com.vaadin</groupId>\n"
"        <artifactId>vaadin-themes</artifactId>\n"
"        <version>${vaadin.version}</version>\n"
"    </dependency>\n"
"  </dependencies>\n"
"  ...]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:738
#, no-c-format
msgid ""
"This is automatically included at least in the <literal>vaadin-archetype-"
"application</literal> archetype for Vaadin applications. The actual theme "
"compilation is most conveniently done by the Vaadin Maven Plugin with "
"<literal>update-theme</literal> and <literal>compile-theme</literal> goals."
msgstr ""
"以上设置至少对 Vaadin 应用程序的 <literal>vaadin-archetype-application</"
"literal> archetype 会自动引入. 进行实际的 theme 编译工作, 最方便的办法是使用 "
"Vaadin Maven Plugin 执行 <literal>update-theme</literal> 和 <literal>compile-"
"theme</literal> 目标."

#. Tag: programlisting
#: chapter-themes.xml:746
#, no-c-format
msgid ""
"<![CDATA[  ...\n"
"  <plugin>\n"
"    <groupId>com.vaadin</groupId>\n"
"    <artifactId>vaadin-maven-plugin</artifactId>\n"
"    ...\n"
"    <executions>\n"
"      <execution>\n"
"        ...\n"
"        <goals>\n"
"          <goal>clean</goal>\n"
"          <goal>resources</goal>\n"
"          <goal>update-theme</goal>\n"
"          <goal>update-widgetset</goal>\n"
"          <goal>compile-theme</goal>\n"
"          <goal>compile</goal>\n"
"        </goals>\n"
"      </execution>\n"
"    </executions>]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:748
#, no-c-format
msgid ""
"Once these are in place, the theme is compiled as part of relevant lifecycle "
"phases, such as <literal>package</literal>."
msgstr ""
"完成以上设定后, theme 的编译会成为相关动作, 比如 <literal>package</literal>, "
"的一部分."

#. Tag: screen
#: chapter-themes.xml:753
#, no-c-format
msgid "<command>mvn</command> <parameter>package</parameter>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:755
#, no-c-format
msgid ""
"You can also compile just the theme with the <package>compile-theme</"
"package> goal:"
msgstr ""
"你也可以只编译 theme, 方法是使用 <package>compile-theme</package> 目标:"

#. Tag: screen
#: chapter-themes.xml:760
#, no-c-format
msgid "<command>mvn</command> <parameter>vaadin:compile-theme</parameter>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:765
#, no-c-format
msgid "Compiling in Command-line"
msgstr "在命令行中编译"

#. Tag: para
#: chapter-themes.xml:767
#, no-c-format
msgid ""
"You can compile Sass style sheets to CSS either with the Vaadin Sass "
"compiler or the standard one. The <filename>styles.css</filename> of a "
"custom theme should be the compilation target. When compiled before "
"deployment, the source files do not need to be in the theme folder."
msgstr ""
"你可以使用 Vaadin Sass 编译器或标准编译器, 将 Sass 样式表编译为 CSS, 编译的输"
"出将是自定义 theme 的 <filename>styles.css</filename> 文件. 如果发布前已经编"
"译过 CSS, 那么运行时 Sass 源文件不必保存在 theme 文件夹下."

#. Tag: para
#: chapter-themes.xml:774
#, no-c-format
msgid "You can run the Vaadin Sass compiler in a theme folder as follows:"
msgstr "你可以在 theme 文件夹内运行 Vaadin Sass 编译器, 如下:"

#. Tag: screen
#: chapter-themes.xml:778
#, no-c-format
msgid ""
"<command>java</command> <parameter>-cp</parameter> <replaceable>'../../../"
"WEB-INF/lib/*'</replaceable> com.vaadin.sass.SassCompiler styles.scss styles."
"css"
msgstr ""

#. Tag: para
#: chapter-themes.xml:780
#, no-c-format
msgid ""
"The <parameter>-cp</parameter> parameter should point to the class path "
"where the Vaadin Sass Compiler and theme JARs are located. In the above "
"example, they are assumed to be located in the <filename>WEB-INF/lib</"
"filename> folder of the web application. If you have loaded the Vaadin "
"libraries using Ivy, as is the case with projects created with the Vaadin "
"Plugin for Eclipse, the Vaadin libraries are stored in Ivy's local "
"repository. Its folder hierarchy is somewhat scattered, so we recommend that "
"you retrieve the libraries to a single folder. We recommend using an Ant "
"script as is described next."
msgstr ""
"<parameter>-cp</parameter> 参数应该指向 Vaadin Sass 编译器和JAR 文件所在的类"
"路径. 上例中, 我们假设这些文件在 Web 应用程序的 <filename>WEB-INF/lib</"
"filename> 文件夹之下. 如果使用 Ivy 装载了 Vaadin 库, (使用 Vaadin Plugin for "
"Eclipse 创建的工程通常都是如此), Vaadin 库文件会保存在 Ivy 的本地仓库中. 它的"
"目录结构略为散乱, 因此我们建议你将需要的库文件保存到一个单独的目录中. 我们建"
"议使用 Ant 脚本, 详见后文."

#. Tag: title
#: chapter-themes.xml:795
#, no-c-format
msgid "Compiling with Ant"
msgstr "使用 Ant 编译"

#. Tag: para
#: chapter-themes.xml:797
#, no-c-format
msgid ""
"With Apache Ant, you can easily resolve the dependencies with Ivy and "
"compile the theme with the Theme Compiler included in Vaadin as follows. "
"This build step can be conveniently included in a WAR build script."
msgstr ""
"使用 Apache Ant, 你可以便利地利用 Ivy 来解析库依赖关系, 并利用 Vaadin 的 "
"Theme Compiler 来编译 theme. 这个编译步骤可以很容易的包含在 WAR 编译脚本之内."

#. Tag: para
#: chapter-themes.xml:804
#, no-c-format
msgid "Start with the following configuration:"
msgstr "首先, 编译脚本配置如下:"

#. Tag: programlisting
#: chapter-themes.xml:808
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[<project xmlns:ivy=\"antlib:org.apache.ivy.ant"
"\"\n"
"         name=\"My Project\" basedir=\"../\"\n"
"         default=\"package-war\">\n"
"\n"
"  <target name=\"configure\">\n"
"    <!-- Where project source files are located -->\n"
"    <property name=\"src-location\" value=\"src\" />\n"
"\n"
"    ... other project build definitions ...\n"
"            \n"
"    <!-- Name of the theme -->\n"
"    <property name=\"theme\" value=\"book-examples\"/>\n"
"        \n"
"    <!-- Compilation result directory -->\n"
"    <property name=\"result\" value=\"build/result\"/>\n"
"  </target>\n"
"\n"
"  <!-- Initialize build -->\n"
"  <target name=\"init\" depends=\"configure\">\n"
"    <!-- Construct and check classpath -->\n"
"    <path id=\"compile.classpath\">\n"
"        <!-- Source code to be compiled -->\n"
"        <pathelement path=\"${src-location}\" />\n"
"            \n"
"        <!-- Vaadin libraries and dependencies -->\n"
"        <fileset dir=\"${result}/lib\">\n"
"            <include name=\"*.jar\"/>\n"
"        </fileset>\n"
"    </path>\n"
"\n"
"    <mkdir dir=\"${result}\"/>\n"
"  </target>]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:810
#, no-c-format
msgid ""
"You should first resolve all Vaadin libraries to a single directory, which "
"you can use for deployment, but also for theme compilation."
msgstr ""
"你首先需要将依赖的所有 Vaadin 库取到一个单独的目录下, 然后在发布过程中使用这"
"些库, 当然也可以在 theme 编译中使用."

#. Tag: programlisting
#: chapter-themes.xml:815
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[  <target name=\"resolve\" depends=\"init\">\n"
"    <ivy:retrieve\n"
"        pattern=\"${result}/lib/[module]-[type]-[artifact]-[revision]."
"[ext]\"/>\n"
"  </target>]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:817
#, no-c-format
msgid "Then, you can compile the theme as follows:"
msgstr "然后编译 theme, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:821
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[  <!-- Compile theme -->\n"
"  <target name=\"compile-theme\"\n"
"          depends=\"init, resolve\">\n"
"    <delete dir=\"${result}/VAADIN/themes/${theme}\"/>\n"
"    <mkdir dir=\"${result}/VAADIN/themes/${theme}\"/>\n"
"            \n"
"    <java classname=\"com.vaadin.sass.SassCompiler\"\n"
"          fork=\"true\">\n"
"      <classpath>\n"
"        <path refid=\"compile.classpath\"/>\n"
"      </classpath>\n"
"      <arg value=\"WebContent/VAADIN/themes/${theme}/styles.scss\"/>\n"
"      <arg value=\"${result}/VAADIN/themes/${theme}/styles.css\"/>\n"
"    </java>\n"
"\n"
"            <!-- Copy theme resources -->\n"
"    <copy todir=\"${result}/VAADIN/themes/${theme}\">\n"
"      <fileset dir=\"WebContent/VAADIN/themes/${theme}\">\n"
"        <exclude name=\"**/*.scss\"/>\n"
"      </fileset>\n"
"    </copy>\n"
"  </target>\n"
"</project>]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:828
#, no-c-format
msgid "Creating and Using Themes"
msgstr "Theme 的创建和使用"

#. Tag: para
#: chapter-themes.xml:830
#, no-c-format
msgid ""
"Custom themes are placed in the <filename>VAADIN/themes</filename> folder of "
"the web application, in an Eclipse project under the <filename>WebContent</"
"filename> folder or <filename>src/main/webapp</filename> in Maven projects, "
"as was illustrated in <xref linkend=\"figure.themes.theme-contents\"/>. This "
"location is fixed. You need to have a theme folder for each theme you use in "
"your application, although applications rarely need more than a single theme."
msgstr ""
"自定义 theme 位于 Web 应用程序的 <filename>VAADIN/themes</filename> 文件夹"
"下, Web 应用程序目录, 在 Eclipse 工程中是 <filename>WebContent</filename>, "
"在 Maven 工程中是 <filename>src/main/webapp</filename>, 参见 <xref linkend="
"\"figure.themes.theme-contents\"/>. 这个路径是固定的. 对于应用程序中使用到的"
"每一个 theme, 都需要有一个 theme 文件夹, 当然应用程序很少用到多个 theme."

#. Tag: title
#: chapter-themes.xml:841
#, no-c-format
msgid "Sass Themes"
msgstr "Sass Theme"

#. Tag: para
#: chapter-themes.xml:843
#, no-c-format
msgid ""
"You can use Sass themes in Vaadin in two ways, either by compiling them to "
"CSS by yourself or by letting the Vaadin servlet compile them for you on-the-"
"fly when the theme CSS is requested by the browser, as described in <xref "
"linkend=\"themes.sass.compiling\"/>."
msgstr ""
"在 Vaadin 中使用 Sass theme 的方式有两种, 你可以自行将它编译为 CSS, 也可以使"
"用实时编译模式, 在浏览器请求 theme CSS 时由 Vaadin Servlet 进行编译, 详情请参"
"见<xref linkend=\"themes.sass.compiling\"/>."

#. Tag: para
#: chapter-themes.xml:850
#, no-c-format
msgid ""
"To define a Sass theme with the name <varname>mytheme</varname>, you must "
"place a file with name <filename>styles.scss</filename> in the theme folder "
"<filename>VAADIN/themes/mytheme</filename>. If no <filename>styles.css</"
"filename> exists in the folder, the Sass file is compiled on-the-fly when "
"the theme is requested by a browser."
msgstr ""
"要创建一个名称为 <varname>mytheme</varname> 的 Sass theme, 你必须将 "
"<filename>styles.scss</filename> 文件放在 theme 文件夹<filename>VAADIN/"
"themes/mytheme</filename> 之下. 如果文件夹下不存在 <filename>styles.css</"
"filename> 文件, 那么在浏览器请求 theme 时, Sass 源文件会被实时编译."

#. Tag: para
#: chapter-themes.xml:858
#, no-c-format
msgid ""
"We recommend that you organize the theme in at least two SCSS files so that "
"you import the actual theme from a Sass file that is named more uniquely "
"than the <filename>styles.scss</filename>, to make it distinquishable in the "
"editor. This organization is how the Vaadin Plugin for Eclipse creates a new "
"theme."
msgstr ""
"我们建议将 theme 组织为至少两个 SCSS 文件, 其中一个是 <filename>styles.scss</"
"filename>, 由它负责 import 另一个文件, 另一个是真实的 theme 文件, 文件名可以"
"更清楚一些, 这样在编辑器中我们可以更容易区分. Vaadin Plugin for Eclipse 创建"
"新 theme 时使用的也是这样的组织方式."

#. Tag: para
#: chapter-themes.xml:866
#, no-c-format
msgid ""
"If you use Vaadin add-ons that contain themes, Vaadin Plugin for Eclipse and "
"Maven automatically add them to the <filename>addons.scss</filename> file."
msgstr ""
"如果你使用一个包含 theme 的 Vaadin add-ons, Vaadin Plugin for Eclipse 和 "
"Maven 会将其中的 theme 自动添加到 <filename>addons.scss</filename> 文件中."

#. Tag: title
#: chapter-themes.xml:873
#, no-c-format
msgid "Theme SCSS"
msgstr ""

#. Tag: para
#: chapter-themes.xml:875
#, no-c-format
msgid ""
"We recommend that the rules in a theme should be prefixed with a selector "
"for the theme name. You can do the prefixing in Sass by enclosing the rules "
"in a nested rule with a selector for the theme name."
msgstr ""
"我们建议 theme 中的规则应该使用一个 theme 名称选择器做前缀. 在 Sass 中实现这"
"个前缀的方法是, 将规则嵌套在另一个规则之内, 外部的规则使用 theme 名称选择器."

#. Tag: para
#: chapter-themes.xml:882
#, no-c-format
msgid ""
"Themes are defined as Sass mixins, so after you import the mixin "
"definitions, you can <literal>@include</literal> them in the theme rule as "
"follows:"
msgstr ""
"Theme 以 Sass 的 mixin 的形式定义, 所以当然你 import 了 mixin 之后, 你可以在 "
"theme 规则中 <literal>@include</literal> 它, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:888
#, no-c-format
msgid ""
"<![CDATA[@import \"addons.scss\";\n"
"@import \"mytheme.scss\";\n"
"\n"
".mytheme {\n"
"  @include addons;\n"
"  @include mytheme;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:890
#, no-c-format
msgid ""
"However, this is mainly necessary if you use the UI in portlets, each of "
"which can have its own theme, or in the special circumstance that the theme "
"has rules that use empty parent selector <literal>&amp;</literal> to refer "
"to the theme name."
msgstr ""
"但是, 上面这种做法主要是用于在 portlet 中使用 UI 的情况, 这时每个 portlet UI "
"都需要不同的 theme, 或者在某些特殊场合, theme 中的 rule 使用空的父选择器 "
"<literal>&amp;</literal> 来引用 theme 名称."

#. Tag: para
#: chapter-themes.xml:897
#, no-c-format
msgid ""
"Otherwise, you can safely leave the nested theme selector out as follows:"
msgstr "其他情况下, 你可以不必使用嵌套的 theme 选择器也是安全的, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:902
#, no-c-format
msgid ""
"<![CDATA[@import \"addons.scss\";\n"
"@import \"mytheme.scss\";\n"
"\n"
"@include addons;\n"
"@include mytheme;]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:904
#, no-c-format
msgid ""
"The actual theme should be defined as follows, as a mixin that includes the "
"base theme."
msgstr ""
"实际的 theme 应该定义为一个 mixin, 其中 include 它所扩展的基础 theme, 如下."

#. Tag: programlisting
#: chapter-themes.xml:909
#, no-c-format
msgid ""
"<![CDATA[@import \"../reindeer/reindeer.scss\";\n"
"\n"
"@mixin mytheme {\n"
"  @include reindeer;\n"
"\n"
"  /* An actual theme rule */\n"
"  .v-button {\n"
"    color: blue;\n"
"  }\n"
"}\n"
"]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:914
#, no-c-format
msgid "Plain Old CSS Themes"
msgstr "旧式 CSS Theme"

#. Tag: para
#: chapter-themes.xml:916
#, no-c-format
msgid ""
"In addition to Sass themes, you can create plain old CSS themes. CSS theme "
"are more restricted than Sass styles - an application can only have one CSS "
"theme while you can have multiple Sass themes."
msgstr ""
"除 Sass theme 外, 你也可以创建旧式的 CSS theme. CSS theme 的限制比 Sass 要多 "
"- 一个应用程序只能带有一个 CSS theme, 而 Sass theme 可以有多个."

#. Tag: para
#: chapter-themes.xml:922
#, no-c-format
msgid ""
"A CSS theme is defined in a <filename>styles.css</filename> file in the "
"<filename>VAADIN/themes/mytheme</filename> folder. You need to import the "
"<filename>legacy-styles.css</filename> of the built-in theme as follows:"
msgstr ""
"CSS theme 定义在 <filename>VAADIN/themes/mytheme</filename> 文件夹下的 "
"<filename>styles.css</filename> 文件中. 你需要 import 内建 theme 的 "
"<filename>legacy-styles.css</filename> 文件, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:928
#, no-c-format
msgid ""
"<![CDATA[@import \"../reindeer/legacy-styles.css\";\n"
"\n"
".v-app {\n"
"    background: yellow;\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:932
#, no-c-format
msgid "Styling Standard Components"
msgstr "控制标准组件的样式"

#. Tag: para
#: chapter-themes.xml:934
#, no-c-format
msgid ""
"Each user interface component in Vaadin has a CSS style class that you can "
"use to control the appearance of the component. Many components have "
"additional sub-elements that also allow styling. You can add context-"
"specific stylenames with <methodname>addStyleName()</methodname>. Notice "
"that <methodname>getStyleName()</methodname> returns only the custom "
"stylenames, not the built-in stylenames for the component."
msgstr ""
"Vaadin 中的每个 UI 组件都带有一个 CSS 样式 class, 你可以用它来控制组件的外观"
"表现. 很多组件还拥有额外的子元素, 这些子元素也可以控制样式. 你可以使用 "
"<methodname>addStyleName()</methodname> 方法来为组件添加一些与上下文相关的样"
"式名称. 注意 <methodname>getStyleName()</methodname> 方法只返回自定义的样式"
"名, 不包含组件的内建样式名."

#. Tag: para
#: chapter-themes.xml:944
#, no-c-format
msgid ""
"Please see the section on each component for a description of its styles. "
"Most of the stylenames are determined in the client-side widget of each "
"component. The easiest way to find out the styles of the elements is to use "
"a HTML inspector such as FireBug."
msgstr ""
"关于各组件的样式, 请阅读各个组件的对应章节. 这些样式名大多由各组件的客户端 "
"widget 决定. 查看各 HTML 元素的样式, 最简单的方法是使用 HTML 查看器, 比如 "
"FireBug."

#. Tag: para
#: chapter-themes.xml:952
#, no-c-format
msgid ""
"Some client-side components or component styles can be shared by different "
"server-side components. For example, <literal>v-textfield</literal> style is "
"used for all text input boxes in components, in addition to "
"<classname>TextField</classname>."
msgstr ""
"某些客户端组件, 或某些组件样式, 可以在不同的服务器端组件之间共用. 比如, "
"<literal>v-textfield</literal> 样式, 除 <classname>TextField</classname> 之"
"外, 还被应用到所有组件内部的文字输入框上."

#. Tag: title
#: chapter-themes.xml:961
#, no-c-format
msgid "Built-in Themes"
msgstr "内建 Theme"

#. Tag: para
#: chapter-themes.xml:963
#, no-c-format
msgid "Vaadin currently includes the following built-in themes:"
msgstr "Vaadin 目前包含以下内建 theme:"

#. Tag: listitem
#: chapter-themes.xml:968
#, no-c-format
msgid "<literal>valo</literal>, the primary theme since Vaadin 7.3"
msgstr "<literal>valo</literal>, 从 Vaadin 7.3 版开始的主要 theme"

#. Tag: listitem
#: chapter-themes.xml:969
#, no-c-format
msgid "<literal>reindeer</literal>, the primary theme in Vaadin 6 and 7"
msgstr "<literal>reindeer</literal>, Vaadin 6 和 7 的主要 theme"

#. Tag: listitem
#: chapter-themes.xml:970
#, no-c-format
msgid "<literal>chameleon</literal>, an easily customizable theme"
msgstr "<literal>chameleon</literal>, 一个易于定制的 theme"

#. Tag: listitem
#: chapter-themes.xml:971
#, no-c-format
msgid "<literal>runo</literal>, the default theme in IT Mill Toolkit 5"
msgstr "<literal>runo</literal>, IT Mill Toolkit 5 的默认 theme"

#. Tag: listitem
#: chapter-themes.xml:972
#, no-c-format
msgid "<literal>liferay</literal>, for Liferay portlets"
msgstr "<literal>liferay</literal>, 用于 Liferay portlet"

#. Tag: para
#: chapter-themes.xml:975
#, no-c-format
msgid ""
"In addition, there is the <literal>base</literal> theme, which should not be "
"used directly, but is extended by the other built-in themes, except valo."
msgstr ""
"除此之外, 还有 <literal>base</literal> theme, 这个 theme 不应该直接使用, 但其"
"他内建 built-in theme (valo 除外) 都从它扩展而来."

#. Tag: para
#: chapter-themes.xml:980
#, no-c-format
msgid ""
"The built-in themes are provided in the respective <filename>VAADIN/themes/"
"&lt;theme&gt;/styles.scss</filename> stylesheets in the <filename>vaadin-"
"themes</filename> JAR. Also the precompiled CSS files are included, in case "
"you want to use the themes directly."
msgstr ""
"内建 theme 由对应的 <filename>vaadin-themes</filename> JAR 文件内的 "
"<filename>VAADIN/themes/&lt;theme&gt;/styles.scss</filename> 样式表提供. 其中"
"也包含预编译的 CSS 文件, 以便你直接使用这些 theme."

#. Tag: para
#: chapter-themes.xml:987
#, no-c-format
msgid ""
"Various constants related to the built-in themes are defined in the theme "
"classes in <package>com.vaadin.ui.themes</package> package. These are mostly "
"special style names for specific components."
msgstr ""
"与内建 theme 相关的一些常数定义在 <package>com.vaadin.ui.themes</package> 包"
"内的 theme 类中. 这些常数大多是特定组件的特定样式名."

#. Tag: programlisting
#: chapter-themes.xml:993
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[@Theme(\"runo\")\n"
"public class MyUI extends UI {\n"
"    @Override\n"
"    protected void init(VaadinRequest request) {\n"
"        ...      \n"
"        Panel panel = new Panel(\"Regular Panel in the Runo Theme\");\n"
"        panel.addComponent(new Button(\"Regular Runo Button\"));\n"
"        \n"
"        // A button with the \"small\" style\n"
"        Button smallButton = new Button(\"Small Runo Button\");\n"
"        smallButton.addStyleName(Runo.BUTTON_SMALL);\n"
"\n"
"        Panel lightPanel = new Panel(\"Light Panel\");\n"
"        lightPanel.addStyleName(Runo.PANEL_LIGHT);\n"
"        lightPanel.addComponent(\n"
"            new Label(\"With addStyleName(\\\"light\\\")\"));\n"
"        ...]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:995
#, no-c-format
msgid ""
"The example with the Runo theme is shown in <xref linkend=\"figure.themes."
"creating.builtin.runo\"/>."
msgstr ""
"上例使用 Runo theme, 运行结果见 <xref linkend=\"figure.themes.creating."
"builtin.runo\"/>."

#. Tag: title
#: chapter-themes.xml:1001
#, no-c-format
msgid "Runo Theme"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1009
#, no-c-format
msgid ""
"The built-in themes come with a custom icon font, FontAwesome, which is used "
"for icons in the theme, and which you can use as font icons, as described in "
"<xref linkend=\"themes.fonticon\"/>."
msgstr ""
"这个内建 theme 附带了一个定制的图标字体, FontAwesome, 用在这个 theme 的图标"
"中, 你也可以使用它作为字体图标, 详情请参见 <xref linkend=\"themes.fonticon\"/"
">."

#. Tag: title
#: chapter-themes.xml:1016
#, no-c-format
msgid "Serving Built-In Themes Statically"
msgstr "将内建 Theme 作为静态资源向外提供"

#. Tag: para
#: chapter-themes.xml:1018
#, no-c-format
msgid ""
"The built-in themes included in the Vaadin library JAR are served "
"dynamically from the JAR by the servlet. Serving themes and widget sets "
"statically by the web server is more efficient. To do so, you need to "
"extract the <filename>VAADIN/</filename> directories from the JAR to the web "
"content directory (<filename>WebContent</filename> in Eclipse or "
"<filename>src/main/webapp</filename> in Maven projects)."
msgstr ""
"Vaadin 库 JAR 文件中的 theme 将由 Servlet 动态地向外提供. 如果让 Web 服务器"
"将 theme 和 widget 群以静态资源的形式向外提供, 性能会更高一些. 为了达到这个目"
"的, 你需要从 JAR 文件中展开 <filename>VAADIN/</filename> 目录, 放到 Web 内容"
"目录下(在 Eclipse 工程中是 <filename>WebContent</filename> 目录,  在 Maven 工"
"程中是 <filename>src/main/webapp</filename> 目录)."

#. Tag: screen
#: chapter-themes.xml:1027
#, no-c-format
msgid "<prompt>$</prompt> <command>cd</command> WebContent"
msgstr ""

#. Tag: screen
#: chapter-themes.xml:1028
#, no-c-format
msgid ""
"<prompt>$</prompt> <command>unzip</command> path-to/vaadin-server-&version."
"vaadin;.jar 'VAADIN/*'"
msgstr ""

#. Tag: screen
#: chapter-themes.xml:1029
#, no-c-format
msgid ""
"<prompt>$</prompt> <command>unzip</command> path-to/vaadin-themes-&version."
"vaadin;.jar 'VAADIN/*'"
msgstr ""

#. Tag: screen
#: chapter-themes.xml:1030
#, no-c-format
msgid ""
"<prompt>$</prompt> <command>unzip</command> path-to/vaadin-client-compiled-"
"&version.vaadin;.jar 'VAADIN/*'"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1032
#, no-c-format
msgid ""
"You can also serve static content from a front-end caching server, which "
"reduces the load of the application server. In portals, you install the "
"themes globally in the portal as described in <xref linkend=\"portal.liferay."
"install\"/>."
msgstr ""
"你也可以使用前端的缓存服务器来向外提供静态内容, 这样可以降低应用程序服务器的"
"负载. 在 portal 中, 你可以将 theme 安装到全局位置, 详情请参见 <xref linkend="
"\"portal.liferay.install\"/>."

#. Tag: para
#: chapter-themes.xml:1039
#, no-c-format
msgid ""
"Just make sure to update the static content when you upgrade to a newer "
"version of Vaadin."
msgstr "当你升级到 Vaadin 的新版本时, 一定要确保静态内容也升级到新版."

#. Tag: para
#: chapter-themes.xml:1045
#, no-c-format
msgid ""
"Creation of a default theme for custom GWT widgets is described in <xref "
"linkend=\"gwt.styling\"/>."
msgstr ""
"关于如何为自定义的 GWT widget 创建默认 theme, 请参见 <xref linkend=\"gwt."
"styling\"/>."

#. Tag: title
#: chapter-themes.xml:1052
#, no-c-format
msgid "Add-on Themes"
msgstr "Add-on 的 Theme"

#. Tag: para
#: chapter-themes.xml:1054
#, no-c-format
msgid ""
"You can find more themes as add-ons from the <link xlink:href=\"http://"
"vaadin.com/directory\">Vaadin Directory</link>. In addition, many component "
"add-ons contain a theme for the components they provide."
msgstr ""
"你可以在 <link xlink:href=\"http://vaadin.com/directory\">Vaadin Directory</"
"link> 找到很多 add-on 形式的 theme. 此外, 很多 add-on 组件也包含了自己的 "
"theme."

#. Tag: para
#: chapter-themes.xml:1061
#, no-c-format
msgid ""
"The add-on themes need to be included in the project theme. Vaadin Plugin "
"for Eclipse and Maven automatically include them in the <filename>addons."
"scss</filename> file in the project theme folder. It should be included by "
"the project theme."
msgstr ""
"add-on theme 需要被 includ 到工程的 theme 中. Vaadin Plugin for Eclipse 和 "
"Maven 会自动在工程的 theme 文件夹下的 <filename>addons.scss</filename> 文件"
"中 include 这些 theme. 这个文件会被 include 到工程的 theme 中."

#. Tag: title
#: chapter-themes.xml:1071
#, no-c-format
msgid "Creating a Theme in Eclipse"
msgstr "在 Eclipse 中创建 Theme"

#. Tag: para
#: chapter-themes.xml:1073
#, no-c-format
msgid ""
"The Eclipse plugin automatically creates a theme stub for new Vaadin "
"projects. It also includes a wizard for creating new custom themes. Do the "
"following steps to create a new theme."
msgstr ""
"The Eclipse plugin 会为新的 Vaadin 工程自动创建 theme 的基础代码. 它还带有一"
"个向导, 用于创建新的自定义 theme. 按以下步骤可以创建新的 theme."

#. Tag: para
#: chapter-themes.xml:1081
#, no-c-format
msgid ""
"Select <menuchoice><guimenu>File</guimenu><guisubmenu>New</"
"guisubmenu><guimenuitem>Other...</guimenuitem></menuchoice> in the main menu "
"or right-click the <guilabel>Project Explorer</guilabel> and select "
"<menuchoice><guimenu>New</guimenu><guimenuitem>Other...</guimenuitem></"
"menuchoice>. A window will open."
msgstr ""
"在主菜单中,  选择菜单项 <menuchoice><guimenu>File</guimenu><guisubmenu>New</"
"guisubmenu><guimenuitem>Other...</guimenuitem></menuchoice>, 或者右键单击 "
"<guilabel>Project Explorer</guilabel>, 然后选择菜单项 "
"<menuchoice><guimenu>New</guimenu><guimenuitem>Other...</guimenuitem></"
"menuchoice>. 会出现一个新窗口."

#. Tag: para
#: chapter-themes.xml:1092
#, no-c-format
msgid ""
"In the <guilabel>Select a wizard</guilabel> step, select the "
"<menuchoice><guimenu>Vaadin</guimenu><guimenuitem>Vaadin Theme</"
"guimenuitem></menuchoice> wizard."
msgstr ""
"在 <guilabel>Select a wizard</guilabel> 窗口中, 选择 "
"<menuchoice><guimenu>Vaadin</guimenu><guimenuitem>Vaadin Theme</"
"guimenuitem></menuchoice> 向导."

#. Tag: para
#: chapter-themes.xml:1109
#, no-c-format
msgid "Click <guibutton>Next</guibutton> to proceed to the next step."
msgstr "点击 <guibutton>Next</guibutton> 按钮, 进行到下一步."

#. Tag: para
#: chapter-themes.xml:1115
#, no-c-format
msgid ""
"In the <guilabel>Create a new Vaadin theme</guilabel> step, you have the "
"following settings:"
msgstr ""
"在 <guilabel>Create a new Vaadin theme</guilabel> 窗口, 包括以下设定项:"

#. Tag: term
#: chapter-themes.xml:1122
#, no-c-format
msgid "<guilabel>Project</guilabel> (mandatory)"
msgstr "<guilabel>Project</guilabel> (必须项)"

#. Tag: para
#: chapter-themes.xml:1124
#, no-c-format
msgid "The project in which the theme should be created."
msgstr "theme 应该在哪个工程内创建."

#. Tag: term
#: chapter-themes.xml:1131
#, no-c-format
msgid "<guilabel>Theme name</guilabel> (mandatory)"
msgstr "<guilabel>Theme name</guilabel> (必须项)"

#. Tag: para
#: chapter-themes.xml:1133
#, no-c-format
msgid ""
"The theme name is used as the name of the theme folder and in a CSS tag "
"(prefixed with \"<literal>v-theme-</literal>\"), so it must be a proper "
"identifier. Only latin alphanumerics, underscore, and minus sign are allowed."
msgstr ""
"theme 名称, 用作 theme 文件夹名, 也用在 CSS 标签之内(附带 \"<literal>v-theme-"
"</literal>\" 前缀), 因此名称必须是一个合法的标识符. 其中只允许使用拉丁字母, "
"下划线, 减号."

#. Tag: term
#: chapter-themes.xml:1144
#, no-c-format
msgid "<guilabel>Modify application classes to use theme</guilabel> (optional)"
msgstr "<guilabel>Modify application classes to use theme</guilabel> (可选项)"

#. Tag: para
#: chapter-themes.xml:1146
#, no-c-format
msgid ""
"The setting allows the wizard to write a code statement that enables the "
"theme in the constructor of the selected application (UI) class(es). If you "
"need to control the theme with dynamic logic, you can leave the setting "
"unchecked or change the generated line later."
msgstr ""
"这个设定项允许向导在选定的应用程序 UI 类的构造函数中添加一条语句, 这条语句负"
"责启用 theme. 如果你需要使用动态逻辑来控制 theme, 你可以不选中这个设定项, 或"
"者之后手工修改向导产生的代码."

#. Tag: para
#: chapter-themes.xml:1168
#, no-c-format
msgid "Click <guibutton>Finish</guibutton> to create the theme."
msgstr "点击 <guibutton>Finish</guibutton> 按钮, 创建 theme."

#. Tag: para
#: chapter-themes.xml:1175
#, no-c-format
msgid ""
"The wizard creates the theme folder under the <filename>WebContent/VAADIN/"
"themes</filename> folder and the actual style sheet as <filename>mytheme."
"scss</filename> and <filename>styles.scss</filename> files, as illustrated "
"in <xref linkend=\"figure.eclipse.theme.created\"/>."
msgstr ""
"向导会在 <filename>WebContent/VAADIN/themes</filename> 目录之下创建 theme 文"
"件夹, 以及实际的样式表文件 <filename>mytheme.scss</filename> 和 "
"<filename>styles.scss</filename>, 见 <xref linkend=\"figure.eclipse.theme."
"created\"/>."

#. Tag: title
#: chapter-themes.xml:1184
#, no-c-format
msgid "Newly Created Theme"
msgstr "新创建的 Theme"

#. Tag: para
#: chapter-themes.xml:1195
#, no-c-format
msgid ""
"The created theme extends a built-in base theme with an <literal>@import</"
"literal> statement. See the explanation of theme inheritance in <xref "
"linkend=\"themes.creating\"/>. Notice that the <filename>reindeer</filename> "
"theme is not located in the <filename>widgetsets</filename> folder, but in "
"the Vaadin JAR. See <xref linkend=\"themes.creating.builtin\"/> for "
"information for serving the built-in themes."
msgstr ""
"新创建的 theme 使用 <literal>@import</literal> 语句扩展一个内建的基础 theme. "
"关于 theme 继承的讲解, 请参见 <xref linkend=\"themes.creating\"/>. 注意 "
"<filename>reindeer</filename> theme 不在 <filename>widgetsets</filename> 文件"
"夹下, 而是在 Vaadin JAR 文件内. 关于向外提供内建的 theme, 详情请参见 <xref "
"linkend=\"themes.creating.builtin\"/>."

#. Tag: para
#: chapter-themes.xml:1205
#, no-c-format
msgid ""
"If you selected a UI class or classes in the <guilabel>Modify application "
"classes to use theme</guilabel> in the theme wizard, the wizard will add the "
"<literal>@Theme</literal> annotation to the UI class."
msgstr ""
"在创建 theme 的向导中, 如果你为设定项 <guilabel>Modify application classes "
"to use theme</guilabel> 选择了 UI 类, 向导会为这个 UI 类添加 "
"<literal>@Theme</literal> 注解."

#. Tag: para
#: chapter-themes.xml:1211
#, no-c-format
msgid ""
"If you later rename the theme in Eclipse, notice that changing the name of "
"the folder will not automatically change the <literal>@Theme</literal> "
"annotation. You need to change such references to theme names in the calls "
"manually."
msgstr ""
"如果之后你在 Eclipse 中修改了 theme 的名称, 要注意, 修改 theme 文件夹的名称不"
"会自动地修改相应的 <literal>@Theme</literal> 注解的内容. 凡引用到 theme 名称"
"的地方, 你需要手工修改."

#. Tag: title
#: chapter-themes.xml:1220
#, no-c-format
msgid "Valo Theme"
msgstr "Valo Theme"

#. Tag: para
#: chapter-themes.xml:1222
#, no-c-format
msgid ""
"Valo is the word for light in Finnish. The Valo theme incorporates the use "
"of light in its logic, in how it handles shades and highlights. It creates "
"lines, borders, highlights, and shadows adaptively according to a background "
"color, always with contrasts pleasant to human visual perception. Auxiliary "
"colors are computed using an algorithmic color theory to blend gently with "
"the background. The static art is complemented with responsive animations."
msgstr ""
"Valo 是芬兰语中\"光\"的意思. Valo theme 用它自己的理念将光的运用组合起来, 它"
"使用这套理论来决定如何处理阴影和高亮. 它创建了线条, 边框, 高亮度,与背景色协调"
"的阴影, 一切都给人视觉感受上的愉悦. Valo 使用一种色彩算法理论来计算辅助色, 将"
"辅助色柔和地融合到背景之中. 除静态艺术之外, 还辅以交互式的动画效果."

#. Tag: para
#: chapter-themes.xml:1232
#, no-c-format
msgid ""
"The true power of Valo lies in its configurability with parameters, "
"functions, and Sass mixins. You can use the built-in definitions in your own "
"themes or override the defaults. Detailed documentation of the available "
"mixins, functions, and variables can be found in the Valo API documentation "
"available at <link xlink:href=\"http://vaadin.com/valo\">http://vaadin.com/"
"valo</link>."
msgstr ""
"Valo 的真正力量在于它的可配置能力, 这种可配置能力是通过参数, 函数, 以及 Sass "
"mixin 实现的. 在你自己的 theme 中, 可以使用 Valo 中内建的预定义值, 也可以覆盖"
"这些默认值. 关于可用的 mixin, 函数, 以及变量, 详细文档请参见 Valo API 文档, "
"地址是 <link xlink:href=\"http://vaadin.com/valo\">http://vaadin.com/valo</"
"link>."

#. Tag: title
#: chapter-themes.xml:1241 chapter-themes.xml:1964
#, no-c-format
msgid "Basic Use"
msgstr "基本使用"

#. Tag: para
#: chapter-themes.xml:1243
#, no-c-format
msgid ""
"Valo is used just like other themes. Its optional parameters must be given "
"before the <literal>@import</literal> statement."
msgstr ""
"Valo 的使用方法与其他 theme 一样. 它的可选参数必须在 <literal>@import</"
"literal> 语句之前给出."

#. Tag: programlisting
#: chapter-themes.xml:1248
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[// Modify the base color of the theme\n"
"$v-background-color: hsl(200, 50%, 50%);\n"
"\n"
"// Import valo after setting the parameters\n"
"@import \"../valo/valo\";\n"
"\n"
".mythemename {\n"
"  @include valo;\n"
"\n"
"  // Your theme's rules go here\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1250
#, no-c-format
msgid ""
"If you need to override mixins or function definitions in the valo theme, "
"you must do that after the import statement, but before including the valo "
"mixin. Also, with some configuration parameters, you can use variables "
"defined in the theme. In this case, they need to be overridden after the "
"import statement."
msgstr ""
"如果你需要覆盖 valo theme 中定义的 mixin 或函数, 你必须在 import 语句之后做, "
"但又在 include valo 的 mixin 之前. 此外, 通过某些配置参数, 你可以使用 theme "
"中定义的变量. 这种情况下, 需要在 import 语句之后覆盖这些变量."

#. Tag: title
#: chapter-themes.xml:1260
#, no-c-format
msgid "Common Settings"
msgstr "共通设定"

#. Tag: para
#: chapter-themes.xml:1262
#, no-c-format
msgid ""
"In the following, we describe the optional parameters that control the "
"visual appearance of the Valo theme. In addition to the ones given here, "
"component styles have their own parameters, listed in the sections "
"describing the components in the other chapters."
msgstr ""
"下面我们来介绍可选参数, 用于控制 Valo theme 的视觉表现. 除这里给出的参数之"
"外, 组件样式也有它们自己的参数, 详情在各组件的章节中介绍."

#. Tag: title
#: chapter-themes.xml:1270
#, no-c-format
msgid "General Settings"
msgstr "一般设定"

#. Tag: term
#: chapter-themes.xml:1274
#, no-c-format
msgid ""
"<varname>$v-background-color</varname> (default: <literal>hsl(210, 0%, 98%)</"
"literal>)"
msgstr ""
"<varname>$v-background-color</varname> (默认值: <literal>hsl(210, 0%, 98%)</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1276
#, no-c-format
msgid ""
"The background color is the main control parameter for the Valo theme and it "
"is used for computing all other colors in the theme. If the color is dark "
"(has low luminance), light foreground colors that give high contrast with "
"the background are automatically used."
msgstr ""
"背景色是 Valo theme 中的主要控制参数, 它被用来计算 theme 中的所有其他颜色. 如"
"果背景色是暗色(亮度较低, low luminance), 那么 theme 会自动使用较亮的前景色, "
"实现前景与背景之间的高对比度."

#. Tag: para
#: chapter-themes.xml:1284
#, no-c-format
msgid ""
"You can specify the color in any way allowed in CSS: hexadecimal RGB color "
"code, RGB/A value specified with <methodname>rgb()</methodname> or "
"<methodname>rgba()</methodname>, HSL/A value specified with "
"<methodname>hsl()</methodname> or <methodname>hsla()</methodname>. You can "
"also use color names, but it should be avoided, as not all CSS color names "
"are currently supported."
msgstr ""
"你可以通过 CSS 所支持的任何方式来指定背景色: 可以是 16 进制的 RGB 颜色编码, "
"可以是通过 <methodname>rgb()</methodname> 或 <methodname>rgba()</methodname> "
"指定的 RGB/A 值, 也可以是通过 <methodname>hsl()</methodname> 或 "
"<methodname>hsla()</methodname> 指定的 HSL/A 值. 也可以使用颜色的名称, 但应该"
"尽量避免这种方式, 因为目前还只支持 CSS 颜色名称中的一部分."

#. Tag: term
#: chapter-themes.xml:1297
#, no-c-format
msgid ""
"<varname>$v-app-background-color</varname> (default: <varname>$v-background-"
"color</varname>)"
msgstr ""
"<varname>$v-app-background-color</varname> (默认值: <varname>$v-background-"
"color</varname>)"

#. Tag: para
#: chapter-themes.xml:1299
#, no-c-format
msgid ""
"Background color of the UI's root element. You can specify the color in any "
"way allowed in CSS."
msgstr "UI 根元素的背景色. 你可以使用 CSS 所支持的任何方式来指定这个背景色."

#. Tag: term
#: chapter-themes.xml:1306
#, no-c-format
msgid ""
"<varname>$v-app-loading-text</varname> (default: <literal>\"\"</literal>)"
msgstr ""
"<varname>$v-app-loading-text</varname> (默认值: <literal>\"\"</literal>)"

#. Tag: para
#: chapter-themes.xml:1308
#, no-c-format
msgid ""
"A static text that is shown under the loading spinned while the client-side "
"engine is being loaded and started. The text must be given in quotes. The "
"text can not be localized currently."
msgstr ""
"客户端引擎装载和启动过程中, 显示在\"装载中...\"动画下方的一段静态文字. 指定这"
"段文字时必须用引号括起. 这段文字目前还不支持本地化."

#. Tag: programlisting
#: chapter-themes.xml:1315
#, no-c-format
msgid "<![CDATA[$v-app-loading-text: \"Loading Resources...\";]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1319
#, no-c-format
msgid "<varname>$v-line-height</varname> (default: <literal>1.55</literal>)"
msgstr "<varname>$v-line-height</varname> (默认值: <literal>1.55</literal>)"

#. Tag: para
#: chapter-themes.xml:1321
#, no-c-format
msgid "Base line height for all widgets. It must be given a unitless number."
msgstr "所有 widget 共通的基本行高设定. 必须指定为一个无单位的数值."

#. Tag: programlisting
#: chapter-themes.xml:1326
#, no-c-format
msgid "<![CDATA[$v-line-height: 1.6;]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:1333
#, no-c-format
msgid "Font Settings"
msgstr "字体设定"

#. Tag: term
#: chapter-themes.xml:1337
#, no-c-format
msgid "<varname>$v-font-size</varname> (default: <literal>16px</literal>)"
msgstr "<varname>$v-font-size</varname> (默认值: <literal>16px</literal>)"

#. Tag: para
#: chapter-themes.xml:1339
#, no-c-format
msgid "Base font size. It should be specified in pixels."
msgstr "基本字体大小. 使用像素单位指定."

#. Tag: programlisting
#: chapter-themes.xml:1343
#, no-c-format
msgid "<![CDATA[$v-font-size: 18px;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1347
#, no-c-format
msgid "<varname>$v-font-weight</varname> (default: <literal>300</literal>)"
msgstr "<varname>$v-font-weight</varname> (默认值: <literal>300</literal>)"

#. Tag: para
#: chapter-themes.xml:1349
#, no-c-format
msgid ""
"Font weight for normal fonts. It should be defined with a numeric value "
"instead of symbolic."
msgstr "通常字体的粗细. 应该以数值形式指定, 而不是符号."

#. Tag: programlisting
#: chapter-themes.xml:1354
#, no-c-format
msgid "<![CDATA[$v-font-size: 400;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1358
#, no-c-format
msgid "<varname>$v-font-color</varname> (default: computed)"
msgstr "<varname>$v-font-color</varname> (默认值: computed)"

#. Tag: para
#: chapter-themes.xml:1360
#, no-c-format
msgid ""
"Foreground text color, specified as any CSS color value. The default is "
"computed from the background color so that it gives a high contrast with the "
"background."
msgstr ""
"前景文字颜色, 可以指定为任意的 CSS 颜色值. 默认是通过背景颜色计算的, 因此可以"
"形成与背景较高的对比度."

#. Tag: programlisting
#: chapter-themes.xml:1367
#, no-c-format
msgid "<![CDATA[$v-font-color: green;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1370
#, no-c-format
msgid ""
"<varname>$v-font-family</varname> (default: <literal>\"Open Sans\", sans-"
"serif</literal>)"
msgstr ""
"<varname>$v-font-family</varname> (默认值: <literal>\"Open Sans\", sans-"
"serif</literal>)"

#. Tag: para
#: chapter-themes.xml:1372
#, no-c-format
msgid ""
"Font family and fallback fonts as a comma-separated list. Font names "
"containing spaces must be quoted. The default font Open Sans is a web font "
"included in the Valo theme. Other used Valo fonts must be specified in the "
"list to enable them. See <xref linkend=\"themes.valo.fonts\"/>."
msgstr ""
"字体家族(Font family), 以及替代字体, 以逗号分隔的列表形式指定, 如果字体名包含"
"空格, 则必须使用引号括起. 默认字体 \"Open Sans\" 是包含在 Valo theme 中的一"
"种 Web 字体. 其他被用到的 Valo 字体必须在这个列表中指定, 才可以启用它们. 详情"
"请参见 <xref linkend=\"themes.valo.fonts\"/>."

#. Tag: programlisting
#: chapter-themes.xml:1380
#, no-c-format
msgid "<![CDATA[$v-font-family: \"Source Sans Pro\", sans-serif;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1384
#, no-c-format
msgid ""
"<varname>$v-caption-font-size</varname> (default: <literal>round($v-font-"
"size * 0.9)</literal>)"
msgstr ""
"<varname>$v-caption-font-size</varname> (默认值: <literal>round($v-font-size "
"* 0.9)</literal>)"

#. Tag: para
#: chapter-themes.xml:1386
#, no-c-format
msgid "Font size for component captions. The value should be a pixel value."
msgstr "组件标题的字体大小. 使用像素单位指定."

#. Tag: term
#: chapter-themes.xml:1393
#, no-c-format
msgid ""
"<varname>$v-caption-font-weight</varname> (default: <literal>max(400, $v-"
"font-weight)</literal>)"
msgstr ""
"<varname>$v-caption-font-weight</varname> (默认值: <literal>max(400, $v-font-"
"weight)</literal>)"

#. Tag: para
#: chapter-themes.xml:1395
#, no-c-format
msgid ""
"Font weight for captions. It should be defined with a numeric value instead "
"of symbolic."
msgstr "标题的字体粗细. 应该以数值形式指定, 而不是符号."

#. Tag: title
#: chapter-themes.xml:1405
#, no-c-format
msgid "Layout Settings"
msgstr "布局设定"

#. Tag: term
#: chapter-themes.xml:1409
#, no-c-format
msgid ""
"<varname>$v-unit-size</varname> (default: <literal>round(2.3 * $v-font-"
"size)</literal>)"
msgstr ""
"<varname>$v-unit-size</varname> (默认值: <literal>round(2.3 * $v-font-size)</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1411
#, no-c-format
msgid ""
"This is the base size for various layout measures. It is directly used in "
"some measures, such as button height and layout margins, while other "
"measures are derived from it. The value must be specified in pixels, with a "
"suitable range of 18-50."
msgstr ""
"这个参数是各种布局尺寸计算中的基本尺寸. 在某些尺寸计算中会直接使用这个参数, "
"比如按钮高度, 布局余白, 而其他尺寸计算可能会间接使用到它. 这个参数的值必须以"
"像素单位指定, 适当的范围应该在 18 到 50 之间."

#. Tag: programlisting
#: chapter-themes.xml:1419
#, no-c-format
msgid "<![CDATA[$v-unit-size: 40px;]]>"
msgstr ""

#. Tag: varname
#: chapter-themes.xml:1423
#, no-c-format
msgid "$v-layout-margin-top"
msgstr ""

#. Tag: varname
#: chapter-themes.xml:1424
#, no-c-format
msgid "$v-layout-margin-right"
msgstr ""

#. Tag: varname
#: chapter-themes.xml:1425
#, no-c-format
msgid "$v-layout-margin-bottom"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1426
#, no-c-format
msgid ""
"<varname>$v-layout-margin-left</varname> (default: <literal>$v-unit-size</"
"literal>)"
msgstr ""
"<varname>$v-layout-margin-left</varname> (默认值: <literal>$v-unit-size</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1428
#, no-c-format
msgid ""
"Layout margin sizes for all built-in layout components, when the margin is "
"enabled with <methodname>setMargin()</methodname>, as described in <xref "
"linkend=\"layout.settings.margins\"/>."
msgstr ""
"所有内建布局组件的余白大小. 使用 <methodname>setMargin()</methodname> 方法可"
"以使余白有效, 详情请参见 <xref linkend=\"layout.settings.margins\"/>."

#. Tag: term
#: chapter-themes.xml:1437
#, no-c-format
msgid ""
"<varname>$v-layout-spacing-vertical</varname> and <varname>$v-layout-spacing-"
"horizontal</varname> (default: <literal>round($v-unit-size/3)</literal>)"
msgstr ""
"<varname>$v-layout-spacing-vertical</varname> 和 <varname>$v-layout-spacing-"
"horizontal</varname> (默认值: <literal>round($v-unit-size/3)</literal>)"

#. Tag: para
#: chapter-themes.xml:1441
#, no-c-format
msgid ""
"Amount of vertical or horizontal space when spacing is enabled for a layout "
"with <methodname>setSpacing()</methodname>, as described in <xref linkend="
"\"layout.settings.spacing\"/>."
msgstr ""
"垂直或水平间隔空白的大小. 使用 <methodname>setSpacing()</methodname> 方法可以"
"使布局的间隔空白有效, 详情请参见 <xref linkend=\"layout.settings.spacing\"/>."

#. Tag: title
#: chapter-themes.xml:1452
#, no-c-format
msgid "Component Features"
msgstr "组件功能"

#. Tag: para
#: chapter-themes.xml:1454
#, no-c-format
msgid ""
"The following settings apply to various graphical features of some "
"components."
msgstr "以下设定应用于某些 UI 组件的各种可视化功能."

#. Tag: term
#: chapter-themes.xml:1461
#, no-c-format
msgid ""
"<varname>$v-border</varname> (default: <literal>1px solid (v-shade 0.7)</"
"literal>)"
msgstr ""
"<varname>$v-border</varname> (默认值: <literal>1px solid (v-shade 0.7)</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1463
#, no-c-format
msgid ""
"Border specification for the components that have a border. The thickness "
"measure must be specified in pixels. For the border color, you can specify "
"any CSS color or one of the <literal>v-tint</literal>, <literal>v-shade</"
"literal>, and <literal>v-tone</literal> keywords described later in this "
"section."
msgstr ""
"这个参数指定边框规格, 适用于有边框线的组件. 边框的粗细必须使用像素单位指定. "
"边框的颜色, 可以使用 CSS 支持的任何颜色, 或使用 <literal>v-tint</literal>, "
"<literal>v-shade</literal>, 和 <literal>v-tone</literal> 关键字之一, 关于这几"
"个关键字, 详情将在本节后续内容中介绍."

#. Tag: term
#: chapter-themes.xml:1474
#, no-c-format
msgid "<varname>$v-border-radius</varname> (default: <literal>4px</literal>)"
msgstr "<varname>$v-border-radius</varname> (默认值: <literal>4px</literal>)"

#. Tag: para
#: chapter-themes.xml:1476
#, no-c-format
msgid ""
"Corner radius for components that have a border. The measure must be "
"specified in pixels."
msgstr "边框线圆角的半径大小. 适用于有边框线的组件. 必须使用像素单位指定."

#. Tag: programlisting
#: chapter-themes.xml:1481
#, no-c-format
msgid "<![CDATA[$v-border-radius: 8px;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1485
#, no-c-format
msgid ""
"<varname>$v-gradient</varname> (default: <literal>v-linear 8%</literal>)"
msgstr ""
"<varname>$v-gradient</varname> (默认值: <literal>v-linear 8%</literal>)"

#. Tag: para
#: chapter-themes.xml:1487
#, no-c-format
msgid ""
"Color gradient style for components that have a gradient. The gradient style "
"may use the following keywords: <literal>v-linear</literal> and <literal>v-"
"linear-reverse</literal>. The opacity must be given as percentage between 0% "
"and 100%."
msgstr ""
"颜色梯度的样式名称. 适用于有颜色梯度的组件. 颜色梯度样式可以使用以下关键字: "
"<literal>v-linear</literal> 和 <literal>v-linear-reverse</literal>. 不透明度"
"必须指定为 0% 到 100% 之间的百分比值."

#. Tag: programlisting
#: chapter-themes.xml:1495
#, no-c-format
msgid "<![CDATA[$v-gradient: v-linear 20%;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1508
#, no-c-format
msgid ""
"<varname>$v-bevel</varname> (default: <literal>inset 0 1px 0 v-tint, inset 0 "
"-1px 0 v-shade</literal>)"
msgstr ""
"<varname>$v-bevel</varname> (默认值: <literal>inset 0 1px 0 v-tint, inset 0 "
"-1px 0 v-shade</literal>)"

#. Tag: para
#: chapter-themes.xml:1510
#, no-c-format
msgid ""
"Inset shadow style to define how some components are \"raised\" from the "
"background. The value follows the syntax of CSS box-shadow, and should be a "
"list of insets. For the bevel color, you can specify any CSS color or one of "
"the <literal>v-tint</literal>, <literal>v-shade</literal>, and <literal>v-"
"tone</literal> keywords described later in this section."
msgstr ""
"插入式阴影的样式, 用于指定某些组件在背景中的\"凸起\"效果. 这个样式值使用 CSS "
"box-shadow 的语法, 应该是一系列高亮和阴影的 inset 值. 斜面部分的颜色, 可以使"
"用 CSS 支持的任何颜色值, 或 <literal>v-tint</literal>, <literal>v-shade</"
"literal>, 和 <literal>v-tone</literal> 关键字之一, 关于这些关键字, 详情将在本"
"节后续内容中介绍."

#. Tag: term
#: chapter-themes.xml:1523
#, no-c-format
msgid "<varname>$v-bevel-depth</varname> (default: <literal>30%</literal>)"
msgstr "<varname>$v-bevel-depth</varname> (默认值: <literal>30%</literal>)"

#. Tag: para
#: chapter-themes.xml:1525
#, no-c-format
msgid ""
"Specifies the \"depth\" of the bevel shadow, as applied to one of the color "
"keywords for the bevel style. The actual amount of tint, shade, or tone is "
"computed from the depth."
msgstr ""
"指定斜面阴影的\"深度\", 用来控制斜面样式的颜色. tint, shade, 和 tone 的实际颜"
"色, 都是由这个深度值计算得到的."

#. Tag: term
#: chapter-themes.xml:1533
#, no-c-format
msgid ""
"<varname>$v-shadow</varname> (default: <literal>0 2px 3px v-shade</literal>)"
msgstr ""
"<varname>$v-shadow</varname> (默认值: <literal>0 2px 3px v-shade</literal>)"

#. Tag: para
#: chapter-themes.xml:1535
#, no-c-format
msgid ""
"Default shadow style for all components. As with <varname>$v-bevel</"
"varname>, the value follows the syntax of CSS box-shadow, but without the "
"<literal>inset</literal>. For the shadow color, you can specify any CSS "
"color or one of the <literal>v-tint</literal> or <literal>v-shade</literal> "
"keywords described later in this section."
msgstr ""
"指定所有组件的默认阴影样式. 和 <varname>$v-bevel</varname> 一样, 这个样式的值"
"使用 CSS box-shadow 的语法, 但没有 <literal>inset</literal> 部分. 阴影的颜"
"色, 可以使用 CSS 支持的任何颜色, 或 <literal>v-tint</literal>, <literal>v-"
"shade</literal> 关键字之一, 关于这些关键字, 详情将在本节的后续内容中介绍."

#. Tag: term
#: chapter-themes.xml:1547
#, no-c-format
msgid "<varname>$v-shadow-opacity</varname> (default: <literal>5%</literal>)"
msgstr "<varname>$v-shadow-opacity</varname> (默认值: <literal>5%</literal>)"

#. Tag: para
#: chapter-themes.xml:1549
#, no-c-format
msgid ""
"Specifies the opacity of the shadow, as applied to one of the color keywords "
"for the shadow style. The actual amount of tint or shade is computed from "
"the depth."
msgstr ""
"指定阴影的不透明度, 用于控制阴影样式的颜色.  tint 和 shade 的实际颜色都是由这"
"个参数计算得到."

#. Tag: term
#: chapter-themes.xml:1557
#, no-c-format
msgid ""
"<varname>$v-focus-style</varname> (default: <literal>0 0 0 2px rgba($v-focus-"
"color, .5)</literal>)"
msgstr ""
"<varname>$v-focus-style</varname> (默认值: <literal>0 0 0 2px rgba($v-focus-"
"color, .5)</literal>)"

#. Tag: para
#: chapter-themes.xml:1559
#, no-c-format
msgid ""
"Box-shadow specification for the field focus indicator. The space-separated "
"values are the horizontal shadow position in pixels, vertical shadow "
"position in pixels, blur distance in pixels, spread distance in pixels, and "
"the color. The color can be any CSS color. You can only specify the color, "
"in which case defaults for the position are used. <methodname>rgba()</"
"methodname> or <methodname>hsla()</methodname> can be used to enable "
"transparency."
msgstr ""
"用作 Field 组件聚焦状态指示器的阴影样式. 这个值由空格分隔成几个部分: 水平阴影"
"位置(像素单位), 垂直阴影位置(像素单位), 模糊距离(像素单位), 扩散距离(像素单"
"位), 以及颜色. 颜色可以使用 CSS 支持的任何颜色. 你也可以只指定颜色, 这时阴影"
"位置将使用默认值. 可以使用 <methodname>rgba()</methodname> 和 "
"<methodname>hsla()</methodname> 来实现透明色."

#. Tag: para
#: chapter-themes.xml:1571
#, no-c-format
msgid ""
"For example, the following creates a 2 pixels wide orange outline around the "
"field:"
msgstr "比如, 以下代码将在 Field 组件周围创建一个 2 像素宽的橙色外框:"

#. Tag: programlisting
#: chapter-themes.xml:1576
#, no-c-format
msgid "<![CDATA[$v-focus-style: 0 0 0 2px orange;]]>"
msgstr ""

#. Tag: term
#: chapter-themes.xml:1580
#, no-c-format
msgid ""
"<varname>$v-focus-color</varname> (default: <literal>valo-focus-color()</"
"literal>)"
msgstr ""
"<varname>$v-focus-color</varname> (默认值: <literal>valo-focus-color()</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1582
#, no-c-format
msgid ""
"Color for the field focus indicator. The <methodname>valo-focus-color()</"
"methodname> function computes a high-contrast color from the context, which "
"is usually the background color. The color can be any CSS color."
msgstr ""
"Field 组件聚焦状态指示器的颜色.  <methodname>valo-focus-color()</methodname> "
"函数会计算一个与当前环境颜色呈高对比度的颜色, 所谓当前环境颜色, 通常就是背景"
"色. 这个颜色值可以使用 CSS 支持的任何颜色."

#. Tag: term
#: chapter-themes.xml:1592
#, no-c-format
msgid ""
"<varname>$v-animations-enabled</varname> (default: <literal>true</literal>)"
msgstr ""
"<varname>$v-animations-enabled</varname> (默认值: <literal>true</literal>)"

#. Tag: para
#: chapter-themes.xml:1594
#, no-c-format
msgid "Specifies whether various CSS animations are used."
msgstr "指定是否使用各种 CSS 动画效果."

#. Tag: term
#: chapter-themes.xml:1600
#, no-c-format
msgid ""
"<varname>$v-hover-styles-enabled</varname> (default: <literal>true</literal>)"
msgstr ""
"<varname>$v-hover-styles-enabled</varname> (默认值: <literal>true</literal>)"

#. Tag: para
#: chapter-themes.xml:1602
#, no-c-format
msgid ""
"Specifies whether various <literal>:hover</literal> styles are used for "
"indicating that mouse pointer hovers over an element."
msgstr ""
"指定是否使用各种 <literal>:hover</literal> 样式来指示鼠标移动到元素之上的状"
"态."

#. Tag: term
#: chapter-themes.xml:1610
#, no-c-format
msgid ""
"<varname>$v-disabled-opacity</varname> (default: <literal>0.5</literal>)"
msgstr ""
"<varname>$v-disabled-opacity</varname> (默认值: <literal>0.5</literal>)"

#. Tag: para
#: chapter-themes.xml:1612
#, no-c-format
msgid ""
"Opacity of disabled components, as described in <xref linkend=\"components."
"features.enabled\"/>."
msgstr ""
"被禁用组件的不透明度, 详情请参见<xref linkend=\"components.features.enabled"
"\"/>."

#. Tag: term
#: chapter-themes.xml:1619
#, no-c-format
msgid ""
"<varname>$v-selection-color</varname> (default: <literal>$v-focus-color</"
"literal>)"
msgstr ""
"<varname>$v-selection-color</varname> (默认值: <literal>$v-focus-color</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1621
#, no-c-format
msgid "Color for indicating selection in selection components."
msgstr "选择组件中用于标识被选中项目的颜色."

#. Tag: term
#: chapter-themes.xml:1627
#, no-c-format
msgid ""
"<varname>$v-default-field-width</varname> (default: <literal>$v-unit-size * "
"5</literal>)"
msgstr ""
"<varname>$v-default-field-width</varname> (默认值: <literal>$v-unit-size * "
"5</literal>)"

#. Tag: para
#: chapter-themes.xml:1629
#, no-c-format
msgid ""
"Default width of certain field components, unless overridden with "
"<methodname>setWidth()</methodname>."
msgstr ""
"Field 组件的默认宽度, 可以通过 <methodname>setWidth()</methodname> 方法来覆盖"
"默认设定."

#. Tag: term
#: chapter-themes.xml:1636
#, no-c-format
msgid ""
"<varname>$v-error-indicator-color</varname> (default: <literal>#ed473b</"
"literal>)"
msgstr ""
"<varname>$v-error-indicator-color</varname> (默认值: <literal>#ed473b</"
"literal>)"

#. Tag: para
#: chapter-themes.xml:1638
#, no-c-format
msgid ""
"Color of the component error indicator, as described in <xref linkend="
"\"application.errors.error-indicator\"/>."
msgstr ""
"组件的错误指示器的颜色. 详情请参见 <xref linkend=\"application.errors.error-"
"indicator\"/>."

#. Tag: term
#: chapter-themes.xml:1644
#, no-c-format
msgid ""
"<varname>$v-required-field-indicator-color</varname> (default: <literal>$v-"
"error-indicator-color</literal>)"
msgstr ""
"<varname>$v-required-field-indicator-color</varname> (默认值: <literal>$v-"
"error-indicator-color</literal>)"

#. Tag: para
#: chapter-themes.xml:1646
#, no-c-format
msgid ""
"Color of the required indicator in field components, as described in <xref "
"linkend=\"components.fields.field\"/>."
msgstr ""
"Field 组件的必须项目指示器的颜色, 详情请参见 <xref linkend=\"components."
"fields.field\"/>."

#. Tag: para
#: chapter-themes.xml:1655
#, no-c-format
msgid ""
"Color specifications for <varname>$v-border</varname>, <varname>$v-bevel</"
"varname>, and <varname>$v-shadow</varname> may use, in addition to CSS "
"colors, the following keywords:"
msgstr ""
"<varname>$v-border</varname>, <varname>$v-bevel</varname>, 以及 <varname>$v-"
"shadow</varname> 中可以使用的颜色值, 除 CSS 支持的颜色之外, 还包括以下关键字:"

#. Tag: varname
#: chapter-themes.xml:1663
#, no-c-format
msgid "v-tint"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1665
#, no-c-format
msgid "Lighter than the background color."
msgstr "比背景色更亮."

#. Tag: varname
#: chapter-themes.xml:1671
#, no-c-format
msgid "v-shade"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1673
#, no-c-format
msgid "Darker than the background color."
msgstr "比背景色更暗."

#. Tag: varname
#: chapter-themes.xml:1679
#, no-c-format
msgid "v-tone"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1681
#, no-c-format
msgid ""
"Adaptive color specification: darker on light background and lighter on dark "
"background. Not usable in <varname>$v-shadow</varname>."
msgstr ""
"自适应颜色: 在亮背景中较暗, 在暗背景中为较亮. 这个值不能用在 <varname>$v-"
"shadow</varname> 中."

#. Tag: programlisting
#: chapter-themes.xml:1694
#, no-c-format
msgid "<![CDATA[$v-border: 1px solid v-shade;]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1696
#, no-c-format
msgid ""
"You can fine-tune the contrast by giving a weight parameter in parentheses:"
msgstr "你可以在括号内指定一个权重参数, 来精确调整对比度:"

#. Tag: programlisting
#: chapter-themes.xml:1701
#, no-c-format
msgid "<![CDATA[$v-border: 1px solid (v-tint 2);]]>"
msgstr ""

#. Tag: programlisting
#: chapter-themes.xml:1702
#, no-c-format
msgid "<![CDATA[$v-border: 1px solid (v-tone 0.5);]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:1706
#, no-c-format
msgid "Theme Compilation and Optimization"
msgstr "Theme 的编译与优化"

#. Tag: term
#: chapter-themes.xml:1711
#, no-c-format
msgid "<varname>$v-relative-paths</varname> (default: <literal>true</literal>)"
msgstr "<varname>$v-relative-paths</varname> (默认值: <literal>true</literal>)"

#. Tag: para
#: chapter-themes.xml:1713
#, no-c-format
msgid ""
"This flags specifies whether relative URL paths are relative to the "
"currently parsed SCSS file or to the compilation root file, so that paths "
"are correct for different resources. Vaadin theme compiler parses URL paths "
"differently from the regular Sass compiler (Vaadin modifies relative URL "
"paths). Use <literal>false</literal> for Ruby compiler and <literal>true</"
"literal> for Vaadin Sass compiler."
msgstr ""
"这个标记指定 URL 相对路径是相对于当前解析总的 SCSS 文件, 还是相对于被编译的根"
"文件, 以便保证对不同的资源来说路径都是正确的. Vaadin theme 编译器解析 URL 路"
"径的方式不同于通常的 Sass 编译器(Vaadin 会修改 URL 相对路径). 在 Ruby 编译器"
"中应该使用 <literal>false</literal>,  对 Vaadin Sass 编译器应该使用 "
"<literal>true</literal>."

#. Tag: term
#: chapter-themes.xml:1727
#, no-c-format
msgid "<varname>$v-included-components</varname> (default: component list)"
msgstr "<varname>$v-included-components</varname> (默认值: component list)"

#. Tag: para
#: chapter-themes.xml:1729
#, no-c-format
msgid ""
"Theme optimization parameter to specify the included component themes, as "
"described in <xref linkend=\"themes.valo.optimization\"/>."
msgstr ""
"Theme 优化参数, 指定 include 的组件 theme, 详情请参见<xref linkend=\"themes."
"valo.optimization\"/>."

#. Tag: term
#: chapter-themes.xml:1738
#, no-c-format
msgid ""
"<varname>$v-included-additional-styles</varname> (default: <literal>$v-"
"included-components</literal>)"
msgstr ""
"<varname>$v-included-additional-styles</varname> (默认值: <literal>$v-"
"included-components</literal>)"

#. Tag: para
#: chapter-themes.xml:1740
#, no-c-format
msgid ""
"Theme optimization parameter that lists the components for which the "
"additional component stylenames should be included. See <xref linkend="
"\"themes.valo.component\"/> for more details."
msgstr ""
"Theme 优化参数, 指定哪些组件应该包含额外的组件样式名. 详情请参见 <xref "
"linkend=\"themes.valo.component\"/> for more details."

#. Tag: title
#: chapter-themes.xml:1753
#, no-c-format
msgid "Valo Mixins and Functions"
msgstr "Valo 中的 Mixin 和函数"

#. Tag: para
#: chapter-themes.xml:1755
#, no-c-format
msgid ""
"Valo uses Sass mixins and functions heavily to compute various theme "
"features, such as colors and shades. Also, all component styles are mixins. "
"You can use the built-in mixins or override them. For detailed documentation "
"of the mixins and functions, please refer to the Valo API documentation "
"available at <link xlink:href=\"http://vaadin.com/valo/api\">http://vaadin."
"com/valo/api</link>."
msgstr ""
"Valo 大量使用了 Sass 的 mixin 和函数来计算 theme 的各种功能, 比如颜色和阴影. "
"而且, 所有的组件样式都是 mixin. 你可以使用内建的 mixin, 也可以覆盖它们. 关于 "
"mixin 和函数的详细文档, 请参照 Valo API 文档: <link xlink:href=\"http://"
"vaadin.com/valo/api\">http://vaadin.com/valo/api</link>."

#. Tag: title
#: chapter-themes.xml:1766
#, no-c-format
msgid "Valo Fonts"
msgstr "Valo 的字体"

#. Tag: para
#: chapter-themes.xml:1768
#, no-c-format
msgid "Valo includes the following custom fonts:"
msgstr "Valo 包含以下自定义字体:"

#. Tag: listitem
#: chapter-themes.xml:1773
#, no-c-format
msgid "Open Sans"
msgstr ""

#. Tag: listitem
#: chapter-themes.xml:1774
#, no-c-format
msgid "Source Sans Pro"
msgstr ""

#. Tag: listitem
#: chapter-themes.xml:1775
#, no-c-format
msgid "Roboto"
msgstr ""

#. Tag: listitem
#: chapter-themes.xml:1776
#, no-c-format
msgid "Lato"
msgstr ""

#. Tag: listitem
#: chapter-themes.xml:1777
#, no-c-format
msgid "Lora"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1780
#, no-c-format
msgid ""
"The used fonts must be specified with the <varname>$v-font-family</varname> "
"parameter for Valo, in a fallback order. A font family is used in decreasing "
"order of preference, in case a font with higher preference is not available "
"in the browser. You can specify any font families and generic families that "
"browsers may support. In addition to the primary font family, you can use "
"also others in your application. To enable using the fonts included in Valo, "
"you need to list them in the variable."
msgstr ""
"对于 Valo theme, 使用的字体必须通过 <varname>$v-font-family</varname> 参数来"
"指定, 参数中可以指定多个字体, 按优先度顺序排列. 字体家族中的字体在使用时按优"
"先度递减的顺序逐个选择, 如果高优先度的字体在浏览器中不可用, 就以低优先度的字"
"体来替代. 你可以指定任意字体家族, 再加上浏览器可能支持的通用字体家族(generic "
"family). 除主字体家族外, 在你的应用程序中也可以使用其他字体家族. 为了使用 "
"Valo 中包含的字体, 你需要在这个变量中列出需要的字体."

#. Tag: programlisting
#: chapter-themes.xml:1791
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[$v-font-family: 'Open Sans', sans-serif, "
"'Source Sans Pro';]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1793
#, no-c-format
msgid ""
"Above, we specify Open Sans as the preferred primary font, with any sans-"
"serif font that the browser supports as a fallback. In addition, we include "
"the Source Sans Pro as an auxiliary font that we can use in custom rules as "
"follows:"
msgstr ""
"上例中, 我们指定 Open Sans 为最优先的主字体, 并以浏览器支持的任何一种 sans-"
"serif 字体作为后备. 此外, 我们还 include 了 Source Sans Pro 作为辅助字体, 以"
"便在自定义规则中使用它, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:1800
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[.v-label pre {\n"
"  font-family: 'Source Sans Pro', monospace;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1802
#, no-c-format
msgid ""
"This would specify using the font in any <classname>Label</classname> "
"component with the <literal>PREFORMATTED</literal> content mode."
msgstr ""
"上例中的规则, 会在所有内容模式为 <literal>PREFORMATTED</literal> 的 "
"<classname>Label</classname> 组件中使用这个字体."

#. Tag: title
#: chapter-themes.xml:1809
#, no-c-format
msgid "Component Styles"
msgstr "组件样式控制"

#. Tag: para
#: chapter-themes.xml:1811
#, no-c-format
msgid ""
"Many components have component-specific styles to make them smaller, bigger, "
"and so forth. You can specify the component styles with "
"<methodname>addStyleName()</methodname> using the constants defined in the "
"<classname>ValoTheme</classname> enum."
msgstr ""
"很多组件都有一些独自的样式, 可以用来控制这些组件变得更小, 更大等等. 你可以使"
"用 <methodname>addStyleName()</methodname> 方法来指定组件样式, 使用的样式常数"
"定义在 <classname>ValoTheme</classname> 枚举型中."

#. Tag: programlisting
#: chapter-themes.xml:1818
#, no-c-format
msgid "<![CDATA[table.addStyleName(ValoTheme.TABLE_COMPACT);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1820
#, no-c-format
msgid ""
"For a complete up-to-date list of component-specific styles, please refer to "
"Vaadin API documentation on the <classname>ValoTheme</classname> enum. Some "
"are also described in the component-specific styling sections."
msgstr ""
"关于各组件样式的最新的完整列表, 请参照 Vaadin API 文档中的 "
"<classname>ValoTheme</classname> 枚举类型. 其中一部分在组件样式的章节中也有介"
"绍."

#. Tag: title
#: chapter-themes.xml:1827
#, no-c-format
msgid "Disabling Component Styles"
msgstr "禁用组件样式"

#. Tag: para
#: chapter-themes.xml:1829
#, no-c-format
msgid ""
"Component styles are optional, but all are enabled by default. They can be "
"enabled on per-component basis with the <varname>$v-included-additional-"
"styles</varname> parameter. It defaults to <varname>$v-included-components</"
"varname> and can be customized in the same way, as described in <xref "
"linkend=\"themes.valo.optimization\"/>."
msgstr ""
"组件样式是可选的, 但默认都是启用的. 也可以使用 <varname>$v-included-"
"additional-styles</varname> 参数, 决定对哪些组件启用. 这个参数的默认值是 "
"<varname>$v-included-components</varname>,  而且 <varname>$v-included-"
"components</varname> 参数也可以使用同样的方式来定制, 详情请参见 <xref "
"linkend=\"themes.valo.optimization\"/>."

#. Tag: title
#: chapter-themes.xml:1840
#, no-c-format
msgid "Configuration Parameters"
msgstr "配置参数"

#. Tag: para
#: chapter-themes.xml:1842
#, no-c-format
msgid "The following variables control some common component styles:"
msgstr "以下变量控制了一些共通的组件样式:"

#. Tag: term
#: chapter-themes.xml:1848
#, no-c-format
msgid ""
"<varname>$v-scaling-factor--tiny</varname> (default: <literal>0.75</literal>)"
msgstr ""
"<varname>$v-scaling-factor--tiny</varname> (默认值: <literal>0.75</literal>)"

#. Tag: para
#: chapter-themes.xml:1850
#, no-c-format
msgid "A scaling multiplier for <literal>TINY</literal> component styles."
msgstr "一个缩放系数, 适用于 <literal>TINY</literal> 组件样式."

#. Tag: term
#: chapter-themes.xml:1856
#, no-c-format
msgid ""
"<varname>$v-scaling-factor--small</varname> (default: <literal>0.85</"
"literal>)"
msgstr ""
"<varname>$v-scaling-factor--small</varname> (默认值: <literal>0.85</literal>)"

#. Tag: para
#: chapter-themes.xml:1858
#, no-c-format
msgid "A scaling multiplier for <literal>SMALL</literal> component styles."
msgstr "一个缩放系数, 适用于 <literal>SMALL</literal> 组件样式."

#. Tag: term
#: chapter-themes.xml:1865
#, no-c-format
msgid ""
"<varname>$v-scaling-factor--large</varname> (default: <literal>1.2</literal>)"
msgstr ""
"<varname>$v-scaling-factor--large</varname> (默认值: <literal>1.2</literal>)"

#. Tag: para
#: chapter-themes.xml:1867
#, no-c-format
msgid "A scaling multiplier for <literal>LARGE</literal> component styles."
msgstr "一个缩放系数, 适用于 <literal>LARGE</literal> 组件样式."

#. Tag: term
#: chapter-themes.xml:1873
#, no-c-format
msgid ""
"<varname>$v-scaling-factor--huge</varname> (default: <literal>1.6</literal>)"
msgstr ""
"<varname>$v-scaling-factor--huge</varname> (默认值: <literal>1.6</literal>)"

#. Tag: para
#: chapter-themes.xml:1875
#, no-c-format
msgid "A scaling multiplier for <literal>HUGE</literal> component styles."
msgstr "一个缩放系数, 适用于 <literal>HUGE</literal> 组件样式."

#. Tag: title
#: chapter-themes.xml:1886
#, no-c-format
msgid "Theme Optimization"
msgstr "Theme 优化"

#. Tag: para
#: chapter-themes.xml:1888
#, no-c-format
msgid ""
"Valo theme allows optimizing the size of the compiled theme CSS by including "
"the rules for only the components actually used in the application. The "
"included component styles can be specified in the <literal>$v-included-"
"components</literal> variable, which by default includes all components. The "
"variable should include a comma-separated list of component names in lower-"
"case letters. Likewise, you can specify which additional component styles, "
"as described in <xref linkend=\"themes.valo.component\"/>, should be "
"included using the <varname>$v-included-additional-styles</varname> "
"parameter and the same format. The list of additional styles defaults to "
"<varname>$v-included-components</varname>."
msgstr ""
"Valo theme 允许优化编译后的 CSS 尺寸, 方法是只将应用程序使用到的组件的相关规"
"则 include 到样式表中. 被 include 的组件样式可以使用 <literal>$v-included-"
"components</literal> 变量来指定, 这个参数默认是 include 所有组件. 这个变量应"
"该包含一个逗号分隔的列表, 其中元素是小写的组件名称. 同样的, 你也可以使用 "
"<varname>$v-included-additional-styles</varname> 参数, 指定包含哪些额外的组件"
"样式, 格式类似, 详情请参见 <xref linkend=\"themes.valo.component\"/>. 额外组"
"件样式的默认值为 <varname>$v-included-components</varname>."

#. Tag: para
#: chapter-themes.xml:1902
#, no-c-format
msgid ""
"For example, if your UI contains just <classname>VerticalLayout</classname>, "
"<classname>TextField</classname>, and <classname>Button</classname> "
"components, you could define the variable as follows:"
msgstr ""
"比如, 如果你的 UI 只包含 <classname>VerticalLayout</classname>, "
"<classname>TextField</classname>, 以及 <classname>Button</classname> 组件, 你"
"应该将这个参数定义为:"

#. Tag: programlisting
#: chapter-themes.xml:1909
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[$v-included-components:\n"
"    verticallayout,\n"
"    textfield,\n"
"    button;]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1911
#, no-c-format
msgid ""
"You can use the <methodname>remove()</methodname> function reversely to "
"remove just some component themes from the standard selection."
msgstr ""
"你可以反转使用 <methodname>remove()</methodname> 函数, 从标准选择中删除一部分"
"组件."

#. Tag: para
#: chapter-themes.xml:1916
#, no-c-format
msgid ""
"For example, with the following you can remove the theme definitions for the "
"<classname>Calendar</classname> component:"
msgstr ""
"比如, 使用以下代码, 你可以删除 <classname>Calendar</classname> 组件的 theme "
"定义:"

#. Tag: programlisting
#: chapter-themes.xml:1921
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[$v-included-components: remove($v-included-"
"components, calendar);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1923
#, no-c-format
msgid ""
"Note that in this case, you need to give the statement <emphasis>after</"
"emphasis> the <literal>@import</literal> statement for the Valo theme, "
"because it overrides a variable by using its value that is defined in the "
"theme."
msgstr ""
"注意, 在这种情况下, 你需要将这条语句放在 Valo theme 的 <literal>@import</"
"literal> 语句 <emphasis>之后</emphasis>, 因为这条语句会使用到 Valo theme 内的"
"一个变量."

#. Tag: title
#: chapter-themes.xml:1933
#, no-c-format
msgid "Font Icons"
msgstr "字体图标"

#. Tag: para
#: chapter-themes.xml:1935
#, no-c-format
msgid ""
"Font icons are icons included in a font. Fonts have many advantages over "
"bitmap images. Browsers are usually faster in rendering fonts than loading "
"image files. Web fonts are vector graphics, so they are scalable. As font "
"icons are text characters, you can define their color in CSS by the regular "
"foreground color property."
msgstr ""
"字体图标是指字体内包含的图标文字. 与位图图片相比, 字体有很多优势. 浏览器描绘"
"字体通常会比装载图片文件要快. Web 字体是矢量图, 因此适合于缩放. 由于字体图标"
"都是文本字符, 所以你可以在 CSS 中使用通常的前景色属性来控制它们的颜色."

#. Tag: title
#: chapter-themes.xml:1944
#, no-c-format
msgid "Loading Icon Fonts"
msgstr "装载图标字体"

#. Tag: para
#: chapter-themes.xml:1946
#, no-c-format
msgid ""
"Vaadin currently comes with one custom icon font: FontAwesome. It is "
"automatically enabled in the Valo theme. For other themes, you need to "
"include it with the following line in your project theme, after importing "
"the base theme:"
msgstr ""
"Vaadin 目前带有一个自定义的图标字体: FontAwesome. Valo theme 会自动启用这个字"
"体. 在其他 theme 中, 你需要在你的 theme 文件中, 在 import 基本 theme 之后, 使"
"用以下代码来包含这个字体:"

#. Tag: programlisting
#: chapter-themes.xml:1953
#, no-c-format
msgid "<?pocket-size 75% ?><![CDATA[@include fonticons;]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1955
#, no-c-format
msgid ""
"If you use other icon fonts, as described in <xref linkend=\"themes.fonticon."
"custom\"/>, and the font is not loaded by a base theme, you need to load it "
"with a <literal>font</literal> mixin in Sass, as described in <xref linkend="
"\"themes.fonts.loading\"/>."
msgstr ""
"如果你要使用其他图标字体(详情请参见 <xref linkend=\"themes.fonticon.custom\"/"
">), 并且基础 theme 没有装载这个字体, 那么你就需要在 Sass 中使用 "
"<literal>font</literal> mixin 来装载它, 详情请参见 <xref linkend=\"themes."
"fonts.loading\"/>."

#. Tag: para
#: chapter-themes.xml:1966
#, no-c-format
msgid ""
"Font icons are resources of type <classname>FontIcon</classname>, which "
"implements the <interfacename>Resource</interfacename> interface. You can "
"use these special resources for component icons and such, but not as "
"embedded images, for example."
msgstr ""
"字体图标是 <classname>FontIcon</classname> 类型的资源, 这个类实现了 "
"<interfacename>Resource</interfacename> 接口. 你可以将这些特殊资源用作组件图"
"标等, 但不能用作内嵌的图片."

#. Tag: para
#: chapter-themes.xml:1973
#, no-c-format
msgid ""
"Each icon has a Unicode codepoint, by which you can use it. Vaadin includes "
"an awesome icon font, <literal>FontAwesome</literal>, which comes with an "
"enumeration of all the icons included in the font."
msgstr ""
"每个图标都有一个 Unicode 代码, 你需要通过这个 Unicode 代码来使用对应的图标. "
"Vaadin 包含了一个非常好的图标字体, <literal>FontAwesome</literal>, 这个类中包"
"含了字体内所有图标的枚举列表."

#. Tag: para
#: chapter-themes.xml:1979
#, no-c-format
msgid "Most typically, you set a component icon as follows:"
msgstr "通常, 你可以使用以下方式为组件设置图标:"

#. Tag: programlisting
#: chapter-themes.xml:1984
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[TextField name = new TextField(\"Name\");\n"
"name.setIcon(FontAwesome.USER);\n"
"layout.addComponent(name);\n"
"\n"
"// Button allows specifying icon resource in constructor\n"
"Button ok = new Button(\"OK\", FontAwesome.CHECK);\n"
"layout.addComponent(ok);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:1986
#, no-c-format
msgid ""
"The result is illustrated in <xref linkend=\"figure.themes.fonticon.using\"/"
">, with the color styling described next."
msgstr ""
"运行结果见 <xref linkend=\"figure.themes.fonticon.using\"/>, 其中还带有彩色风"
"格, 关于彩色风格, 将在下一段中介绍."

#. Tag: title
#: chapter-themes.xml:1993
#, no-c-format
msgid "Basic Use of Font Icons"
msgstr "字体图标的基本使用"

#. Tag: title
#: chapter-themes.xml:2002
#, no-c-format
msgid "Styling the Icons"
msgstr "控制图标的样式"

#. Tag: para
#: chapter-themes.xml:2004
#, no-c-format
msgid ""
"As font icons are regular text, you can specify their color with the "
"<literal>color</literal> attribute in CSS to specify the foreground text "
"color. All HTML elements that display icons in Vaadin have the <literal>v-"
"icon</literal> style name."
msgstr ""
"由于字体图标都是通常的文本, 所以你可以使用 CSS 中控制前景文字颜色的 "
"<literal>color</literal> 属性来指定图标的颜色. Vaadin 中所有显示图标的 HTML "
"元素都带有 <literal>v-icon</literal> 样式名."

#. Tag: programlisting
#: chapter-themes.xml:2011
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[.v-icon {\n"
"    color: blue;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2013
#, no-c-format
msgid ""
"If you use the font icon resources in other ways, such as in an "
"<classname>Image</classname> component, the style name will be different."
msgstr ""
"如果你以其他的方式来使用字体图标资源, 比如用在 <classname>Image</classname> "
"组件中, 那么样式名将会不同."

#. Tag: title
#: chapter-themes.xml:2022
#, no-c-format
msgid "Using Font icons in HTML"
msgstr "在 HTML 中使用字体图标"

#. Tag: para
#: chapter-themes.xml:2024
#, no-c-format
msgid ""
"You can use font icons in HTML code, such as in a <classname>Label</"
"classname>, by generating the HTML to display the icon with the "
"<methodname>getHtml()</methodname> method."
msgstr ""
"你可以在 HTML 代码中使用字体图标, 比如用在 <classname>Label</classname> 中, "
"这种情况下可以通过 <methodname>getHtml()</methodname> 方法得到用于显示图标的 "
"HTML 代码."

#. Tag: programlisting
#: chapter-themes.xml:2031
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[Label label = new Label(\"I \" +\n"
"    FontAwesome.HEART.getHtml() + \" Vaadin\",\n"
"    ContentMode.HTML);\n"
"label.addStyleName(\"redicon\");\n"
"layout.addComponent(label);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2033
#, no-c-format
msgid ""
"The HTML code has the <literal>v-icon</literal> style, which you can modify "
"in CSS:"
msgstr ""
"图标的 HTML 代码带有 <literal>v-icon</literal> 样式名, 你可以在 CSS 中修改它"
"的样式:"

#. Tag: programlisting
#: chapter-themes.xml:2038
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[.redicon .v-icon {\n"
"    color: red;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2040
#, no-c-format
msgid ""
"The result is illustrated in <xref linkend=\"figure.themes.fonticon.html\"/"
">, with the color styling described next."
msgstr ""
"运行结果见 <xref linkend=\"figure.themes.fonticon.html\"/>, 其中还带有彩色风"
"格, 关于彩色风格, 将在下一段中介绍."

#. Tag: title
#: chapter-themes.xml:2047
#, no-c-format
msgid "Using Font Icons in Label"
msgstr "在 Label 中使用字体图标"

#. Tag: para
#: chapter-themes.xml:2055
#, no-c-format
msgid ""
"You could have set the font color in the label's HTML code as well, or for "
"all icons in the UI."
msgstr ""
"你也可以在 Label 的 HTML 代码中设置字体颜色, 也可以为 UI 中所有图标设置颜色."

#. Tag: para
#: chapter-themes.xml:2060
#, no-c-format
msgid ""
"You can easily use font icons in HTML code in other ways as well. You just "
"need to use the correct font family and then use the hex-formatted Unicode "
"codepoint for the icon. See for example the implementation of the "
"<methodname>getHtml()</methodname> method in <classname>FontAwesome</"
"classname>:"
msgstr ""
"你也可以通过其他方式很简单地在 HTML 代码中使用字体图标. 只需要使用正确的字体"
"家族, 然后使用图标对应的 16 进制的 Unicode 代码值. 比如, "
"<classname>FontAwesome</classname> 的 <methodname>getHtml()</methodname> 方法"
"的实现就是这样:"

#. Tag: programlisting
#: chapter-themes.xml:2068
#, no-c-format
msgid ""
"<?pocket-size 70% ?><![CDATA[@Override\n"
"public String getHtml() {\n"
"    return \"<span class=\\\"v-icon\\\" style=\\\"font-family: \" +\n"
"           getFontFamily() + \";\\\">&#x\" +\n"
"           Integer.toHexString(codepoint) + \";</span>\";\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:2072
#, no-c-format
msgid "Using Font Icons in Other Text"
msgstr "在其他文本中使用字体图标"

#. Tag: para
#: chapter-themes.xml:2074
#, no-c-format
msgid ""
"You can include a font icon in any text by its Unicode codepoint, which you "
"can get with the <methodname>getCodePoint()</methodname> method. In such "
"case, however, you need to use the same font for other text in the same "
"string as well. The FontAwesome provided in Vaadin includes a basic "
"character set."
msgstr ""
"你可以使用一个字体图标的 Unicode 代码值, 来将图标嵌入到任何文本中, Unicode 代"
"码值可以通过 <methodname>getCodePoint()</methodname> 方法得到. 但是, 这时对于"
"同一段文本内的其他文字, 你也需要使用相同的字体. Vaadin 附带的 FontAwesome 字"
"体包含了基本的字符集."

#. Tag: programlisting
#: chapter-themes.xml:2083
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[TextField amount = new TextField(\"Amount (in "
"\" +\n"
"   new String(Character.toChars(\n"
"           FontAwesome.BTC.getCodepoint())) +\n"
"   \")\");\n"
"amount.addStyleName(\"awesomecaption\");\n"
"layout.addComponent(amount);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2085
#, no-c-format
msgid "You need to set the font family in CSS."
msgstr "你需要在 CSS 中设置字符家族."

#. Tag: programlisting
#: chapter-themes.xml:2089
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[.v-caption-awesomecaption .v-captiontext {\n"
"    font-family: FontAwesome;\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:2093
#, no-c-format
msgid "Custom Font Icons"
msgstr "定制字体图标"

#. Tag: para
#: chapter-themes.xml:2095
#, no-c-format
msgid ""
"You can easily use glyphs in existing fonts as icons, or create your own."
msgstr ""
"你可以很简便地将现存字体内的图形当作图标来使用, 也可以创建你自己的字体图标."

#. Tag: title
#: chapter-themes.xml:2100
#, no-c-format
msgid "Creating New Icon Fonts With IcoMoon"
msgstr "使用 IcoMoon 创建新的图标字体"

#. Tag: para
#: chapter-themes.xml:2102
#, no-c-format
msgid ""
"You are free to use any of the many ways to create icons and embed them into "
"fonts. Here, we give basic instructions for using the <link xlink:href="
"\"http://icomoon.io/app/\">IcoMoon</link> service, where you can pick icons "
"from a large library of well-designed icons."
msgstr ""
"你可以完全自由地使用任何方法来创建图标, 然后将它们嵌入到字体内. 这里, 我们简"
"单介绍如何使用 <link xlink:href=\"http://icomoon.io/app/\">IcoMoon</link> 服"
"务, 通过它你可以选择在一个很大的很精美的图标库中选择你需要的图标."

#. Tag: para
#: chapter-themes.xml:2109
#, no-c-format
msgid ""
"Font Awesome is included in IcoMoon's selection of icon libraries. Note that "
"the codepoints of the icons are not fixed, so the <classname>FontAwesome</"
"classname> enum is not compatible with such custom icon fonts."
msgstr ""
"Font Awesome 已经包含在 IcoMoon 的图标库选项之内了. 注意, 图标的 Unicode 代码"
"值不是固定的, 因此 <classname>FontAwesome</classname> 枚举型中的值, 与这类自"
"定义图标字体是不兼容的."

#. Tag: para
#: chapter-themes.xml:2116
#, no-c-format
msgid ""
"After you have selected the icons that you want in your font, you can "
"download them in a ZIP package. The package contains the icons in multiple "
"formats, including WOFF, TTF, EOT, and SVG. Not all browsers support any one "
"of them, so all are needed to support all the common browsers. Extract the "
"<filename>fonts</filename> folder from the package to under your theme."
msgstr ""
"选择你的字体中希望包含的图标之后, 你可以通过 ZIP 包的形式下载它们. ZIP 包内包"
"含这些图标的多种文件格式, 包括 WOFF, TTF, EOT, 以及 SVG. 但其中任何一个格式, "
"都不是被所有的浏览器支持的, 因此, 为了让你的应用程序支持所有的常用浏览器, 就"
"需要包含所有的文件格式. 你需要从 ZIP 包中解开 <filename>fonts</filename> 目"
"录, 然后放在你的 theme 之下."

#. Tag: para
#: chapter-themes.xml:2125
#, no-c-format
msgid ""
"See <xref linkend=\"themes.fonts.loading\"/> for instructions for loading a "
"custom font."
msgstr ""
"关于如何装载一个自定义字体, 详情请参见 <xref linkend=\"themes.fonts.loading"
"\"/>."

#. Tag: title
#: chapter-themes.xml:2132
#, no-c-format
msgid "Implementing FontIcon"
msgstr "实现 FontIcon 接口"

#. Tag: para
#: chapter-themes.xml:2134
#, no-c-format
msgid ""
"You can define a font icon for any font available in the browser by "
"implementing the <interfacename>FontIcon</interfacename> interface. The "
"normal pattern for implementing it is to implement an enumeration for all "
"the symbols available in the font. See the implementation of "
"<classname>FontAwesome</classname> for more details."
msgstr ""
"你可以对浏览器支持的任何字体定义字体图标, 方法是实现 "
"<interfacename>FontIcon</interfacename> 接口. 实现这个接口的通常模式是实现一"
"个枚举, 列举出字体内所有可用的符号. 详情请参见 <classname>FontAwesome</"
"classname> 类的实现."

#. Tag: para
#: chapter-themes.xml:2142
#, no-c-format
msgid ""
"You need a FontIcon API for the icons. In the following, we define a font "
"icon using a normal sans-serif font built-in in the browser."
msgstr ""
"使用图标时需要 FontIcon API. 下例中, 我们使用浏览器内建的普通的 sans-serif 字"
"体来定义一个字体图标."

#. Tag: programlisting
#: chapter-themes.xml:2148
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[// Font icon definition with a single symbol\n"
"public enum MyFontIcon implements FontIcon {\n"
"    EURO(0x20AC);\n"
"    \n"
"    private int codepoint;\n"
"    \n"
"    MyFontIcon(int codepoint) {\n"
"        this.codepoint = codepoint;\n"
"    }\n"
"    \n"
"    @Override\n"
"    public String getMIMEType() {\n"
"        throw new UnsupportedOperationException(\n"
"            FontIcon.class.getSimpleName()\n"
"            + \" should not be used where a MIME type is needed.\");\n"
"    }\n"
"    \n"
"    @Override\n"
"    public String getFontFamily() {\n"
"        return \"sans-serif\";\n"
"    }\n"
"    \n"
"    @Override\n"
"    public int getCodepoint() {\n"
"        return codepoint;\n"
"    }\n"
"    \n"
"    @Override\n"
"    public String getHtml() {\n"
"        return \"<span class=\\\"v-icon\\\" style=\\\"font-family: \" +\n"
"                getFontFamily() + \";\\\">&#x\" +\n"
"                Integer.toHexString(codepoint) + \";</span>\";\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2150
#, no-c-format
msgid "Then you can use it as usual:"
msgstr "然后, 你可以这样使用它:"

#. Tag: programlisting
#: chapter-themes.xml:2154
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[TextField name = new TextField(\"Amount\");\n"
"name.setIcon(MyFontIcon.EURO);\n"
"layout.addComponent(name);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2156
#, no-c-format
msgid ""
"You could make the implementation a class as well, instead of an "
"enumeration, to allow other ways to specify the icons."
msgstr ""
"你也可以使用类的方式来实现, 而不是使用枚举型, 以便通过其他方式来指定图标."

#. Tag: title
#: chapter-themes.xml:2165
#, no-c-format
msgid "Custom Fonts"
msgstr "自定义字体"

#. Tag: para
#: chapter-themes.xml:2167
#, no-c-format
msgid ""
"In addition to using the built-in fonts of the browser and the web fonts "
"included in the Vaadin themes, you can use custom web fonts."
msgstr ""
"除浏览器的内建字体, 以及 Vaadin theme 中包含的 Web 字体之外, 你还可以使用自定"
"义的 Web 字体."

#. Tag: title
#: chapter-themes.xml:2173
#, no-c-format
msgid "Loading Fonts"
msgstr "装载字体"

#. Tag: para
#: chapter-themes.xml:2175
#, no-c-format
msgid ""
"You can load web fonts with the <literal>font</literal> mixin as follows:"
msgstr "你可以使用 <literal>font</literal> mixin 来装载 Web 字体, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:2179
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[@include font(MyFontFamily,\n"
"              '../../mytheme/fonts/myfontfamily');]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2181
#, no-c-format
msgid ""
"The statement must be given in the <filename>styles.scss</filename> file "
"<emphasis>outside</emphasis> the <literal>.mytheme {}</literal> block."
msgstr ""
"这条语句必须放在 <filename>styles.scss</filename> 文件的 <literal>.mytheme {}"
"</literal> 部分的 <emphasis>外部</emphasis>."

#. Tag: para
#: chapter-themes.xml:2186
#, no-c-format
msgid ""
"The first parameter is the name of the font family, which is used to "
"identify the font. If the font family name contains spaces, you need to use "
"single or double quotes around the name."
msgstr ""
"第一个参数是字体家族的名称, 用于标识字体. 如果字体家族名称中包含空格, 你需要"
"使用单引号或双引号将名称括起."

#. Tag: para
#: chapter-themes.xml:2192
#, no-c-format
msgid ""
"The second parameter is the base name of the font files without an "
"extension, including a relative path. Notice that the path is relative to "
"the base theme, where the mixin is defined, not the used theme. We recommend "
"placing custom font files under a <filename>fonts</filename> folder in a "
"theme."
msgstr ""
"第二个参数是字体文件名, 不带扩展名, 但包含相对路径. 注意, 路径是相对于基础 "
"theme 的, 也就是定义这个 mixin 的 theme, 而不是当前使用的 theme. 我们建议将自"
"定义字体文件放在 theme 下的 <filename>fonts</filename> 文件夹中."

#. Tag: para
#: chapter-themes.xml:2200
#, no-c-format
msgid ""
"Not all browsers support any single font file format, so the base name is "
"appended with <filename>.ttf</filename>, <filename>.eot</filename>, "
"<filename>.woff</filename>, or <filename>.svg</filename> suffix for the font "
"file suitable for a user's browser."
msgstr ""
"并不是所有的浏览器都支持全部的字体文件格式, 因此字体文件使用的扩展名是 "
"<filename>.ttf</filename>, <filename>.eot</filename>, <filename>.woff</"
"filename>, 或 <filename>.svg</filename>, 具体使用哪个, 要根据浏览器所支持的字"
"体格式来决定."

#. Tag: title
#: chapter-themes.xml:2209
#, no-c-format
msgid "Using Custom Fonts"
msgstr "使用自定义字体"

#. Tag: para
#: chapter-themes.xml:2211
#, no-c-format
msgid ""
"After loaded, you can use a custom font, or actually font family, by its "
"name in CSS and otherwise."
msgstr ""
"字体装载完成后, 你就可以在 CSS 或其他地方通过字体名称使用自定义字体, 或字体家"
"族."

#. Tag: programlisting
#: chapter-themes.xml:2216
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[.mystyle {\n"
"    font-family: MyFontFamily;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2218
#, no-c-format
msgid ""
"Again, if the font family name contains spaces, you need to use single or "
"double quotes around the name."
msgstr ""
"再次强调, 如果字体家族名称包含空格, 你需要使用单引号或双引号将名称括起."

#. Tag: title
#: chapter-themes.xml:2226
#, no-c-format
msgid "Responsive Themes"
msgstr "条件式 Theme"

#. Tag: primary
#: chapter-themes.xml:2229
#, no-c-format
msgid "<classname>responsive</classname> extension"
msgstr "<classname>responsive</classname> 扩展"

#. Tag: primary
#: chapter-themes.xml:2233
#, no-c-format
msgid "CSS selections"
msgstr ""

#. Tag: primary
#: chapter-themes.xml:2237
#, no-c-format
msgid "extension"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2237
#, no-c-format
msgid ""
"Vaadin includes support for responsive design which enables size range "
"conditions in CSS selectors, allowing conditional CSS rules that respond to "
"size changes in the browser window on the client-side. <phrase condition="
"\"web\">See the <link xlink:href=\"https://vaadin.com/blog/-/"
"blogs/3126636\">Vaadin Blog article on Responsive design</link> for some "
"additional information.</phrase>"
msgstr ""
"Vaadin 支持动态适应式的界面设计能力, 可以在 CSS 选择器中使用尺寸范围作为选择"
"条件, 因此可以实现与客户端浏览器窗口尺寸大小动态匹配的条件式 CSS 规则. "
"<phrase condition=\"web\">详情请参见 <link xlink:href=\"https://vaadin.com/"
"blog/-/blogs/3126636\">Vaadin Blog 关于 Responsive design 的文章</link>.</"
"phrase>"

#. Tag: para
#: chapter-themes.xml:2248
#, no-c-format
msgid ""
"You can use the <classname>Responsive</classname> extension to extend either "
"a component, typically a layout, or the entire UI. You specify the component "
"by the static <methodname>makeResponsive()</methodname> method."
msgstr ""
"你可以使用 <classname>Responsive</classname> 来扩展任何组件, 通常是布局组件, "
"也可以扩展整个 UI. 你需要在静态方法 <methodname>makeResponsive()</"
"methodname> 中指定被扩展的组件."

#. Tag: programlisting
#: chapter-themes.xml:2255
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[// Have some component with an appropriate "
"style name\n"
"Label c = new Label(\"Here be text\");\n"
"c.addStyleName(\"myresponsive\");\n"
"content.addComponent(c);\n"
"        \n"
"// Enable Responsive CSS selectors for the component\n"
"Responsive.makeResponsive(c);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2257
#, no-c-format
msgid ""
"You can now use <literal>width-range</literal> and <literal>height-range</"
"literal> conditions in CSS selectors as follows:"
msgstr ""
"然后你可以在 CSS 选择器中使用 <literal>width-range</literal> 和 "
"<literal>height-range</literal> 条件, 如下:"

#. Tag: programlisting
#: chapter-themes.xml:2263
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[/* Basic settings for all sizes */\n"
".myresponsive {\n"
"    padding: 5px;\n"
"    line-height: 36pt;\n"
"}\n"
"    \n"
"/* Small size */\n"
".myresponsive[width-range~=\"0-300px\"] {\n"
"    background: orange;\n"
"    font-size: 16pt;\n"
"}\n"
"\n"
"/* Medium size */\n"
".myresponsive[width-range~=\"301px-600px\"] {\n"
"    background: azure;\n"
"    font-size: 24pt;\n"
"}\n"
"\n"
"/* Anything bigger */\n"
".myresponsive[width-range~=\"601px-\"] {\n"
"    background: palegreen;\n"
"    font-size: 36pt;\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2265
#, no-c-format
msgid ""
"You can have overlapping size ranges, in which case all the selectors "
"matching the current size are enabled."
msgstr "选择条件中的尺寸范围可以重叠, 这时与当前尺寸匹配的所有选择器都将有效."

#. Tag: title
#: chapter-themes.xml:2271 chapter-themes.xml:2304
#, no-c-format
msgid "Flexible Wrapping"
msgstr "灵活折行"

#. Tag: para
#: chapter-themes.xml:2273
#, no-c-format
msgid ""
"You can use the <classname>CssLayout</classname> to have automatic wrap-"
"around when the components in the layout would go off right side of the "
"layout. Components that wrap must, however, have either undefined or fixed "
"width, and thereby can not utilize the full area of the screen. With the "
"<classname>Responsive</classname> extension, you can have more flexible wrap-"
"around that gives the component tiles maximum width."
msgstr ""
"你可以使用 <classname>CssLayout</classname> 来实现布局内组件超出布局右边界时"
"的自动折行. 折行的组件, 宽度必须为未指定或者为固定值, 因此不能使用屏幕的全部"
"区域. 使用 <classname>Responsive</classname> 扩展, 你可以实现更灵活的折行, 允"
"许组件填充为最大宽度."

#. Tag: para
#: chapter-themes.xml:2282
#, no-c-format
msgid ""
"In the following, we have a text and image box, which are laid out "
"horizontally with 50-50 sizing if the screen is wide enough, but wrap to a "
"vertical layout if the screen is narrow."
msgstr ""
"下例中, 我们有一个文本和一个图片, 如果屏幕足够宽, 它们将水平排列, 分别占据 "
"50% 宽度, 但如果屏幕比较窄, 则会折行, 垂直排列."

#. Tag: programlisting
#: chapter-themes.xml:2289
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[CssLayout layout = new CssLayout();\n"
"layout.setWidth(\"100%\");\n"
"layout.addStyleName(\"flexwrap\");\n"
"content.addComponent(layout);\n"
"        \n"
"// Enable Responsive CSS selectors for the layout\n"
"Responsive.makeResponsive(layout);\n"
"\n"
"Label title = new Label(\"Space is big, really big\");\n"
"title.addStyleName(\"title\");\n"
"layout.addComponent(title);\n"
"\n"
"Label description = new Label(\"This is a \" +\n"
"    \"long description of the image shown \" +\n"
"    \"on the right or below, depending on the \" +\n"
"    \"screen width. The text here could continue long.\");\n"
"description.addStyleName(\"itembox\");\n"
"description.setSizeUndefined();\n"
"layout.addComponent(description);\n"
"        \n"
"Image image = new Image(null,\n"
"        new ThemeResource(\"img/planets/Earth.jpg\"));\n"
"image.addStyleName(\"itembox\");\n"
"layout.addComponent(image);]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2291 chapter-themes.xml:2349
#, no-c-format
msgid "The SCSS could be as follows:"
msgstr "SCSS 如下:"

#. Tag: programlisting
#: chapter-themes.xml:2296
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[/* Various general settings */\n"
".flexwrap {\n"
"    background: black;\n"
"    color: white;\n"
"\n"
"    .title {\n"
"        font-weight: bold;\n"
"        font-size: 20px;\n"
"        line-height: 30px;\n"
"        padding: 5px;\n"
"    }\n"
"    \n"
"    .itembox {\n"
"        white-space: normal;\n"
"        vertical-align: top;\n"
"    }\n"
"    \n"
"    .itembox.v-label {padding: 5px}\n"
"}\n"
"    \n"
".flexwrap[width-range~=\"0-499px\"] {\n"
"    .itembox {width: 100%}\n"
"}\n"
"    \n"
".flexwrap[width-range~=\"500px-\"] {\n"
"    .itembox {width: 50%}\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2298
#, no-c-format
msgid ""
"The layout in the wide mode is shown in <xref linkend=\"figure.theme."
"responsive.flexwrap\"/>."
msgstr ""
"宽屏模式下的布局效果, 见 <xref linkend=\"figure.theme.responsive.flexwrap\"/"
">."

#. Tag: para
#: chapter-themes.xml:2312
#, no-c-format
msgid ""
"You could also play with the <literal>display: block</literal> vs "
"<literal>display: inline-block</literal> properties."
msgstr ""
"你还可以试试 <literal>display: block</literal> 和 <literal>display: inline-"
"block</literal> 属性的效果."

#. Tag: para
#: chapter-themes.xml:2317
#, no-c-format
msgid ""
"Notice that, while the <classname>Responsive</classname> extension makes it "
"possible to do various CSS trickery with component sizes, the normal rules "
"for component and layout sizes apply, as described in <xref linkend=\"layout."
"settings.size\"/> and elsewhere, and you should always check the size "
"behaviour of the components. In the above example, we set the label to have "
"undefined width, which disables word wrap, so we had to re-enable it."
msgstr ""
"注意, <classname>Responsive</classname> 扩展使得我们可以使用与组件尺寸相关的"
"很多 CSS 技巧, 但与组件尺寸和布局尺寸相关的其他通常规则也会同时其作用, 详情请"
"参见 <xref linkend=\"layout.settings.size\"/> 及其他章节, 因此你需要时刻注意"
"与组件尺寸相关的问题. 在上例中, 我们将 label 宽度设置为未指定, 这就导致 "
"label 内的文字折行被禁止, 因此我们需要再次启用它."

#. Tag: title
#: chapter-themes.xml:2329
#, no-c-format
msgid "Toggling the Display Property"
msgstr "控制 Display 属性"

#. Tag: primary
#: chapter-themes.xml:2332
#, no-c-format
msgid "display (CSS property)"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2332
#, no-c-format
msgid ""
"The <literal>display</literal> property allows especially powerful ways to "
"offer radically different UIs for different screen sizes by enabling and "
"disabling UI elements as needed. For example, you could disable some parts "
"of the UI when the space gets too small, but bring forth navigation buttons "
"that, when clicked, add component styles to switch to the hidden parts."
msgstr ""
"<literal>display</literal> 属性提供了功能强大的能力, 可以针对不同的屏幕尺寸实"
"现完全不同的 UI, 方法是根据需要启用和禁用 UI 元素. 比如, 当空间太小时, 你可以"
"禁用 UI 的一部分, 并显示导航按钮, 当导航按钮按下时, 通过操纵组件的样式来切换"
"到原来隐藏的部分."

#. Tag: para
#: chapter-themes.xml:2341
#, no-c-format
msgid ""
"In the following, we simply show alternative components based on screen "
"width:"
msgstr "下面是一个简单的例子, 我们根据屏幕宽度不同显示不同的组件:"

#. Tag: programlisting
#: chapter-themes.xml:2347
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[CssLayout layout = new CssLayout();\n"
"layout.setWidth(\"100%\");\n"
"layout.addStyleName(\"toggledisplay\");\n"
"content.addComponent(layout);\n"
"        \n"
"// Enable Responsive CSS selectors for the layout\n"
"Responsive.makeResponsive(layout);\n"
"\n"
"Label enoughspace =\n"
"    new Label(\"This space is big, mindbogglingly big\");\n"
"enoughspace.addStyleName(\"enoughspace\");\n"
"layout.addComponent(enoughspace);\n"
"        \n"
"Label notenoughspace = new Label(\"Quite small space\");\n"
"notenoughspace.addStyleName(\"notenoughspace\");\n"
"layout.addComponent(notenoughspace);]]>"
msgstr ""

#. Tag: programlisting
#: chapter-themes.xml:2354
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[/* Common settings */\n"
".toggledisplay {\n"
"    .enoughspace, .notenoughspace {\n"
"        color: white;\n"
"        padding: 5px;\n"
"    }\n"
"    \n"
"    .notenoughspace { /* Really small */\n"
"        background: red;\n"
"        font-weight: normal;\n"
"        font-size: 10px;\n"
"        line-height: 15px;\n"
"    }\n"
"\n"
"    .enoughspace { /* Really big */\n"
"        background: darkgreen;\n"
"        font-weight: bold;\n"
"        font-size: 20px;\n"
"        line-height: 30px;\n"
"    }\n"
"}\n"
"    \n"
"/* Quite little space */\n"
".toggledisplay[width-range~=\"0-499px\"] {\n"
"    .enoughspace    {display: none}\n"
"}\n"
"    \n"
"/* Plenty of space */\n"
".toggledisplay[width-range~=\"500px-\"] {\n"
"    .notenoughspace {display: none}\n"
"}]]>"
msgstr ""

#. Tag: title
#: chapter-themes.xml:2358
#, no-c-format
msgid "Responsive Demos"
msgstr "条件式 theme 的演示"

#. Tag: para
#: chapter-themes.xml:2360
#, no-c-format
msgid ""
"You can find a simple responsive demo at <link xlink:href=\"http://demo."
"vaadin.com/responsive/\">demo.vaadin.com/responsive</link>. It demonstrates "
"the flexible wrapping technique described in <xref linkend=\"themes."
"responsive.wrap\"/>."
msgstr ""
"在 <link xlink:href=\"http://demo.vaadin.com/responsive/\">demo.vaadin.com/"
"responsive</link> 可以看到一个条件式 theme 的简单示例. 这个示例演示 <xref "
"linkend=\"themes.responsive.wrap\"/> 中介绍的灵活折行技术."

#. Tag: para
#: chapter-themes.xml:2367
#, no-c-format
msgid ""
"The <link xlink:href=\"http://demo.vaadin.com/book-examples-vaadin7/book/"
"#themes.responsive.basic\">Book Examples</link> demo provides the examples "
"given in this chapter, as well as some others."
msgstr ""
"<link xlink:href=\"http://demo.vaadin.com/book-examples-vaadin7/book/#themes."
"responsive.basic\">Book Examples</link> 包括本章中的示例程序, 以及其他示例."

#. Tag: primary
#: chapter-themes.xml:2375
#, no-c-format
msgid "<primary>Parking demo</primary>"
msgstr ""

#. Tag: primary
#: chapter-themes.xml:2376
#, no-c-format
msgid "TouchKit"
msgstr ""

#. Tag: secondary
#: chapter-themes.xml:2376
#, no-c-format
msgid "<secondary>Parking demo</secondary>"
msgstr ""

#. Tag: para
#: chapter-themes.xml:2376
#, no-c-format
msgid ""
"The Parking demo for TouchKit, mentioned in <xref linkend=\"mobile\"/>, uses "
"a responsive theme to adapt to mobile devices with different screen sizes "
"and when the screen orientation changes."
msgstr ""
"针对 TouchKit(参见<xref linkend=\"mobile\"/>) 的 Parking demo, 使用条件式 "
"theme 来自动适应移动设备的不同屏幕尺寸, 以及不同的屏幕方向."
