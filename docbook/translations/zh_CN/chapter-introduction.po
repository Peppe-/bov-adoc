# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2014-10-31 06:21+0000\n"
"PO-Revision-Date: 2014-11-09 02:37+0900\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"X-Generator: Poedit 1.6.5\n"

#. Tag: title
#: chapter-introduction.xml:11
#, no-c-format
msgid "Introduction"
msgstr "简介"

#. Tag: para
#: chapter-introduction.xml:13
#, no-c-format
msgid ""
"This chapter gives a brief introduction to software development with Vaadin. "
"We also try to give some insight about the design philosophy behind Vaadin "
"and its history."
msgstr ""
"本章将简要介绍使用Vaadin的软件开发方法。除此之外还将介绍一些Vaadin的发展历"
"史，以及它背后的设计理念。"

#. Tag: title
#: chapter-introduction.xml:20
#, no-c-format
msgid "Overview"
msgstr "概述"

#. Tag: para
#: chapter-introduction.xml:22
#, no-c-format
msgid ""
"Vaadin Framework is a Java web application development framework that is "
"designed to make creation and maintenance of high quality web-based user "
"interfaces easy. Vaadin supports two different programming models: server-"
"side and client-side. The server-driven programming model is the more "
"powerful one. It lets you forget the web and program user interfaces much "
"like you would program a desktop application with conventional Java toolkits "
"such as AWT, Swing, or SWT. But easier."
msgstr ""
"Vaadin 是一种 Java Web 应用程序的开发框架, 其设计目标是便利地创建和维护高质量"
"的 Web UI 应用程序. Vaadin 支持两种不同的开发模式: 服务器端开发和客户端开发. "
"服务器端开发方式是这二者中更为强大的一种. 它能帮助开发者忘记 Web 程序的各种实"
"现细节, 使得 Web 应用程序的开发变得就象过去使用便利的Java开发工具(如AWT, "
"Swing, SWT)来开发桌面应用程序一样, 甚至更简单."

#. Tag: para
#: chapter-introduction.xml:32
#, no-c-format
msgid ""
"While traditional web programming is a fun way to spend your time learning "
"new web technologies, you probably want to be productive and concentrate on "
"the application logic. The server-side Vaadin framework takes care of "
"managing the user interface in the browser and the <firstterm>AJAX</"
"firstterm> communications between the browser and the server. With the "
"Vaadin approach, you do not need to learn and deal directly with browser "
"technologies, such as HTML or JavaScript."
msgstr ""
"从耗费大把时间学习 Web 新技术的角度来看, 传统的 Web 程序开发方式也许是一种有"
"趣的方法, 但你也许更希望提高生产效率, 把精力更多地集中到应用程序业务逻辑上. "
"服务器端 Vaadin 开发框架将会代替你管理浏览器内的 UI 组件、帮助你维护浏览器与"
"服务器之间的 <firstterm>AJAX</firstterm> 通信. 使用 Vaadin 方案, 你就不再需要"
"学习和直接处理那些浏览器端的技术细节, 比如 HTML, JavaScript 等."

#. Tag: title
#: chapter-introduction.xml:43
#, no-c-format
msgid "Vaadin Application Architecture"
msgstr "Vaadin 应用程序架构"

#. Tag: para
#: chapter-introduction.xml:54
#, no-c-format
msgid ""
"illustrates the basic architectures of web applications made with Vaadin. "
"The server-side application architecture consists of the <emphasis>server-"
"side framework</emphasis> and a <emphasis>client-side engine</emphasis>. The "
"engine runs in the browser as JavaScript code, rendering the user interface, "
"and delivering user interaction to the server. The UI logic of an "
"application runs as a Java Servlet in a Java application server."
msgstr ""
"描述了使用 Vaadin 开发的 Web 应用程序的基本架构. 服务器端应用程序的架构包括 "
"<emphasis>服务器端框架</emphasis>, 和 <emphasis>客户端引擎</emphasis>. 客户端"
"引擎以 JavaScript 代码的形式在浏览器内运行, 它负责呈现 UI , 并把用户操作发送"
"到服务器端. 应用程序的 UI 逻辑则以 Java Servlet 的形式在 Java 应用程序服务器"
"内运行."

#. Tag: para
#: chapter-introduction.xml:64
#, no-c-format
msgid ""
"As the client-side engine is executed as JavaScript in the browser, no "
"browser plugins are needed for using applications made with Vaadin. This "
"gives it an edge over frameworks based on Flash, Java Applets, or other "
"plugins. Vaadin relies on the support of Google Web Toolkit for a wide range "
"of browsers, so that the developer does not need to worry about browser "
"support."
msgstr ""
"由于客户端引擎以 JavaScript 形式运行在浏览器内, 所以 Vaadin 开发的应用程序在"
"运行时不需要额外的浏览器插件(plugin)的支持. 因此, 与那些基于 Flash, Java "
"Applets, 或其他各种浏览器插件(plugin)的开发框架相比, Vaadin 更具有优势. "
"Vaadin 底层依赖于 Google Web Toolkit 的支持, 实现了跨浏览器能力, 因此开发者再"
"也不必担心兼容多种浏览器的问题."

#. Tag: para
#: chapter-introduction.xml:72
#, no-c-format
msgid ""
"Because HTML, JavaScript, and other browser technologies are essentially "
"invisible to the application logic, you can think of the web browser as only "
"a thin client platform. A thin client displays the user interface and "
"communicates user events to the server at a low level. The control logic of "
"the user interface runs on a Java-based web server, together with your "
"business logic. By contrast, a normal client-server architecture with a "
"dedicated client application would include a lot of application specific "
"communications between the client and the server. Essentially removing the "
"user interface tier from the application architecture makes our approach a "
"very effective one."
msgstr ""
"由于 HTML, JavaScript, 以及其他浏览器相关技术对于应用程序逻辑是隐藏的, 你可以"
"把 Web 浏览器想象为一个瘦的客户端平台. 这个瘦客户端将 UI 展现给用户, 又将用户"
"的交互行为发送到服务器端. UI 的控制逻辑与业务逻辑共同运行在基于 Java 的 Web "
"服务器上. 与这种模式不同, 传统的客户端/服务器架构存在一个专门的客户端应用程序"
"部分, 其中需要包含大量的客户端/服务器双向通讯, 而这种通讯又往往是与具体的应用"
"程序高度相关的. 我们的方案从逻辑上删去了这个 UI 层, 因此变得非常高效."

#. Tag: para
#: chapter-introduction.xml:85
#, no-c-format
msgid ""
"Behind the server-driven development model, Vaadin makes the best use of "
"AJAX (<firstterm>Asynchronous JavaScript and XML</firstterm>, see <xref "
"linkend=\"architecture.technology.ajax\"/> for a description) techniques "
"that make it possible to create Rich Internet Applications (RIA) that are as "
"responsive and interactive as desktop applications."
msgstr ""
"在服务器端开发模型的背后, Vaadin 灵活运用了 AJAX 技术"
"(<firstterm>Asynchronous JavaScript and XML</firstterm>, 详情参见 <xref "
"linkend=\"architecture.technology.ajax\"/>) , AJAX 技术的运用使得 Vaadin 可以"
"创建出功能强大的丰富性网络应用程序 (Rich Internet Application, RIA), 而且这"
"些 RIA 程序的响应速度、易交互性可以达到与桌面应用程序相同的程度."

#. Tag: para
#: chapter-introduction.xml:93
#, no-c-format
msgid ""
"In addition to the server-side Java application development, you can develop "
"on the client-side by making new widgets in Java, and even pure client-side "
"applications that run solely in the browser. The Vaadin client-side "
"framework includes Google Web Toolkit (GWT), which provides a compiler from "
"Java to the JavaScript that runs in the browser, as well a full-featured "
"user interface framework. With this approach, Vaadin is pure Java on both "
"sides."
msgstr ""
"除了服务器端的 Java 应用程序开发外, 你也可以用 Java 语言编写新的 widget 来进"
"行客户端开发, Vaadin 甚至还可以用于开发纯的客户端应用程序, 这类应用程序可以在"
"浏览器内独立运行, 而不必与服务器交互. Vaadin 的客户端开发框架包括了 Google "
"Web Toolkit (GWT), GWT提供了一个编译器, 可将 Java 程序编译为 JavaScript 代"
"码, 然后在浏览器内运行. Vaadin 的客户端开发框架还包括功能完整的 UI 组件. 无论"
"是在客户端还是在服务器端, Vaadin 都使用纯 Java 进行开发, 而不必引入其他语言."

#. Tag: primary
#: chapter-introduction.xml:101 chapter-introduction.xml:374
#, no-c-format
msgid "Google Web Toolkit"
msgstr ""

#. Tag: para
#: chapter-introduction.xml:104
#, no-c-format
msgid ""
"Vaadin uses a client-side engine for rendering the user interface of a "
"server-side application in the browser. All the client-server communications "
"are hidden well under the hood. <indexterm><primary>JavaScript</primary></"
"indexterm> Vaadin is designed to be extensible, and you can indeed use any "
"3rd-party widgets easily, in addition to the component repertoire offered in "
"Vaadin. In fact, you can find hundreds of add-ons in the Vaadin Directory."
msgstr ""
"Vaadin 服务器端应用程序的 UI 部分由客户端引擎负责呈现在浏览器中. 客户端与服务"
"器端的一切通信都被妥善的屏蔽起来. <indexterm><primary>JavaScript</primary></"
"indexterm> Vaadin 被设计为具有很高的可扩展性, 所以除了 Vaadin 本身提供的组件"
"之外, 你还可以非常方便地使用第3方 widget. 实际上, 在 Vaadin Directory 中你可"
"以找到数百个插件(Add-on)."

#. Tag: para
#: chapter-introduction.xml:127
#, no-c-format
msgid ""
"Vaadin Framework defines a clear separation between the structure of the "
"user interface and its appearance and allows you to develop them separately. "
"Our approach to this is <firstterm>themes</firstterm>, which control the "
"appearance by CSS and (optional) HTML page templates. As Vaadin provides "
"excellent default themes, you do not usually need to make much "
"customization, but you can if you need to. For more about themes, see <xref "
"linkend=\"themes\"/>."
msgstr ""
"Vaadin 框架将 UI 组件和它的具体呈现非常清楚地分离为不同的部分, 因此允许你分别"
"开发这两部分. 我们的方案是使用 <firstterm>theme</firstterm>, theme 使用 CSS "
"和 HTML 页面模板(可选)来控制 UI 组件的具体呈现. Vaadin 提供了非常完善的默认 "
"theme, 所以你通常并不需要做太多的定制, 但只要你需要, 你总是可以自由地定制 UI "
"组件的外观. 关于 theme 的详细信息, 请参见 <xref linkend=\"themes\"/>."

#. Tag: para
#: chapter-introduction.xml:137
#, no-c-format
msgid ""
"We hope that this is enough about the basic architecture and features of "
"Vaadin for now. You can read more about it later in <xref linkend="
"\"architecture\"/>, or jump straight to more practical things in <xref "
"linkend=\"application\"/>."
msgstr ""
"关于 Vaadin 的基本架构和主要功能, 我们暂时只介绍到这里. 更多详细内容请阅读 "
"<xref linkend=\"architecture\"/>, 或者直接阅读更加贴近实战的 <xref linkend="
"\"application\"/>."

#. Tag: title
#: chapter-introduction.xml:146
#, no-c-format
msgid "Example Application Walkthrough"
msgstr "示例程序一瞥"

#. Tag: para
#: chapter-introduction.xml:148
#, no-c-format
msgid ""
"Let us follow the long tradition of first saying \"Hello World!\" when "
"learning a new programming framework. First, using the primary server-side "
"API."
msgstr ""
"下面我们遵照软件业的悠久传统, 在学习一个新的开发框架时, 先来写写著名的 "
"\"Hello World!\". 首先, 我们使用最基本的服务器端 API."

#. Tag: programlisting
#: chapter-introduction.xml:153
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[import com.vaadin.server.VaadinRequest;\n"
"import com.vaadin.ui.Label;\n"
"import com.vaadin.ui.UI;\n"
"\n"
"@Title(\"My UI\")\n"
"@Theme(\"valo\")\n"
"public class HelloWorld extends UI {\n"
"    @Override\n"
"    protected void init(VaadinRequest request) {\n"
"        // Create the content root layout for the UI\n"
"        VerticalLayout content = new VerticalLayout();\n"
"        setContent(content);\n"
"\n"
"        // Display the greeting\n"
"        content.addComponent(new Label(\"Hello World!\"));\n"
"\n"
"        // Have a clickable button        \n"
"        content.addComponent(new Button(\"Push Me!\",\n"
"            new ClickListener() {\n"
"                @Override\n"
"                public void buttonClick(ClickEvent e) {\n"
"                    Notification.show(\"Pushed!\");\n"
"                }\n"
"            }));\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-introduction.xml:155
#, no-c-format
msgid ""
"A Vaadin application has one or more <emphasis>&ui;</emphasis>s that extend "
"the <classname>com.vaadin.ui.&uiclass;</classname> class. A &ui; is a part "
"of the web page in which the Vaadin application runs. An application can "
"have multiple &ui;s in the same page, especially in portals, or in different "
"windows or tabs. A UI is associated with a user session, and a session is "
"created for each user who uses the application. In the context of our Hello "
"World UI, it is sufficient to know that the underlying session is created "
"when the user first accesses the application by opening the page, and the "
"<methodname>init()</methodname> method is invoked at that time."
msgstr ""
"一个 Vaadin 应用程序包含一个或多个 <emphasis>&ui;</emphasis>,  UI 由 "
"<classname>com.vaadin.ui.&uiclass;</classname> 类继承而来. 一个 &ui; 就是 "
"Vaadin 应用程序运行时所在的 Web 页面的一部分. 在同一页面中, 一个应用程序也可"
"以包含多个 &ui;, 在 portal 中更是如此, 在浏览器的不同窗口或不同 tab 中当然也"
"是如此. 一个 UI 会关联到一个用户 session, 而 session 会为每一个使用这个应用程"
"序的用户单独创建. 在我们的 Hello World UI 中, 当用户访问页面时会发生对应用程"
"序的初次访问, 此时 session 就被创建出来, <methodname>init()</methodname> 方法"
"就在这个时候被调用, 目前我们只需要知道这些就够了."

#. Tag: para
#: chapter-introduction.xml:167
#, no-c-format
msgid ""
"The page title, which is shown in the caption of the browser window or tab, "
"is defined with an annotation. The example uses a layout component as the "
"root content of the UI, as that is the case with most Vaadin applications, "
"which normally have more than one component. It then creates a new "
"<classname>Label</classname> user interface component, which displays simple "
"text, and sets the text to \"Hello World!\". The label is added to the "
"layout."
msgstr ""
"在上面的示例程序中, 页面的标题(就是显示在浏览器窗口或tab上的标题部分), 是通"
"过 Java标注(annotation)方式来定义的. 示例程序使用一个布局(layout) 组件作为 "
"UI 内容的最顶级, 这也是大多数 Vaadin 应用程序的通常做法, 因为 UI 通常会包含很"
"多个组件, 需要靠布局(layout) 组件来管理它们的位置. 然后示例程序创建了一个 "
"<classname>Label</classname> 类型的 UI 组件, 它用来显示简单的文字, 然后将文字"
"内容设置为 \"Hello World!\". 之后, 将 Label 添加到布局(layout) 组件中."

#. Tag: para
#: chapter-introduction.xml:176
#, no-c-format
msgid ""
"The example also shows how to create a button and handle button click "
"events. Event handling is described in <xref linkend=\"architecture.events\"/"
"> and on the practical side in <xref linkend=\"application.events\"/>. In "
"addition to listeners, in Java 8 you can handle events with lambda "
"expressions, which simplifies the handler code significantly."
msgstr ""
"上面的示例还演示了如何创建一个按钮, 以及如何处理按钮的点击事件. 关于事件处"
"理, 基本原理请参见 <xref linkend=\"architecture.events\"/>,  具体的应用实例请"
"参见 <xref linkend=\"application.events\"/>. 除了通常的添加监听器的方式之外, "
"在 Java 8 中, 你还可以使用 lambda  表达式来处理事件, 这种方式可以大大地简化事"
"件处理代码."

#. Tag: programlisting
#: chapter-introduction.xml:184
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[content.addComponent(new Button(\"Push Me!\",\n"
"    event -> Notification.show(\"Pushed!\")));]]>"
msgstr ""

#. Tag: para
#: chapter-introduction.xml:186
#, no-c-format
msgid ""
"The result of the Hello World application, when opened in a browser, is "
"shown in <xref linkend=\"figure.intro.walkthrough\"/>."
msgstr ""
"通过浏览器访问 Hello World 程序时的运行结果, 参见 <xref linkend=\"figure."
"intro.walkthrough\"/>."

#. Tag: title
#: chapter-introduction.xml:192
#, no-c-format
msgid "Hello World Application"
msgstr "Hello World 应用程序"

#. Tag: para
#: chapter-introduction.xml:200
#, no-c-format
msgid ""
"To run a program, you need to package it as a web application WAR package "
"and deploy it to a server, as explained in <xref linkend=\"application."
"environment\"/>. During development, you typically deploy to an application "
"server integrated with the IDE."
msgstr ""
"要运行一个程序, 你需要将它打包为 Web 应用程序 WAR 包, 然后部署到服务器上, 详"
"情参见 <xref linkend=\"application.environment\"/>. 在开发阶段, 你可以使用 "
"IDE, 将应用程序发布到 IDE 内集成的应用程序服务器上."

#. Tag: para
#: chapter-introduction.xml:207
#, no-c-format
msgid ""
"Developing a pure client-side application, you could write a Hello World "
"just as easily, and also in Java:"
msgstr ""
"如果要开发一个纯客户端应用程序, 你可以非常简单地输出 Hello World 文字, 而且开"
"发语言仍然使用 Java, 如下:"

#. Tag: programlisting
#: chapter-introduction.xml:212
#, no-c-format
msgid ""
"<?pocket-size 75% ?><![CDATA[public class HelloWorld implements EntryPoint "
"{\n"
"    @Override\n"
"    public void onModuleLoad() {\n"
"        RootPanel.get().add(new Label(\"Hello, world!\"));\n"
"    }\n"
"}]]>"
msgstr ""

#. Tag: para
#: chapter-introduction.xml:214
#, no-c-format
msgid ""
"We do not set the title here, because it is usually defined in the HTML page "
"in which the code is executed. The application would be compiled into "
"JavaScript with the Vaadin Client Compiler (or GWT Compiler). It is more "
"typical, however, to write client-side widgets, which you can then use from "
"a server-side Vaadin application. For more information regarding client-side "
"development, see <xref linkend=\"clientside\"/>."
msgstr ""
"这个例子中我们没有设置页面标题, 因为标题通常由上述代码执行时所在的 HTML 页面"
"来定义. 这个应用程序将被 Vaadin 客户端编译器 (或者 GWT 编译器)编译为 "
"JavaScript. 这种方法通常用来开发客户端 widget, 然后供服务器端 Vaadin 应用程序"
"使用. 关于客户端开发的详情, 参见 <xref linkend=\"clientside\"/>."

#. Tag: title
#: chapter-introduction.xml:225
#, no-c-format
msgid "Support for the Eclipse IDE"
msgstr "对 Eclipse IDE 的支持"

#. Tag: para
#: chapter-introduction.xml:227
#, no-c-format
msgid ""
"While Vaadin is not bound to any specific IDE, and you can in fact easily "
"use it without any IDE altogether, we provide special support for the "
"Eclipse IDE, which has become the most used environment for Java "
"development. The support is provided in the Vaadin Plugin for Eclipse, which "
"helps you in:"
msgstr ""
"Vaadin 并不局限于某一种特定的 IDE, 甚至在没有 IDE 的情况下也能很容易地使用 "
"Vaadin, 但我们为 Eclipse IDE 提供了特别的支持, 因为 Eclipse IDE 目前已经是 "
"Java 开发中最常用的开发环境. 对 Eclipse IDE 的支持是通过 Vaadin Plugin 实现"
"的, 它可以帮助你:"

#. Tag: para
#: chapter-introduction.xml:236
#, no-c-format
msgid "Creating new Vaadin projects"
msgstr "创建新的 Vaadin 工程"

#. Tag: para
#: chapter-introduction.xml:240
#, no-c-format
msgid "Creating custom themes"
msgstr "创建自定义的 theme"

#. Tag: para
#: chapter-introduction.xml:244
#, no-c-format
msgid "Creating custom widgets"
msgstr "创建自定义的 widget"

#. Tag: para
#: chapter-introduction.xml:248
#, no-c-format
msgid "Creating composite components with a visual editor"
msgstr "通过可视化的编辑器创建复合组件"

#. Tag: para
#: chapter-introduction.xml:252
#, no-c-format
msgid "Easily upgrading to a newer version of the Vaadin library"
msgstr "便利地升级到 Vaadin 库的新版本"

#. Tag: para
#: chapter-introduction.xml:256
#, no-c-format
msgid ""
"Using the Vaadin Plugin for Eclipse is the recommended way of installing "
"Vaadin for development. Downloading the installation package that contains "
"the JARs or defining Vaadin as a Maven dependency is also possible."
msgstr ""
"要开发环境中安装 Vaadin , 推荐的方法是使用 Vaadin Plugin for Eclipse. 如果不"
"使用 Vaadin Plugin for Eclipse , 你也可以手动下载包含所有 JAR 文件的安装包, "
"或者也可以在你的 Maven 工程中加入对 Vaadin 的依赖."

#. Tag: para
#: chapter-introduction.xml:262
#, no-c-format
msgid ""
"Installing and updating the Eclipse plugin is covered in <xref linkend="
"\"getting-started.eclipse\"/> and the creation of a new Vaadin project using "
"the plugin in <xref linkend=\"getting-started.first-project.creation\"/>. "
"See <xref linkend=\"themes.eclipse\"/>, <xref linkend=\"gwt.eclipse\"/>, and "
"<xref linkend=\"eclipse\"/> for instructions on using the different features "
"of the plugin."
msgstr ""
"Eclipse plugin 的安装或升级方法, 参见 <xref linkend=\"getting-started.eclipse"
"\"/> , 使用这个插件来创建新的 Vaadin 工程, 参见 <xref linkend=\"getting-"
"started.first-project.creation\"/>. 关于这个插件各种功能的使用方法, 参见 "
"<xref linkend=\"themes.eclipse\"/>, <xref linkend=\"gwt.eclipse\"/>, 以及 "
"<xref linkend=\"eclipse\"/> ."

#. Tag: title
#: chapter-introduction.xml:274
#, no-c-format
msgid "Goals and Philosophy"
msgstr "Vaadin 的目标与哲学"

#. Tag: para
#: chapter-introduction.xml:276
#, no-c-format
msgid ""
"Simply put, Vaadin's ambition is to be the best possible tool when it comes "
"to creating web user interfaces for business applications. It is easy to "
"adopt, as it is designed to support both entry-level and advanced "
"programmers, as well as usability experts and graphic designers."
msgstr ""
"简单来说, Vaadin 的野心是成为创建商业化应用程序 Web UI 的最佳工具. Vaadin 易"
"于学习, 它既适合于入门级程序员, 也适合于高级程序员, UI 可用性专家和图像设计"
"师."

#. Tag: para
#: chapter-introduction.xml:283
#, no-c-format
msgid ""
"When designing Vaadin, we have followed the philosophy inscribed in the "
"following rules."
msgstr "在设计 Vaadin 时, 我们遵循以下几条设计哲学."

#. Tag: title
#: chapter-introduction.xml:289
#, no-c-format
msgid "Right tool for the right purpose"
msgstr "为正确的目标提供正确的工具"

#. Tag: para
#: chapter-introduction.xml:291
#, no-c-format
msgid ""
"Because our goals are high, the focus must be clear. Vaadin is designed for "
"creating web applications. It is not designed for creating websites or "
"advertisement demos. You may find, for example, JSP/JSF or Flash more "
"suitable for such purposes."
msgstr ""
"我们的理想很高远, 所以目标就应该非常集中. Vaadin 的设计目标是用于开发 Web 应"
"用程序. Vaadin 的目标不是用来创建 Web 站点, 也不是用来创建广告演示程序. 对于"
"这些用途, 你可能会发现更适合使用其他工具, 比如 JSP/JSF 或 Flash."

#. Tag: title
#: chapter-introduction.xml:300
#, no-c-format
msgid "Simplicity and maintainability"
msgstr "简易性与可维护性"

#. Tag: para
#: chapter-introduction.xml:302
#, no-c-format
msgid ""
"We have chosen to emphasize robustness, simplicity, and maintainability. "
"This involves following the well-established best practices in user "
"interface frameworks and ensuring that our implementation represents an "
"ideal solution for its purpose without clutter or bloat."
msgstr ""
"我们希望达成的目标是健壮性, 简易性, 和可维护性. 为了这个目的, 就需要遵从UI 框"
"架中的最佳实践经验, 要保证具体的实现代码忠实体现其目标的最佳方案, 不能过于混"
"乱或庞大."

#. Tag: title
#: chapter-introduction.xml:312
#, no-c-format
msgid "XML is not designed for programming"
msgstr "XML 不是用来编程的"

#. Tag: para
#: chapter-introduction.xml:313
#, no-c-format
msgid ""
"The Web is inherently document-centered and very much bound to the "
"declarative presentation of user interfaces. The Vaadin framework frees the "
"programmer from these limitations. It is far more natural to create user "
"interfaces by programming them than by defining them in declarative "
"templates, which are not flexible enough for complex and dynamic user "
"interaction."
msgstr ""
"Web 页面生来就是以文档为中心的, 而且其 UI 严重依赖于声明式的表现方法. Vaadin "
"框架将程序员从这些限制中解放出来.  Vaadin 框架以编程的方式创建 UI, 这比使用传"
"统的声明式模板来定义 UI的方式要自然得多, 传统方式对于复杂的、动态的用户交互"
"性 UI 来说, 缺乏足够的灵活性."

#. Tag: title
#: chapter-introduction.xml:324
#, no-c-format
msgid "Tools should not limit your work"
msgstr "工具不应对你的工作造成限制"

#. Tag: para
#: chapter-introduction.xml:325
#, no-c-format
msgid ""
"There should not be any limits on what you can do with the framework: if for "
"some reason the user interface components do not support what you need to "
"achieve, it must be easy to add new ones to your application. When you need "
"to create new components, the role of the framework is critical: it makes it "
"easy to create re-usable components that are easy to maintain."
msgstr ""
"当你使用 Vaadin 框架时, 对你能做什么不应造成任何限制 : 如果出于某些理由, UI "
"组件不能达到你的目的, 框架应该支持你很便利的增加新组件到你的应用程序中. 如果"
"你需要自行创建新组件, Vaadin 框架扮演的角色将十分关键: 它帮助你便利地创建可复"
"用、易维护的新组件."

#. Tag: title
#: chapter-introduction.xml:337
#, no-c-format
msgid "Background"
msgstr "背景"

#. Tag: para
#: chapter-introduction.xml:339
#, no-c-format
msgid ""
"The Vaadin Framework was not written overnight. After working with web user "
"interfaces since the beginning of the Web, a group of developers got "
"together in 2000 to form IT Mill. The team had a desire to develop a new "
"programming paradigm that would support the creation of real user interfaces "
"for real applications using a real programming language."
msgstr ""
"Vaadin 框架不是一夜之间出现的. 在Web页面刚刚出现的时代, 就有开发者开始开发 "
"Web UI了. 2000年, 有一群开发者聚集在一起创建了 IT Mill 公司. 这个团队十分渴望"
"开发出一种新的编程方式, 能够用真正的编程语言, 为真正的应用程序开发出真正的 "
"UI."

#. Tag: para
#: chapter-introduction.xml:347
#, no-c-format
msgid ""
"The library was originally called Millstone Library. The first version was "
"used in a large production application that IT Mill designed and implemented "
"for an international pharmaceutical company. IT Mill made the application "
"already in the year 2001 and it is still in use. Since then, the company has "
"produced dozens of large business applications with the library and it has "
"proven its ability to solve hard problems easily."
msgstr ""
"这个开发库最初命名为 Millstone Library. 它的第一个版本被应用到一个大型生产性"
"应用程序中, 这个程序是 IT Mill 公司为一家国际制药公司设计和开发的. IT Mill 公"
"司在 2001 年将这个应用程序开发完成, 而且它直到现在还在使用中. 此后, IT Mill "
"公司又使用这个库开发了几十个大型商业应用程序, 在这些应用程序的开发过程中, "
"Millstone Library 证明了它简单快速地解决复杂问题的能力."

#. Tag: para
#: chapter-introduction.xml:356
#, no-c-format
msgid ""
"The next generation of the library, IT Mill Toolkit Release 4, was released "
"in 2006. It introduced an entirely new AJAX-based presentation engine. This "
"allowed the development of AJAX applications without the need to worry about "
"communications between the client and the server."
msgstr ""
"Millstone Library 的下一代, IT Mill Toolkit Release 4, 发布于 2006 年. 它引入"
"了基于 AJAX 技术的全新的表现引擎. 这就使得开发者可以开发出 AJAX 应用程序, 而"
"完全不必关注客户端与服务器端的通信细节."

#. Tag: title
#: chapter-introduction.xml:364
#, no-c-format
msgid "Release 5 Into the Open"
msgstr "第 5 版, 走向开源"

#. Tag: primary
#: chapter-introduction.xml:367
#, no-c-format
msgid "IT Mill Toolkit"
msgstr ""

#. Tag: primary
#: chapter-introduction.xml:368
#, no-c-format
msgid "AJAX"
msgstr ""

#. Tag: para
#: chapter-introduction.xml:368
#, no-c-format
msgid ""
"IT Mill Toolkit 5, released initially at the end of 2007, took a significant "
"step further into AJAX. The client-side rendering of the user interface was "
"completely rewritten using GWT, the Google Web Toolkit."
msgstr ""
"IT Mill Toolkit 5, 初次发布于 2007 年末, 在 AJAX 方面又迈进了一大步. UI 组件"
"的客户端描绘改用 GWT(Google Web Toolkit) 完全重写过了."

#. Tag: para
#: chapter-introduction.xml:377
#, no-c-format
msgid ""
"IT Mill Toolkit 5 introduced many significant improvements both in the "
"server-side API and in the functionality. Rewriting the Client-Side Engine "
"with GWT allowed the use of Java both on the client and the server-side. The "
"transition from JavaScript to GWT made the development and integration of "
"custom components and customization of existing components much easier than "
"before, and it also allows easy integration of existing GWT components. The "
"adoption of GWT on the client-side did not, by itself, cause any changes in "
"the server-side API, because GWT is a browser technology that is hidden well "
"behind the API. Also theming was completely revised in IT Mill Toolkit 5."
msgstr ""
"IT Mill Toolkit 5 在服务端 API 和功能性两方面都引入了很多重大改进. 使用 GWT "
"改写客户端引擎使得客户端和服务端开发都可以统一使用 Java 语言. 从 JavaScript "
"到 GWT 的转换, 使得自定义组件的开发和集成, 以及对既有组件的定制化都变得比从前"
"更加简单, 也使得开发者可以非常简单地集成既有的 GWT 组件. 在客户端采用 GWT 并"
"没有导致服务器端 API 的变化, 因为 GWT 是浏览器端的技术, 它很好地隐藏在 API 之"
"后. 另外, 在 IT Mill Toolkit 5 中, Theme 也经过了完全的修订."

#. Tag: para
#: chapter-introduction.xml:390
#, no-c-format
msgid ""
"The Release 5 was published under the Apache License 2, an unrestrictive "
"open source license, to create faster expansion of the user base and to make "
"the formation of a developer community possible."
msgstr ""
"Release 5 采用无任何限制的开源许可协议 Apache License 2 发布, 因此使得用户数"
"量更快增长, 开发者社区也因此逐渐产生了."

#. Tag: title
#: chapter-introduction.xml:398
#, no-c-format
msgid "Birth of Vaadin Release 6"
msgstr "Vaadin Release 6 的诞生"

#. Tag: para
#: chapter-introduction.xml:400
#, no-c-format
msgid ""
"IT Mill Toolkit was renamed as <emphasis>Vaadin Framework</emphasis>, or "
"Vaadin in short, in spring 2009. Later IT Mill, the company, was also "
"renamed as Vaadin Ltd. Vaadin means an adult female semi-domesticated "
"mountain reindeer in Finnish."
msgstr ""
"2009 年春, IT Mill Toolkit 改名为 <emphasis>Vaadin Framework</emphasis>, 简"
"称 Vaadin. 之后不久 IT Mill 公司也相应的改名为 Vaadin 有限公司. Vaadin 是芬兰"
"语, 指一种半驯化的成年雌性驯鹿."

#. Tag: para
#: chapter-introduction.xml:407
#, no-c-format
msgid ""
"With Vaadin 6, the number of developers using the framework exploded. "
"Together with the release, the Vaadin Plugin for Eclipse was released, "
"helping the creation of Vaadin projects. The introduction of Vaadin "
"Directory in early 2010 gave it a further boost, as the number of available "
"components multiplied almost overnight. Many of the originally experimental "
"components have since then matured and are now used by thousands of "
"developers. In 2013, we are seeing tremendous growth in the ecosystem around "
"Vaadin. The size of the user community, at least if measured by forum "
"activity, has already gone past the competing server-side frameworks and "
"even GWT."
msgstr ""
"在 Vaadin 6 时代, 这个框架的用户数量大大扩展了. 随着 Vaadin 6 的发布, 还发布"
"了 Vaadin Plugin for Eclipse, 可以帮助开发者创建 Vaadin 工程. 2010 年早期, 随"
"着 Vaadin Directory 的引入, 可用 UI 组件的数量几乎在一夜之间增长了数倍, 带动"
"了 Vaadin 更快的发展. 早期的很多实验性组件, 逐渐发展成熟, 现在已被成千上万的"
"开发者采用了. 在 2013 年, 我们看到 Vaadin 周边生态系统发生了巨大的增长. 用户"
"社区的规模, 单以论坛活跃程度来计算的话, 已经超越了其他服务器端开发框架, 甚至"
"也超越了 GWT."

#. Tag: title
#: chapter-introduction.xml:422
#, no-c-format
msgid "The Major Revision with Vaadin 7"
msgstr "目前的主版本 Vaadin 7"

#. Tag: para
#: chapter-introduction.xml:424
#, no-c-format
msgid ""
"Vaadin 7 is a major revision that changes the Vaadin API much more than "
"Vaadin 6 did. It is certainly more web-oriented than Vaadin 6 was. We are "
"doing everything we can to help Vaadin rise high in the web universe. Some "
"of this work is easy and almost routine - fixing bugs and implementing "
"features. But going higher also requires standing firmer. That was one of "
"the aims of Vaadin 7 - redesigning the product so that the new architecture "
"enables Vaadin to reach over many long-standing challenges. Many of the "
"changes required breaking API compatibility with Vaadin 6, especially in the "
"client-side, but they are made with a strong desire to avoid carrying "
"unnecessary legacy burden far into the future. Vaadin 7 includes a "
"compatibility layer for making adoption of Vaadin 7 in existing applications "
"easier."
msgstr ""
"Vaadin 7 是最新发布的主版本, 这个版本中 Vaadin API 的变化比 Vaadin 6 更多. "
"与 Vaadin 6 相比, Vaadin 7 更加以 Web 为中心. 我们已经竭尽所能帮助 Vaadin 在 "
"Web 开发的世界中达到新的高度. 我们所做的工作有些是很简单的, 甚至只是例行公"
"事, 比如修改 bug, 实现新功能. 但站得更高也需要站得更稳. 这也是 Vaadin 7 的目"
"标之一:  重新设计这个产品, 用新的架构帮助 Vaadin 迎接更长期的挑战. Vaadin 7 "
"的很多变化使得它失去了与 Vaadin 6 在 API 层次上的兼容性, 尤其是在客户端, 但作"
"出这样的抉择是因为我们强烈地希望不要将无必要的历史性包袱继续背负下去. Vaadin "
"7 也包含了一个兼容层, 以便使在既有的应用程序中采用 Vaadin 7 更加简便一些."

#. Tag: para
#: chapter-introduction.xml:442
#, no-c-format
msgid ""
"Inclusion of the Google Web Toolkit in Vaadin 7 is a significant "
"development, as it means that we now provide support for GWT as well. When "
"Google opened the GWT development in summer 2012, Vaadin (the company) "
"joined the new GWT steering committee. As a member of the committee, Vaadin "
"can work towards the success of GWT as a foundation of the Java web "
"development community."
msgstr ""
"在 Vaadin 7 中包含 Google Web Toolkit 是一个重大进展, 这也就意味着我们现在支"
"持 GWT 了. 2012 年夏季 Google 公开了 GWT , Vaadin 公司加入了新的 GWT 指导委员"
"会. 作为委员会的一员, Vaadin 公司可以为 GWT 的成功贡献力量, 努力推动 GWT 成"
"为 Java Web 开发社区的基础."
